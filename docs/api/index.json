{
  "api/Niacomsoft.Eips.ActivatorUtilities.html": {
    "href": "api/Niacomsoft.Eips.ActivatorUtilities.html",
    "title": "Class ActivatorUtilities | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class ActivatorUtilities 提供了动态创建对象实例相关的辅助方法。 Inheritance Object ActivatorUtilities Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips Assembly : Niacomsoft.Eips.Common.dll Syntax public class ActivatorUtilities Methods | Improve this Doc View Source CreateInstance<T>(Object[]) 创建 T 类型的对象实例。 Declaration public static T CreateInstance<T>(params object[] args) where T : class Parameters Type Name Description Object [] args 构造函数参数数组。 Returns Type Description T T 类型的对象实例。 Type Parameters Name Description T 引用类型。 Exceptions Type Condition DynamicCreateObjectInstanceException 当调用 CreateInstance(Type, Object[]) 方法时，可能引发此类型的异常。 See Also Activator"
  },
  "api/Niacomsoft.Eips.DateTimeComparer.html": {
    "href": "api/Niacomsoft.Eips.DateTimeComparer.html",
    "title": "Struct DateTimeComparer | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Struct DateTimeComparer 提供了日期时间对比相关的方法。 Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : Niacomsoft.Eips Assembly : Niacomsoft.Eips.Common.dll Syntax public struct DateTimeComparer Constructors | Improve this Doc View Source DateTimeComparer(DateTime) 用于初始化一个 DateTimeComparer 类型。 Declaration public DateTimeComparer(DateTime begin) Parameters Type Name Description DateTime begin DateTime 类型的值。 | Improve this Doc View Source DateTimeComparer(DateTime, DateTime) 用于初始化一个 DateTimeComparer 类型。 Declaration public DateTimeComparer(DateTime begin, DateTime end) Parameters Type Name Description DateTime begin DateTime 类型的值。 DateTime end DateTime 类型的值。 | Improve this Doc View Source DateTimeComparer(DateTimeOffset) 用于初始化一个 DateTimeComparer 类型。 Declaration public DateTimeComparer(DateTimeOffset begin) Parameters Type Name Description DateTimeOffset begin DateTimeOffset 类型的值。 | Improve this Doc View Source DateTimeComparer(DateTimeOffset, DateTimeOffset) 用于初始化一个 DateTimeComparer 类型。 Declaration public DateTimeComparer(DateTimeOffset begin, DateTimeOffset end) Parameters Type Name Description DateTimeOffset begin DateTimeOffset 类型的值。 DateTimeOffset end DateTimeOffset 类型的值。 Properties | Improve this Doc View Source After 日期时间 Begin 是否在 End 之后。 计算精度仅精确到“秒“。 Declaration public readonly bool After { get; } Property Value Type Description Boolean 获取一个值，用于表示日期时间 Begin 是否在 End 之后。 See Also TimeSpan TotalSeconds Intervals | Improve this Doc View Source Before 日期时间 Begin 是否在 End 之前。 计算精度仅精确到“秒“。 Declaration public readonly bool Before { get; } Property Value Type Description Boolean 获取一个值，用于表示日期时间 Begin 是否在 End 之后。 See Also TimeSpan TotalSeconds Intervals | Improve this Doc View Source Begin 用于对比的起始日期时间。 Declaration public DateTime Begin { get; } Property Value Type Description DateTime 获取一个值，用于表示用于对比的起始日期时间。 | Improve this Doc View Source End 用于对比的截止日期时间。 Declaration public DateTime End { get; } Property Value Type Description DateTime 获取一个值，用于表示用于对比的截止日期时间。 | Improve this Doc View Source Intervals End 和 Begin 的时间间隔。 Declaration public readonly TimeSpan Intervals { get; } Property Value Type Description TimeSpan 获取一个值，用于表示 End 和 Begin 的时间间隔。 See Also TimeSpan | Improve this Doc View Source IsSameDay Begin 和 End 是否同年同月同日。 Declaration public readonly bool IsSameDay { get; } Property Value Type Description Boolean 获取一个值，用于表示 Begin 和 End 是否同年同月同日。 | Improve this Doc View Source IsSameMonth Begin 和 End 是否同年同月。 Declaration public readonly bool IsSameMonth { get; } Property Value Type Description Boolean 获取一个值，用于表示 Begin 和 End 是否同年同月。 | Improve this Doc View Source IsSameYear Begin 和 End 是否同年。 Declaration public readonly bool IsSameYear { get; } Property Value Type Description Boolean 获取一个值，用于表示 Begin 和 End 是否同年。 See Also DateTime"
  },
  "api/Niacomsoft.Eips.DateTimeDescriptor.html": {
    "href": "api/Niacomsoft.Eips.DateTimeDescriptor.html",
    "title": "Class DateTimeDescriptor | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class DateTimeDescriptor 提供了描述日期时间相关的方法。 Inheritance Object DateTimeDescriptor Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips Assembly : Niacomsoft.Eips.Common.dll Syntax public class DateTimeDescriptor Methods | Improve this Doc View Source GetDescription(Nullable<DateTime>) 获取日期时间的描述。 此方法将使用 dateTime 与 UtcNow 进行对比。 Declaration public static string GetDescription(DateTime? dateTime) Parameters Type Name Description Nullable < DateTime > dateTime 可为空的 DateTime 类型的值。 Returns Type Description String 日期时间的描述信息。 当 dateTime .HasValue 等于 false 时，将返回 null 。 | Improve this Doc View Source GetDescription(Nullable<DateTimeOffset>) 获取日期时间的描述。 Declaration public static string GetDescription(DateTimeOffset? dateTime) Parameters Type Name Description Nullable < DateTimeOffset > dateTime 可为空的 DateTimeOffset 类型的值。 Returns Type Description String 日期时间的描述信息。 当 dateTime .HasValue 等于 false 时，将返回 null 。"
  },
  "api/Niacomsoft.Eips.Defaults.html": {
    "href": "api/Niacomsoft.Eips.Defaults.html",
    "title": "Class Defaults | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class Defaults 提供了企业私有 SaaS 服务相关的默认值。 Inheritance Object Defaults Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips Assembly : Niacomsoft.Eips.Common.dll Syntax public class Defaults Fields | Improve this Doc View Source DefaultDiagnosticCategory 默认的诊断器类别。 Declaration public const string DefaultDiagnosticCategory = \"EIPS\" Field Value Type Description String | Improve this Doc View Source DefaultEncoding 默认的编码程序。 Encoding 类型的对象实例。 Declaration public static readonly Encoding DefaultEncoding Field Value Type Description Encoding See Also Encoding UTF8Encoding"
  },
  "api/Niacomsoft.Eips.Diagnostics.html": {
    "href": "api/Niacomsoft.Eips.Diagnostics.html",
    "title": "Namespace Niacomsoft.Eips.Diagnostics | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Namespace Niacomsoft.Eips.Diagnostics Classes TraceInformation 提供了诊断内容相关的方法。 TraceInformation<TTarget> 提供了诊断内容相关的方法。 TraceInformationBuilder 提供了构建 TraceInformation 类型的对象实例相关的方法。"
  },
  "api/Niacomsoft.Eips.Diagnostics.TraceInformation.html": {
    "href": "api/Niacomsoft.Eips.Diagnostics.TraceInformation.html",
    "title": "Class TraceInformation | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class TraceInformation 提供了诊断内容相关的方法。 Inheritance Object TraceInformation TraceInformation<TTarget> Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips.Diagnostics Assembly : Niacomsoft.Eips.Common.dll Syntax public class TraceInformation Constructors | Improve this Doc View Source TraceInformation(String) 用于初始化一个 TraceInformation 类型的对象实例。 Declaration public TraceInformation(string message) Parameters Type Name Description String message 诊断信息。 | Improve this Doc View Source TraceInformation(String, String) 用于初始化一个 TraceInformation 类型的对象实例。 Declaration public TraceInformation(string method, string message) Parameters Type Name Description String method 需要诊断的方法名称。 String message 诊断信息。 | Improve this Doc View Source TraceInformation(Type, String) 用于初始化一个 TraceInformation 类型的对象实例。 Declaration public TraceInformation(Type target, string message) Parameters Type Name Description Type target 需要诊断的目标类型。 Type 类型的对象实例。 String message 诊断信息。 | Improve this Doc View Source TraceInformation(Type, String, String) 用于初始化一个 TraceInformation 类型的对象实例。 Declaration public TraceInformation(Type target, string method, string message) Parameters Type Name Description Type target 需要诊断的目标类型。 Type 类型的对象实例。 String method 需要诊断的方法名称。 String message 诊断信息。 Properties | Improve this Doc View Source Message 诊断信息。 Declaration public virtual string Message { get; } Property Value Type Description String 获取一个字符串，用于表示诊断信息。 | Improve this Doc View Source MethodName 需要诊断的方法名称。 Declaration public virtual string MethodName { get; } Property Value Type Description String 获取一个字符串，用于表示需要诊断的方法名称。 | Improve this Doc View Source Target 需要诊断的目标类型。 Declaration public virtual Type Target { get; } Property Value Type Description Type 获取 Type 类型的对象实例，用于表示需要诊断的目标类型。 See Also Type Methods | Improve this Doc View Source GetUniversalMessagePrefix() 获取用于输出的消息前缀。 Declaration protected virtual string GetUniversalMessagePrefix() Returns Type Description String 统一诊断信息前缀。 | Improve this Doc View Source ToString() 获取完整的诊断信息。 Declaration public override string ToString() Returns Type Description String 完整的诊断信息。 Overrides Object.ToString() | Improve this Doc View Source ToString(Object[]) 获取完整的诊断信息。 Declaration public virtual string ToString(params object[] args) Parameters Type Name Description Object [] args 诊断信息格式化参数。 Returns Type Description String 完整的诊断信息。"
  },
  "api/Niacomsoft.Eips.Diagnostics.TraceInformation-1.html": {
    "href": "api/Niacomsoft.Eips.Diagnostics.TraceInformation-1.html",
    "title": "Class TraceInformation<TTarget> | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class TraceInformation<TTarget> 提供了诊断内容相关的方法。 Inheritance Object TraceInformation TraceInformation<TTarget> Inherited Members TraceInformation.GetUniversalMessagePrefix() TraceInformation.Message TraceInformation.MethodName TraceInformation.Target TraceInformation.ToString() TraceInformation.ToString(Object[]) Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips.Diagnostics Assembly : Niacomsoft.Eips.Common.dll Syntax public class TraceInformation<TTarget> : TraceInformation Type Parameters Name Description TTarget 需要诊断的目标类型。 Constructors | Improve this Doc View Source TraceInformation(String) 用于初始化一个 TraceInformation<TTarget> 类型的对象实例。 Declaration public TraceInformation(string message) Parameters Type Name Description String message 诊断信息。 | Improve this Doc View Source TraceInformation(String, String) 用于初始化一个 TraceInformation<TTarget> 类型的对象实例。 Declaration public TraceInformation(string method, string message) Parameters Type Name Description String method 需要诊断的方法名称。 String message 诊断信息。 See Also TraceInformation"
  },
  "api/Niacomsoft.Eips.Diagnostics.TraceInformationBuilder.html": {
    "href": "api/Niacomsoft.Eips.Diagnostics.TraceInformationBuilder.html",
    "title": "Class TraceInformationBuilder | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class TraceInformationBuilder 提供了构建 TraceInformation 类型的对象实例相关的方法。 Inheritance Object TraceInformationBuilder Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips.Diagnostics Assembly : Niacomsoft.Eips.Common.dll Syntax public class TraceInformationBuilder Constructors | Improve this Doc View Source TraceInformationBuilder() 用于初始化一个 TraceInformationBuilder 类型的对象实例。 Declaration public TraceInformationBuilder() Methods | Improve this Doc View Source Build() 构建 TraceInformation 类型的对象实例。 Declaration public virtual TraceInformation Build() Returns Type Description TraceInformation 派生自 TraceInformation 类型的对象实例。 See Also TraceInformation | Improve this Doc View Source InternalReset() 重置所有字段。 Declaration protected virtual void InternalReset() | Improve this Doc View Source Reset() 重置 TraceInformationBuilder 。 Declaration public virtual TraceInformationBuilder Reset() Returns Type Description TraceInformationBuilder TraceInformationBuilder 类型的对象实例。 | Improve this Doc View Source WithMessage(String) 设置调试消息。 Declaration public virtual TraceInformationBuilder WithMessage(string message) Parameters Type Name Description String message 调试消息。 Returns Type Description TraceInformationBuilder TraceInformationBuilder 类型的对象实例。 | Improve this Doc View Source WithMethod(String) 设置需要调试的方法名称。 Declaration public virtual TraceInformationBuilder WithMethod(string method) Parameters Type Name Description String method 方法名称。 Returns Type Description TraceInformationBuilder TraceInformationBuilder 类型的对象实例。 | Improve this Doc View Source WithTarget(Type) 设置需要调试的目标类型。 Declaration public virtual TraceInformationBuilder WithTarget(Type target) Parameters Type Name Description Type target 需要调试的目标类型。 Type 类型的对象实例。 Returns Type Description TraceInformationBuilder TraceInformationBuilder 类型的对象实例。 | Improve this Doc View Source WithTarget<TTarget>() 设置需要调试的目标类型。 Declaration public virtual TraceInformationBuilder WithTarget<TTarget>() Returns Type Description TraceInformationBuilder TraceInformationBuilder 类型的对象实例。 Type Parameters Name Description TTarget 需要调试的目标类型。"
  },
  "api/Niacomsoft.Eips.DynamicCreateObjectInstanceException.html": {
    "href": "api/Niacomsoft.Eips.DynamicCreateObjectInstanceException.html",
    "title": "Class DynamicCreateObjectInstanceException | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class DynamicCreateObjectInstanceException 当调用 CreateInstance(Type, Object[]) 方法动态创建对象实例时，可能引发此类型的异常。 密闭的，不可以从此类型派生。 Inheritance Object Exception DynamicCreateObjectInstanceException Implements ISerializable _Exception Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace : Niacomsoft.Eips Assembly : Niacomsoft.Eips.Common.dll Syntax [Serializable] public sealed class DynamicCreateObjectInstanceException : Exception, ISerializable, _Exception Constructors | Improve this Doc View Source DynamicCreateObjectInstanceException(Type, Exception) 用于初始化一个 DynamicCreateObjectInstanceException 类型的对象实例。 Declaration public DynamicCreateObjectInstanceException(Type referenceType, Exception innerException) Parameters Type Name Description Type referenceType 引用类型。 Exception innerException 引发此异常的 Exception 类型的对象实例。 Properties | Improve this Doc View Source TargetType 目标引用类型。 Declaration public Type TargetType { get; } Property Value Type Description Type 获取 Type 类型的对象实例，用于表示目标引用类型。 See Also Type Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception See Also Exception"
  },
  "api/Niacomsoft.Eips.EmptyCompareOptions.html": {
    "href": "api/Niacomsoft.Eips.EmptyCompareOptions.html",
    "title": "Enum EmptyCompareOptions | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Enum EmptyCompareOptions 定义了空白字符串比较选项枚举类型。 Namespace : Niacomsoft.Eips Assembly : Niacomsoft.Eips.Common.dll Syntax public enum EmptyCompareOptions Fields Name Description Default 默认的选项。等效于 IncludeWhiteSpace 。 IncludeWhiteSpace 对比时不仅比较 Empty ，还需要比较空格符。 OnlyEmpty 仅比较 Empty 。 OnlyNull 仅比较是否等于 null 。"
  },
  "api/Niacomsoft.Eips.Globalization.ContextCultureConfigurator.html": {
    "href": "api/Niacomsoft.Eips.Globalization.ContextCultureConfigurator.html",
    "title": "Class ContextCultureConfigurator | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class ContextCultureConfigurator 提供了配置上下文文化区域相关的方法。 Inheritance Object ContextCultureConfigurator Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips.Globalization Assembly : Niacomsoft.Eips.Common.dll Syntax public class ContextCultureConfigurator Methods | Improve this Doc View Source SetDefaultThreadCurrentCulture(SupportedCultures) 设置应用程序域中线程默认文化区域。 Declaration public static void SetDefaultThreadCurrentCulture(SupportedCultures supported = SupportedCultures.China) Parameters Type Name Description SupportedCultures supported Enterprise InPrivate SaaS - EIPS 提供的文化区域信息。 SupportedCultures 类型的值。 See Also SupportedCultures | Improve this Doc View Source SetDefaultThreadCurrentCulture(Int32) 设置应用程序域中线程默认文化区域。 Declaration public static void SetDefaultThreadCurrentCulture(int lcid) Parameters Type Name Description Int32 lcid 文化区域标识。 | Improve this Doc View Source SetThreadCurrentCulture(SupportedCultures) 设置当前线程的文化区域信息。 Declaration public static void SetThreadCurrentCulture(SupportedCultures supported = SupportedCultures.China) Parameters Type Name Description SupportedCultures supported Enterprise InPrivate SaaS - EIPS 提供的文化区域信息。 SupportedCultures 类型的值。 See Also SupportedCultures | Improve this Doc View Source SetThreadCurrentCulture(Int32) 设置当前线程的文化区域信息。 Declaration public static void SetThreadCurrentCulture(int lcid) Parameters Type Name Description Int32 lcid 文化区域标识。"
  },
  "api/Niacomsoft.Eips.Globalization.html": {
    "href": "api/Niacomsoft.Eips.Globalization.html",
    "title": "Namespace Niacomsoft.Eips.Globalization | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Namespace Niacomsoft.Eips.Globalization Classes ContextCultureConfigurator 提供了配置上下文文化区域相关的方法。 SR 提供了字符串资源相关的方法。 Enums SupportedCultures 定义了 Enterprise InPrivate SaaS (EIPS) 默认提供的文化区域枚举类型。"
  },
  "api/Niacomsoft.Eips.Globalization.SR.html": {
    "href": "api/Niacomsoft.Eips.Globalization.SR.html",
    "title": "Class SR | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class SR 提供了字符串资源相关的方法。 Inheritance Object SR Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips.Globalization Assembly : Niacomsoft.Eips.Globalization.Supported.dll Syntax public class SR Methods | Improve this Doc View Source Format(String, Object[]) 获取指定名称的资源字符串，并调用 Format(String, Object[]) 方法进行格式化。 Declaration public static string Format(string resourceName, params object[] args) Parameters Type Name Description String resourceName 资源名称。 Object [] args 格式化参数数组。 Returns Type Description String 格式化后的资源字符串。 See Also Format(String, Object[]) | Improve this Doc View Source GetString(String) 获取指定名称的资源字符串。 Declaration public static string GetString(string resourceName) Parameters Type Name Description String resourceName 资源名称。 Returns Type Description String 资源字符串。"
  },
  "api/Niacomsoft.Eips.Globalization.SupportedCultures.html": {
    "href": "api/Niacomsoft.Eips.Globalization.SupportedCultures.html",
    "title": "Enum SupportedCultures | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Enum SupportedCultures 定义了 Enterprise InPrivate SaaS (EIPS) 默认提供的文化区域枚举类型。 Namespace : Niacomsoft.Eips.Globalization Assembly : Niacomsoft.Eips.Common.dll Syntax public enum SupportedCultures Fields Name Description China 中文（中国） Default 默认的文化区域。等效于 China Taiwan 中文（台湾） USA 英语（美国）"
  },
  "api/Niacomsoft.Eips.html": {
    "href": "api/Niacomsoft.Eips.html",
    "title": "Namespace Niacomsoft.Eips | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Namespace Niacomsoft.Eips Classes ActivatorUtilities 提供了动态创建对象实例相关的辅助方法。 DateTimeDescriptor 提供了描述日期时间相关的方法。 Defaults 提供了企业私有 SaaS 服务相关的默认值。 DynamicCreateObjectInstanceException 当调用 CreateInstance(Type, Object[]) 方法动态创建对象实例时，可能引发此类型的异常。 密闭的，不可以从此类型派生。 ParameterGuard 提供了安全的参数值相关的方法。 ReferenceTypeEqualityComparer 提供了引用类型相等对比相关的方法。 StringEqualityComparer 提供了字符串相等对比相关的方法。 StringUtilities 提供了字符串相关的辅助方法。 ValueTypeComparer 提供了值类型比较相关的方法。 Structs DateTimeComparer 提供了日期时间对比相关的方法。 Enums EmptyCompareOptions 定义了空白字符串比较选项枚举类型。 NumberComparisonSymbols 定义了数字比较符号枚举类型。"
  },
  "api/Niacomsoft.Eips.NumberComparisonSymbols.html": {
    "href": "api/Niacomsoft.Eips.NumberComparisonSymbols.html",
    "title": "Enum NumberComparisonSymbols | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Enum NumberComparisonSymbols 定义了数字比较符号枚举类型。 Namespace : Niacomsoft.Eips Assembly : Niacomsoft.Eips.Common.dll Syntax public enum NumberComparisonSymbols Fields Name Description Default 默认的。 等效于 Equal 。 Equal 等于号。 GreaterThan 大于号。 GreaterThanOrEqual 大于等于号。 LessThan 小于号。 LessThanOrEqual 小于等于号。"
  },
  "api/Niacomsoft.Eips.ParameterGuard.html": {
    "href": "api/Niacomsoft.Eips.ParameterGuard.html",
    "title": "Class ParameterGuard | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class ParameterGuard 提供了安全的参数值相关的方法。 Inheritance Object ParameterGuard Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips Assembly : Niacomsoft.Eips.Common.dll Syntax public class ParameterGuard Methods | Improve this Doc View Source SafeGet(String, String, EmptyCompareOptions) 当 Empty(String, EmptyCompareOptions) 返回 true 时，则返回 safeString ；否则返回 s 。 Declaration public static string SafeGet(string s, string safeString, EmptyCompareOptions options = EmptyCompareOptions.OnlyNull) Parameters Type Name Description String s 原始字符串。 String safeString 安全字符串。 EmptyCompareOptions options 空白字符串选项。 EmptyCompareOptions 类型的值。 Returns Type Description String 字符串。 See Also EmptyCompareOptions | Improve this Doc View Source SafeGet<T>(T, Func<T>) 当 instance 等于 null 时，则使用 safeGuard 的返回值；否则使用 instance 。 Declaration public static T SafeGet<T>(T instance, Func<T> safeGuard) where T : class Parameters Type Name Description T instance T 类型的对象实例。 Func <T> safeGuard 构建安全参数值的方法。 Returns Type Description T T 类型的对象实例。 Type Parameters Name Description T 引用类型。 | Improve this Doc View Source SafeGet<T>(Nullable<T>, T) 当 value.HasValue 等于 true 时，则返回 value.Value ；否则返回 safeValue 。 Declaration public static T SafeGet<T>(T? value, T safeValue) where T : struct Parameters Type Name Description Nullable <T> value 可能为空的 T 类型的值。 T safeValue T 类型的值。 Returns Type Description T T 类型的值。 Type Parameters Name Description T 值类型。 See Also Nullable <T> | Improve this Doc View Source TrueGet<T>(T, Func<T, Boolean>, Func<T>) 当条件表达式 where 返回 true 时，则使用 safeGuard 作为参数值；否则使用 source 作为最终参数值。 Declaration public static T TrueGet<T>(T source, Func<T, bool> where, Func<T> safeGuard) Parameters Type Name Description T source 原始参数值。 Func <T, Boolean > where 条件表达式。 Func <T> safeGuard 构建安全参数值的方法。 Returns Type Description T T 类型的参数值。 Type Parameters Name Description T 参数值类型。 Exceptions Type Condition ArgumentNullException 当 safeGuard 等于 null 时，将引发此类型的异常。 See Also Func <T, TResult> Func <TResult>"
  },
  "api/Niacomsoft.Eips.ReferenceTypeEqualityComparer.html": {
    "href": "api/Niacomsoft.Eips.ReferenceTypeEqualityComparer.html",
    "title": "Class ReferenceTypeEqualityComparer | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class ReferenceTypeEqualityComparer 提供了引用类型相等对比相关的方法。 Inheritance Object ReferenceTypeEqualityComparer Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips Assembly : Niacomsoft.Eips.Common.dll Syntax public class ReferenceTypeEqualityComparer Methods | Improve this Doc View Source None(Object) 用于校验 obj 是否等于 null 。 Declaration public static bool None(object obj) Parameters Type Name Description Object obj 需要校验的对象实例。 Returns Type Description Boolean 当 obj 等于 null 时，则返回 true ；否则返回 false 。 | Improve this Doc View Source NotNone(Object) 用于校验 obj 是否不等于 null 。 Declaration public static bool NotNone(object obj) Parameters Type Name Description Object obj 需要校验的对象实例。 Returns Type Description Boolean 当 obj 不等于 null 时，则返回 true ；否则返回 false 。 See Also None(Object)"
  },
  "api/Niacomsoft.Eips.StringEqualityComparer.html": {
    "href": "api/Niacomsoft.Eips.StringEqualityComparer.html",
    "title": "Class StringEqualityComparer | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class StringEqualityComparer 提供了字符串相等对比相关的方法。 Inheritance Object StringEqualityComparer Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips Assembly : Niacomsoft.Eips.Common.dll Syntax public class StringEqualityComparer Methods | Improve this Doc View Source Empty(String, EmptyCompareOptions) 用于校验字符串 s 是否等于 null 、 Empty 或者空格符（需要参考 options 的值）。 Declaration public static bool Empty(string s, EmptyCompareOptions options = EmptyCompareOptions.IncludeWhiteSpace) Parameters Type Name Description String s 需要对比的字符串。 EmptyCompareOptions options 空白字符串对比选项。 默认为 Default 。 Returns Type Description Boolean 当字符串 s 等于 null 、 Empty 或者空格符（需要参考 options 的值）时，则返回 true ；否则返回 false 。 See Also EmptyCompareOptions | Improve this Doc View Source IgnoreCaseEquals(String, String) 忽略字符串的大小写，对比 s1 与 s2 是否相等。 Declaration public static bool IgnoreCaseEquals(string s1, string s2) Parameters Type Name Description String s1 字符串。 String s2 字符串。 Returns Type Description Boolean 当 s1 与 s2 忽略大小写相等时，则返回 true ；否则返回 false 。 当 s1 和 s2 都为 null 时，则返回 true ；否则返回 false 。 See Also Equals(String, StringComparison)"
  },
  "api/Niacomsoft.Eips.StringUtilities.html": {
    "href": "api/Niacomsoft.Eips.StringUtilities.html",
    "title": "Class StringUtilities | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class StringUtilities 提供了字符串相关的辅助方法。 Inheritance Object StringUtilities Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips Assembly : Niacomsoft.Eips.Common.dll Syntax public class StringUtilities Methods | Improve this Doc View Source FromBase64String(String) 从 BASE-64 格式字符串获取字节数组。 Declaration public static byte[] FromBase64String(string base64Str) Parameters Type Name Description String base64Str BASE-64 格式字符串。 Returns Type Description Byte [] 字节数组。 当字符串 base64Str 等于 null 或者 Empty 时，将返回 null 。 Exceptions Type Condition FormatException 当调用 FromBase64String(String) 方法时，可能引发此类型的异常。 See Also Convert | Improve this Doc View Source GetBytes(String, Encoding) 使用指定的编码获取字符串 s 的字节数组。 Declaration public static byte[] GetBytes(string s, Encoding encoding = null) Parameters Type Name Description String s 字符串。 Encoding encoding 编码程序。 派生自 Encoding 类型的对象实例。 当 encoding 等于 null 时，将使用 DefaultEncoding 。 Returns Type Description Byte [] 字节数组。 当 s 等于 null 时，将返回 null 。 See Also Encoding DefaultEncoding | Improve this Doc View Source GetString(Byte[], Encoding) 使用指定的编码获取字符串。 Declaration public static string GetString(byte[] bytes, Encoding encoding = null) Parameters Type Name Description Byte [] bytes 字节数组。 Encoding encoding 编码程序。 当 encoding 等于 null 时，将使用 DefaultEncoding 。 Returns Type Description String 字符串。 当 bytes 等于 null 或者长度等于 0 时，将返回 null 。 See Also Encoding DefaultEncoding | Improve this Doc View Source ToBase64String(Byte[], Base64FormattingOptions) 将字节数组 bytes 转换成 BASE-64 格式字符串。 Declaration public static string ToBase64String(byte[] bytes, Base64FormattingOptions options = Base64FormattingOptions.None) Parameters Type Name Description Byte [] bytes 字节数组。 Base64FormattingOptions options BASE-64 格式化选项。 Base64FormattingOptions 类型的值。 Returns Type Description String BASE-64 格式字符串。 当 bytes 等于 null 或者长度等于 0 时，将返回 null 。 See Also Base64FormattingOptions Convert | Improve this Doc View Source ToCurrency(Decimal, Int32, CultureInfo) 将 value 转换成货币格式字符串。 Declaration public static string ToCurrency(decimal value, int precision = 2, CultureInfo culture = null) Parameters Type Name Description Decimal value Decimal 类型的值。 Int32 precision 货币精度。 CultureInfo culture 文化区域。 CultureInfo 类型的对象实例。 Returns Type Description String 货币字符串。 See Also CultureInfo | Improve this Doc View Source ToCurrency(Double, Int32, CultureInfo) 将 value 转换成货币格式字符串。 Declaration public static string ToCurrency(double value, int precision = 2, CultureInfo culture = null) Parameters Type Name Description Double value Double 类型的值。 Int32 precision 货币精度。 CultureInfo culture 文化区域。 CultureInfo 类型的对象实例。 Returns Type Description String 货币字符串。 See Also CultureInfo | Improve this Doc View Source ToCurrency(Int16, Int16, CultureInfo) 将 value 转换成货币格式字符串。 Declaration public static string ToCurrency(short value, short precision = 2, CultureInfo culture = null) Parameters Type Name Description Int16 value Int16 类型的值。 Int16 precision 货币精度。 CultureInfo culture 文化区域。 CultureInfo 类型的对象实例。 Returns Type Description String 货币字符串。 See Also CultureInfo | Improve this Doc View Source ToCurrency(Int32, Int32, CultureInfo) 将 value 转换成货币格式字符串。 Declaration public static string ToCurrency(int value, int precision = 2, CultureInfo culture = null) Parameters Type Name Description Int32 value Int32 类型的值。 Int32 precision 货币精度。 CultureInfo culture 文化区域。 CultureInfo 类型的对象实例。 Returns Type Description String 货币字符串。 See Also CultureInfo | Improve this Doc View Source ToCurrency(Int64, Int64, CultureInfo) 将 value 转换成货币格式字符串。 Declaration public static string ToCurrency(long value, long precision = 2L, CultureInfo culture = null) Parameters Type Name Description Int64 value Int64 类型的值。 Int64 precision 货币精度。 CultureInfo culture 文化区域。 CultureInfo 类型的对象实例。 Returns Type Description String 货币字符串。 See Also CultureInfo | Improve this Doc View Source ToCurrency(Single, Int32, CultureInfo) 将 value 转换成货币格式字符串。 Declaration public static string ToCurrency(float value, int precision = 2, CultureInfo culture = null) Parameters Type Name Description Single value Single 类型的值。 Int32 precision 货币精度。 CultureInfo culture 文化区域。 CultureInfo 类型的对象实例。 Returns Type Description String 货币字符串。 See Also CultureInfo | Improve this Doc View Source ToDateTime(String) 将字符串转换成等效的 DateTime 类型的值。 Declaration public static DateTime ToDateTime(string s) Parameters Type Name Description String s 字符串。 Returns Type Description DateTime 等效的 DateTime 类型的值。 Exceptions Type Condition FormatException 当调用 Parse(String) 方法时，可能引发此类型的异常。 OverflowException 当调用 Parse(String) 方法时，可能引发此类型的异常。 | Improve this Doc View Source ToDecimal(String) 将字符串转换成等效的 Decimal 类型的值。 Declaration public static decimal ToDecimal(string s) Parameters Type Name Description String s 字符串。 Returns Type Description Decimal 等效的 Decimal 类型的值。 Exceptions Type Condition FormatException 当调用 Parse(String) 方法时，可能引发此类型的异常。 OverflowException 当调用 Parse(String) 方法时，可能引发此类型的异常。 | Improve this Doc View Source ToDouble(String) 将字符串转换成等效的 Double 类型的值。 Declaration public static double ToDouble(string s) Parameters Type Name Description String s 字符串。 Returns Type Description Double 等效的 Double 类型的值。 Exceptions Type Condition FormatException 当调用 Parse(String) 方法时，可能引发此类型的异常。 OverflowException 当调用 Parse(String) 方法时，可能引发此类型的异常。 | Improve this Doc View Source ToFixed(Decimal, Int32) 将 value 转换成固定点数字字符串。 Declaration public static string ToFixed(decimal value, int precision = 2) Parameters Type Name Description Decimal value Decimal 类型的值。 Int32 precision 小数精度。 Returns Type Description String 固定小数精度的数字字符串。 | Improve this Doc View Source ToFixed(Double, Int32) 将 value 转换成固定点数字字符串。 Declaration public static string ToFixed(double value, int precision = 2) Parameters Type Name Description Double value Double 类型的值。 Int32 precision 小数精度。 Returns Type Description String 固定小数精度的数字字符串。 | Improve this Doc View Source ToFixed(Int16, Int16) 将 value 转换成固定点数字字符串。 Declaration public static string ToFixed(short value, short precision = 2) Parameters Type Name Description Int16 value Int16 类型的值。 Int16 precision 小数精度。 Returns Type Description String 固定小数精度的数字字符串。 | Improve this Doc View Source ToFixed(Int32, Int32) 将 value 转换成固定点数字字符串。 Declaration public static string ToFixed(int value, int precision = 2) Parameters Type Name Description Int32 value Int32 类型的值。 Int32 precision 小数精度。 Returns Type Description String 固定小数精度的数字字符串。 | Improve this Doc View Source ToFixed(Int64, Int64) 将 value 转换成固定点数字字符串。 Declaration public static string ToFixed(long value, long precision = 2L) Parameters Type Name Description Int64 value Int64 类型的值。 Int64 precision 小数精度。 Returns Type Description String 固定小数精度的数字字符串。 | Improve this Doc View Source ToFixed(Single, Int32) 将 value 转换成固定点数字字符串。 Declaration public static string ToFixed(float value, int precision = 2) Parameters Type Name Description Single value Single 类型的值。 Int32 precision 小数精度。 Returns Type Description String 固定小数精度的数字字符串。 | Improve this Doc View Source ToGuid(String) 将字符串转换成等效的 Guid 类型的值。 Declaration public static Guid ToGuid(string s) Parameters Type Name Description String s 字符串。 Returns Type Description Guid 等效的 Guid 类型的值。 Exceptions Type Condition FormatException 当调用 Parse(String) 方法时，可能引发此类型的异常。 OverflowException 当调用 Parse(String) 方法时，可能引发此类型的异常。 | Improve this Doc View Source ToHex(Int16) 将 value 转换成十六进制字符串。 Declaration public static string ToHex(short value) Parameters Type Name Description Int16 value Int16 类型的值。 Returns Type Description String 十六进制字符串。 | Improve this Doc View Source ToHex(Int32) 将 value 转换成十六进制字符串。 Declaration public static string ToHex(int value) Parameters Type Name Description Int32 value Int32 类型的值。 Returns Type Description String 十六进制字符串。 | Improve this Doc View Source ToHex(Int64) 将 value 转换成十六进制字符串。 Declaration public static string ToHex(long value) Parameters Type Name Description Int64 value Int64 类型的值。 Returns Type Description String 十六进制字符串。 | Improve this Doc View Source ToInt(String) 将字符串转换成等效的 Int32 类型的值。 Declaration public static int ToInt(string s) Parameters Type Name Description String s 字符串。 Returns Type Description Int32 等效的 Int32 类型的值。 Exceptions Type Condition FormatException 当调用 Parse(String) 方法时，可能引发此类型的异常。 OverflowException 当调用 Parse(String) 方法时，可能引发此类型的异常。 | Improve this Doc View Source ToInt16(String) 将字符串转换成等效的 Int16 类型的值。 Declaration public static short ToInt16(string s) Parameters Type Name Description String s 字符串。 Returns Type Description Int16 等效的 Int16 类型的值。 Exceptions Type Condition FormatException 当调用 Parse(String) 方法时，可能引发此类型的异常。 OverflowException 当调用 Parse(String) 方法时，可能引发此类型的异常。 | Improve this Doc View Source ToInt64(String) 将字符串转换成等效的 Int64 类型的值。 Declaration public static long ToInt64(string s) Parameters Type Name Description String s 字符串。 Returns Type Description Int64 等效的 Int64 类型的值。 Exceptions Type Condition FormatException 当调用 Parse(String) 方法时，可能引发此类型的异常。 OverflowException 当调用 Parse(String) 方法时，可能引发此类型的异常。 | Improve this Doc View Source ToSingle(String) 将字符串转换成等效的 Single 类型的值。 Declaration public static float ToSingle(string s) Parameters Type Name Description String s 字符串。 Returns Type Description Single 等效的 Single 类型的值。 Exceptions Type Condition FormatException 当调用 Parse(String) 方法时，可能引发此类型的异常。 OverflowException 当调用 Parse(String) 方法时，可能引发此类型的异常。 | Improve this Doc View Source TryToDateTime(String) 尝试将字符串转换成等效的可为空的 DateTime 类型的值。 Declaration public static DateTime? TryToDateTime(string s) Parameters Type Name Description String s 字符串。 Returns Type Description Nullable < DateTime > 当调用 TryParse(String, DateTime) 方法返回 false 时，将返回 null 。 | Improve this Doc View Source TryToDecimal(String) 尝试将字符串转换成等效的可为空的 Decimal 类型的值。 Declaration public static decimal? TryToDecimal(string s) Parameters Type Name Description String s 字符串。 Returns Type Description Nullable < Decimal > 当调用 TryParse(String, Decimal) 方法返回 false 时，将返回 null 。 | Improve this Doc View Source TryToDouble(String) 尝试将字符串转换成等效的可为空的 Double 类型的值。 Declaration public static double? TryToDouble(string s) Parameters Type Name Description String s 字符串。 Returns Type Description Nullable < Double > 当调用 TryParse(String, Double) 方法返回 false 时，将返回 null 。 | Improve this Doc View Source TryToGuid(String) 尝试将字符串转换成等效的可为空的 Guid 类型的值。 Declaration public static Guid? TryToGuid(string s) Parameters Type Name Description String s 字符串。 Returns Type Description Nullable < Guid > 当调用 TryParse(String, Guid) 方法返回 false 时，将返回 null 。 | Improve this Doc View Source TryToInt(String) 尝试将字符串转换成等效的可为空的 Int32 类型的值。 Declaration public static int? TryToInt(string s) Parameters Type Name Description String s 字符串。 Returns Type Description Nullable < Int32 > 当调用 TryParse(String, Int32) 方法返回 false 时，将返回 null 。 | Improve this Doc View Source TryToInt16(String) 尝试将字符串转换成等效的可为空的 Int16 类型的值。 Declaration public static short? TryToInt16(string s) Parameters Type Name Description String s 字符串。 Returns Type Description Nullable < Int16 > 当调用 TryParse(String, Int16) 方法返回 false 时，将返回 null 。 | Improve this Doc View Source TryToInt64(String) 尝试将字符串转换成等效的可为空的 Int64 类型的值。 Declaration public static long? TryToInt64(string s) Parameters Type Name Description String s 字符串。 Returns Type Description Nullable < Int64 > 当调用 TryParse(String, Int64) 方法返回 false 时，将返回 null 。 | Improve this Doc View Source TryToSingle(String) 尝试将字符串转换成等效的可为空的 Single 类型的值。 Declaration public static float? TryToSingle(string s) Parameters Type Name Description String s 字符串。 Returns Type Description Nullable < Single > 当调用 TryParse(String, Single) 方法返回 false 时，将返回 null 。 | Improve this Doc View Source WithThousandSeparators(Decimal, Int32) 将 value 转换成含千分符的数字字符串。 Declaration public static string WithThousandSeparators(decimal value, int precision = 2) Parameters Type Name Description Decimal value Decimal 类型的值。 Int32 precision 小数精度。 Returns Type Description String 包含千分符的数字字符串。 | Improve this Doc View Source WithThousandSeparators(Double, Int32) 将 value 转换成含千分符的数字字符串。 Declaration public static string WithThousandSeparators(double value, int precision = 2) Parameters Type Name Description Double value Double 类型的值。 Int32 precision 小数精度。 Returns Type Description String 包含千分符的数字字符串。 | Improve this Doc View Source WithThousandSeparators(Int16, Int16) 将 value 转换成含千分符的数字字符串。 Declaration public static string WithThousandSeparators(short value, short precision = 2) Parameters Type Name Description Int16 value Int16 类型的值。 Int16 precision 小数精度。 Returns Type Description String 包含千分符的数字字符串。 | Improve this Doc View Source WithThousandSeparators(Int32, Int32) 将 value 转换成含千分符的数字字符串。 Declaration public static string WithThousandSeparators(int value, int precision = 2) Parameters Type Name Description Int32 value Int32 类型的值。 Int32 precision 小数精度。 Returns Type Description String 包含千分符的数字字符串。 | Improve this Doc View Source WithThousandSeparators(Int64, Int64) 将 value 转换成含千分符的数字字符串。 Declaration public static string WithThousandSeparators(long value, long precision = 2L) Parameters Type Name Description Int64 value Int64 类型的值。 Int64 precision 小数精度。 Returns Type Description String 包含千分符的数字字符串。 | Improve this Doc View Source WithThousandSeparators(Single, Int32) 将 value 转换成含千分符的数字字符串。 Declaration public static string WithThousandSeparators(float value, int precision = 2) Parameters Type Name Description Single value Single 类型的值。 Int32 precision 小数精度。 Returns Type Description String 包含千分符的数字字符串。"
  },
  "api/Niacomsoft.Eips.ValueTypeComparer.html": {
    "href": "api/Niacomsoft.Eips.ValueTypeComparer.html",
    "title": "Class ValueTypeComparer | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class ValueTypeComparer 提供了值类型比较相关的方法。 Inheritance Object ValueTypeComparer Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips Assembly : Niacomsoft.Eips.Common.dll Syntax public class ValueTypeComparer Methods | Improve this Doc View Source Compare(Decimal, Decimal, NumberComparisonSymbols) 比较 value1 和 value2 。 Declaration public static bool Compare(decimal value1, decimal value2 = 0M, NumberComparisonSymbols symbol = NumberComparisonSymbols.Equal) Parameters Type Name Description Decimal value1 Decimal 类型的值。 Decimal value2 Decimal 类型的值。 NumberComparisonSymbols symbol 数字对比符号。 NumberComparisonSymbols 类型的值。 Returns Type Description Boolean 当 value1 与 value2 满足对比符号 symbol 时，则返回 true ；否则返回 false 。 比如， symbol 等于 GreaterThan 时，则返回 value1 > value2 。 See Also NumberComparisonSymbols | Improve this Doc View Source Compare(Double, Double, NumberComparisonSymbols) 比较 value1 和 value2 。 Declaration public static bool Compare(double value1, double value2 = 0, NumberComparisonSymbols symbol = NumberComparisonSymbols.Equal) Parameters Type Name Description Double value1 Double 类型的值。 Double value2 Double 类型的值。 NumberComparisonSymbols symbol 数字对比符号。 NumberComparisonSymbols 类型的值。 Returns Type Description Boolean 当 value1 与 value2 满足对比符号 symbol 时，则返回 true ；否则返回 false 。 比如， symbol 等于 GreaterThan 时，则返回 value1 > value2 。 See Also NumberComparisonSymbols | Improve this Doc View Source Compare(Int16, Int16, NumberComparisonSymbols) 比较 value1 和 value2 。 Declaration public static bool Compare(short value1, short value2 = 0, NumberComparisonSymbols symbol = NumberComparisonSymbols.Equal) Parameters Type Name Description Int16 value1 Int16 类型的值。 Int16 value2 Int16 类型的值。 NumberComparisonSymbols symbol 数字对比符号。 NumberComparisonSymbols 类型的值。 Returns Type Description Boolean 当 value1 与 value2 满足对比符号 symbol 时，则返回 true ；否则返回 false 。 比如， symbol 等于 GreaterThan 时，则返回 value1 > value2 。 See Also NumberComparisonSymbols | Improve this Doc View Source Compare(Int32, Int32, NumberComparisonSymbols) 比较 value1 和 value2 。 Declaration public static bool Compare(int value1, int value2 = 0, NumberComparisonSymbols symbol = NumberComparisonSymbols.Equal) Parameters Type Name Description Int32 value1 Int32 类型的值。 Int32 value2 Int32 类型的值。 NumberComparisonSymbols symbol 数字对比符号。 NumberComparisonSymbols 类型的值。 Returns Type Description Boolean 当 value1 与 value2 满足对比符号 symbol 时，则返回 true ；否则返回 false 。 比如， symbol 等于 GreaterThan 时，则返回 value1 > value2 。 See Also NumberComparisonSymbols | Improve this Doc View Source Compare(Int64, Int64, NumberComparisonSymbols) 比较 value1 和 value2 。 Declaration public static bool Compare(long value1, long value2 = 0L, NumberComparisonSymbols symbol = NumberComparisonSymbols.Equal) Parameters Type Name Description Int64 value1 Int64 类型的值。 Int64 value2 Int64 类型的值。 NumberComparisonSymbols symbol 数字对比符号。 NumberComparisonSymbols 类型的值。 Returns Type Description Boolean 当 value1 与 value2 满足对比符号 symbol 时，则返回 true ；否则返回 false 。 比如， symbol 等于 GreaterThan 时，则返回 value1 > value2 。 See Also NumberComparisonSymbols | Improve this Doc View Source Compare(Single, Single, NumberComparisonSymbols) 比较 value1 和 value2 。 Declaration public static bool Compare(float value1, float value2 = 0F, NumberComparisonSymbols symbol = NumberComparisonSymbols.Equal) Parameters Type Name Description Single value1 Single 类型的值。 Single value2 Single 类型的值。 NumberComparisonSymbols symbol 数字对比符号。 NumberComparisonSymbols 类型的值。 Returns Type Description Boolean 当 value1 与 value2 满足对比符号 symbol 时，则返回 true ；否则返回 false 。 比如， symbol 等于 GreaterThan 时，则返回 value1 > value2 。 See Also NumberComparisonSymbols"
  }
}