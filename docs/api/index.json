{
  "api/Niacomsoft.Eips.ActivatorUtilities.html": {
    "href": "api/Niacomsoft.Eips.ActivatorUtilities.html",
    "title": "Class ActivatorUtilities | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class ActivatorUtilities 提供了动态创建对象实例相关的辅助方法。 Inheritance Object ActivatorUtilities Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips Assembly : Niacomsoft.Eips.Common.dll Syntax public class ActivatorUtilities Methods | Improve this Doc View Source CreateInstance<T>(Object[]) 创建 T 类型的对象实例。 Declaration public static T CreateInstance<T>(params object[] args) where T : class Parameters Type Name Description Object [] args 构造函数参数数组。 Returns Type Description T T 类型的对象实例。 Type Parameters Name Description T 引用类型。 Exceptions Type Condition DynamicCreateObjectInstanceException 当调用 CreateInstance(Type, Object[]) 方法时，可能引发此类型的异常。 See Also Activator"
  },
  "api/Niacomsoft.Eips.AttributeHelper-1.html": {
    "href": "api/Niacomsoft.Eips.AttributeHelper-1.html",
    "title": "Class AttributeHelper<TTarget> | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class AttributeHelper<TTarget> 提供了访问注解信息相关的基本方法。 Inheritance Object AttributeHelper<TTarget> AssemblyAttributeHelper MemberAttributeHelper Implements IAttributeHelper <TTarget> Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips Assembly : Niacomsoft.Eips.Core.Abstractions.dll Syntax public abstract class AttributeHelper<TTarget> : IAttributeHelper<TTarget> where TTarget : class Type Parameters Name Description TTarget 目标注解类型。 Methods | Improve this Doc View Source GetCustomAttribute<TAttribute>(TTarget, Boolean) 获取 target 中 TAttribute 类型的注解。 Declaration public abstract TAttribute GetCustomAttribute<TAttribute>(TTarget target, bool inherit = false) where TAttribute : Attribute Parameters Type Name Description TTarget target 注解目标。 TTarget 类型的对象实例。 Boolean inherit 是否检索 TTarget 的继承链。 Returns Type Description TAttribute TAttribute 类型的对象实例。 Type Parameters Name Description TAttribute 派生自 Attribute 的类型。 See Also Attribute | Improve this Doc View Source GetCustomAttributes(TTarget, Boolean) 获取 target 所有的注解。 Declaration public abstract IEnumerable<Attribute> GetCustomAttributes(TTarget target, bool inherit = false) Parameters Type Name Description TTarget target 注解目标。 TTarget 类型的对象实例。 Boolean inherit 是否检索 TTarget 的继承链。 Returns Type Description IEnumerable < Attribute > Attribute 类型的对象实例集合。 See Also IEnumerable <T> Attribute | Improve this Doc View Source GetCustomAttributes<TAttribute>(TTarget, Boolean) 获取 target 所有的 TAttribute 类型注解。 Declaration public abstract IEnumerable<TAttribute> GetCustomAttributes<TAttribute>(TTarget target, bool inherit = false) where TAttribute : Attribute Parameters Type Name Description TTarget target 注解目标。 TTarget 类型的对象实例。 Boolean inherit 是否检索 TTarget 的继承链。 Returns Type Description IEnumerable <TAttribute> TAttribute 类型的对象实例集合。 Type Parameters Name Description TAttribute 派生自 Attribute 的类型。 See Also IEnumerable <T> Attribute | Improve this Doc View Source InvalidTarget(TTarget) 当 TTarget 等于 null 时，将引发一个 ArgumentNullException 类型的异常。 Declaration protected void InvalidTarget(TTarget target) Parameters Type Name Description TTarget target TTarget 类型的对象实例。 Implements IAttributeHelper<TTarget> See Also IAttributeHelper <TTarget>"
  },
  "api/Niacomsoft.Eips.Configuration.ConfigurationBroker-1.html": {
    "href": "api/Niacomsoft.Eips.Configuration.ConfigurationBroker-1.html",
    "title": "Class ConfigurationBroker<TOptions> | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class ConfigurationBroker<TOptions> 提供了访问配置信息相关的基本方法。 Inheritance Object ConfigurationBroker<TOptions> Implements IConfigurationBroker <TOptions> Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips.Configuration Assembly : Niacomsoft.Eips.Core.Abstractions.dll Syntax public abstract class ConfigurationBroker<TOptions> : IConfigurationBroker<TOptions> where TOptions : IConfigurableOptions Type Parameters Name Description TOptions 实现了 IConfigurableOptions 接口的类型。 Methods | Improve this Doc View Source GetOptions() 获取配置选项。 Declaration public abstract TOptions GetOptions() Returns Type Description TOptions 实现了 IConfigurableOptions 类型接口的对象实例。 Implements IConfigurationBroker<TOptions> See Also IConfigurableOptions IConfigurationBroker <TOptions>"
  },
  "api/Niacomsoft.Eips.Configuration.html": {
    "href": "api/Niacomsoft.Eips.Configuration.html",
    "title": "Namespace Niacomsoft.Eips.Configuration | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Namespace Niacomsoft.Eips.Configuration Classes ConfigurationBroker<TOptions> 提供了访问配置信息相关的基本方法。 Interfaces IConfigurationBroker<TOptions> 提供了 ? 相关的方法。"
  },
  "api/Niacomsoft.Eips.Configuration.IConfigurationBroker-1.html": {
    "href": "api/Niacomsoft.Eips.Configuration.IConfigurationBroker-1.html",
    "title": "Interface IConfigurationBroker<TOptions> | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Interface IConfigurationBroker<TOptions> 提供了 ? 相关的方法。 Namespace : Niacomsoft.Eips.Configuration Assembly : Niacomsoft.Eips.Core.Abstractions.dll Syntax public interface IConfigurationBroker<TOptions> where TOptions : IConfigurableOptions Type Parameters Name Description TOptions Methods | Improve this Doc View Source GetOptions() 获取配置选项。 Declaration TOptions GetOptions() Returns Type Description TOptions 实现了 IConfigurableOptions 类型接口的对象实例。"
  },
  "api/Niacomsoft.Eips.Data.DbExecutionException.html": {
    "href": "api/Niacomsoft.Eips.Data.DbExecutionException.html",
    "title": "Class DbExecutionException | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class DbExecutionException 当执行数据库事务失败时，将引发此类型的异常。 密闭的，不可以从此类型派生。 Inheritance Object Exception DbExecutionException Implements ISerializable _Exception Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace : Niacomsoft.Eips.Data Assembly : Niacomsoft.Eips.Common.dll Syntax public sealed class DbExecutionException : Exception, ISerializable, _Exception Constructors | Improve this Doc View Source DbExecutionException() 用于初始化一个 DbExecutionException 类型的对象实例。 Declaration public DbExecutionException() | Improve this Doc View Source DbExecutionException(Exception) 用于初始化一个 DbExecutionException 类型的对象实例。 Declaration public DbExecutionException(Exception innerException) Parameters Type Name Description Exception innerException 引发此异常的 Exception 类型的对象实例。 Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception See Also Exception"
  },
  "api/Niacomsoft.Eips.Data.Entity.DbResult.html": {
    "href": "api/Niacomsoft.Eips.Data.Entity.DbResult.html",
    "title": "Class DbResult | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class DbResult 提供了数据库事务执行结果相关的方法。 Inheritance Object DbResult DbResult<T> Implements IDbResult Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips.Data.Entity Assembly : Niacomsoft.Eips.Core.dll Syntax public class DbResult : IDbResult Constructors | Improve this Doc View Source DbResult() 用于初始化一个 DbResult 类型的对象实例。 Declaration public DbResult() | Improve this Doc View Source DbResult(Boolean) 用于初始化一个 DbResult 类型的对象实例。 Declaration public DbResult(bool completed) Parameters Type Name Description Boolean completed 数据库事务是否执行成功。 | Improve this Doc View Source DbResult(Boolean, Exception) 用于初始化一个 DbResult 类型的对象实例。 Declaration public DbResult(bool completed, Exception exception) Parameters Type Name Description Boolean completed 数据库事务是否执行成功。 Exception exception 数据库事务异常。 | Improve this Doc View Source DbResult(Exception) 用于初始化一个 DbResult 类型的对象实例。 Declaration public DbResult(Exception exception) Parameters Type Name Description Exception exception 数据库事务异常。 Properties | Improve this Doc View Source Completed 数据库事务是否执行成功。 Declaration public virtual bool Completed { get; set; } Property Value Type Description Boolean 设置或获取一个值，用于表示数据库事务是否执行成功。 | Improve this Doc View Source ExecutionException 数据库事务执行异常。 Declaration public virtual DbExecutionException ExecutionException { get; set; } Property Value Type Description DbExecutionException 设置或获取 DbExecutionException 类型的对象实例，用于表示数据库事务执行异常。 See Also DbExecutionException Implements IDbResult See Also IDbResult"
  },
  "api/Niacomsoft.Eips.Data.Entity.DbResult-1.html": {
    "href": "api/Niacomsoft.Eips.Data.Entity.DbResult-1.html",
    "title": "Class DbResult<T> | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class DbResult<T> 提供了包含了数据结果相关的方法。 Inheritance Object DbResult DbResult<T> Implements IDbResult <T> IDbResult Inherited Members DbResult.Completed DbResult.ExecutionException Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips.Data.Entity Assembly : Niacomsoft.Eips.Core.dll Syntax public class DbResult<T> : DbResult, IDbResult<T>, IDbResult Type Parameters Name Description T 数据结果类型。 Constructors | Improve this Doc View Source DbResult() 用于初始化一个 DbResult<T> 类型的对象实例。 Declaration public DbResult() | Improve this Doc View Source DbResult(Boolean) 用于初始化一个 DbResult<T> 类型的对象实例。 Declaration public DbResult(bool completed) Parameters Type Name Description Boolean completed 数据库事务是否执行成功。 | Improve this Doc View Source DbResult(Boolean, Exception) 用于初始化一个 DbResult<T> 类型的对象实例。 Declaration public DbResult(bool completed, Exception exception) Parameters Type Name Description Boolean completed 数据库事务是否执行成功。 Exception exception 数据库事务异常。 | Improve this Doc View Source DbResult(Exception) 用于初始化一个 DbResult<T> 类型的对象实例。 Declaration public DbResult(Exception exception) Parameters Type Name Description Exception exception 数据库事务异常。 Properties | Improve this Doc View Source Result 数据库结果。 Declaration public virtual T Result { get; set; } Property Value Type Description T 设置或获取 T 类型的对象实例或值，用于表示数据库结果。 Implements IDbResult<T> IDbResult See Also IDbResult <T> DbResult"
  },
  "api/Niacomsoft.Eips.Data.Entity.DbResultBuilder.html": {
    "href": "api/Niacomsoft.Eips.Data.Entity.DbResultBuilder.html",
    "title": "Class DbResultBuilder | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class DbResultBuilder 提供了构建 IDbResult 相关的方法。 Inheritance Object DbResultBuilder Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips.Data.Entity Assembly : Niacomsoft.Eips.Core.dll Syntax public class DbResultBuilder Constructors | Improve this Doc View Source DbResultBuilder() 用于初始化一个 DbResultBuilder 类型的对象实例。 Declaration public DbResultBuilder() Methods | Improve this Doc View Source Build() 构建数据库结果。 Declaration public IDbResult Build() Returns Type Description IDbResult 实现了 IDbResult 类型接口的对象实例。 See Also IDbResult DbResult | Improve this Doc View Source Build<T>(T) 构建数据库结果。 Declaration public IDbResult<T> Build<T>(T result) Parameters Type Name Description T result 数据结果。 Returns Type Description IDbResult <T> 实现了 IDbResult<T> 类型接口的对象实例。 Type Parameters Name Description T 数据结果类型。 See Also IDbResult IDbResult <T> DbResult DbResult <T> | Improve this Doc View Source Reset() 重置 DbResultBuilder 类型的对象实例。 Declaration public DbResultBuilder Reset() Returns Type Description DbResultBuilder DbResultBuilder 类型的对象实例。 | Improve this Doc View Source WithCompleted(Boolean) 设置数据库事务是否执行成功。 Declaration public DbResultBuilder WithCompleted(bool value = true) Parameters Type Name Description Boolean value 是否执行成功。 Returns Type Description DbResultBuilder DbResultBuilder 类型的对象实例。 | Improve this Doc View Source WithExecutionException(Exception) 设置数据库事务执行过程中的异常。 Declaration public DbResultBuilder WithExecutionException(Exception exception = null) Parameters Type Name Description Exception exception 派生自 Exception 类型的对象实例。 Returns Type Description DbResultBuilder DbResultBuilder 类型的对象实例。 See Also Exception See Also IDbResult IDbResult <T>"
  },
  "api/Niacomsoft.Eips.Data.Entity.DbTypeExtensions.html": {
    "href": "api/Niacomsoft.Eips.Data.Entity.DbTypeExtensions.html",
    "title": "Class DbTypeExtensions | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class DbTypeExtensions 为 C# 类型提供的扩展方法。 提供了 C# 类型和数据库类型值相互转换的方法。 Inheritance Object DbTypeExtensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips.Data.Entity Assembly : Niacomsoft.Eips.Core.dll Syntax public static class DbTypeExtensions Methods | Improve this Doc View Source ToBoolean(Int32) 将数据库中的 Int32 类型的值转换成 Boolean 类型的值。 Declaration public static bool ToBoolean(this int dbValue) Parameters Type Name Description Int32 dbValue 存储在数据库中 Int32 类型的值。 Returns Type Description Boolean Boolean 类型的值。 当 dbValue 等于 1 时，则返回 true ；否则返回 false 。 | Improve this Doc View Source ToBoolean(Nullable<Int32>) 将数据库中的可为空的 Int32 类型的值转换成 Boolean 类型的值。 Declaration public static bool? ToBoolean(this int? dbValue) Parameters Type Name Description Nullable < Int32 > dbValue 存储在数据库中可为空的 Int32 类型的值。 Returns Type Description Nullable < Boolean > 可为空的 Boolean 类型的值。 当 dbValue .HasValue 等于 false 时，将返回 null 。 当 dbValue 等于 1 时，则返回 true ；否则返回 false 。 | Improve this Doc View Source ToBoolean(Nullable<Int32>, Boolean) 将数据库中的可为空的 Int32 类型的值转换成 Boolean 类型的值。 Declaration public static bool ToBoolean(this int? dbValue, bool ifNull = true) Parameters Type Name Description Nullable < Int32 > dbValue 存储在数据库中可为空的 Int32 类型的值。 Boolean ifNull 当 ifNull 等于 null 时的返回值。 Returns Type Description Boolean 等效的 Boolean 类型的值。 当 dbValue .HasValue 等于 false 时，将返回 ifNull 。 当 dbValue 等于 1 时，则返回 true ；否则返回 false 。 | Improve this Doc View Source ToGender(Nullable<Int32>) 将可为空的 Int32 类型的值转换成等效的 Gender 类型的值。 Declaration public static Gender ToGender(this int? value) Parameters Type Name Description Nullable < Int32 > value 可为空的 Int32 类型的值。 Returns Type Description Gender 等效的 Gender 类型的值。 null 等效于 NotSupport ； -1 等效于 Unknown ； 1 等效于 Male ； 2 等效于 Female 。 | Improve this Doc View Source ToInt(Gender) 将 Gender 类型的值转换成等效的可为空的 Int32 类型的值。。 Declaration public static int? ToInt(this Gender value) Parameters Type Name Description Gender value Gender 类型的值。 Returns Type Description Nullable < Int32 > 等效的可为空的 Int32 类型的值。 NotSupport 等效于 null ； Unknown 等效于 -1； Male 等效于 1； Female 等效于 2。 | Improve this Doc View Source ToInt(Boolean) 将 Boolean 类型的值转换成等效的 Int32 类型的值。 Declaration public static int ToInt(this bool value) Parameters Type Name Description Boolean value Boolean 类型的值。 Returns Type Description Int32 Int32 类型的值。 当 value 等于 true 时，将返回 1 ；否则返回 0 。 | Improve this Doc View Source ToInt(Boolean, Int32, Int32) 将 Boolean 类型的值转换成等效的 Int32 类型的值。 Declaration public static int ToInt(this bool value, int ifTrue = 1, int ifFalse = 0) Parameters Type Name Description Boolean value Boolean 类型的值。 Int32 ifTrue true 等效的 Int32 类型的值。 Int32 ifFalse false 等效的 Int32 类型的值。 Returns Type Description Int32 Int32 类型的值。 当 value 等于 true 时，将返回 ifTrue ；否则返回 ifFalse 。 See Also Defaults | Improve this Doc View Source ToInt(Nullable<Boolean>) 将可为空的 Boolean 类型的值转换成等效的可为空的 Int32 类型的值。 Declaration public static int? ToInt(this bool? value) Parameters Type Name Description Nullable < Boolean > value 可为空的 Boolean 类型的值。 Returns Type Description Nullable < Int32 > 可为空的 Int32 类型的值。 当 value .HasValue 等于 false 时，返回 null 。 当 value 等于 true 时，将返回 1 ；否则返回 0 。"
  },
  "api/Niacomsoft.Eips.Data.Entity.Fields.html": {
    "href": "api/Niacomsoft.Eips.Data.Entity.Fields.html",
    "title": "Namespace Niacomsoft.Eips.Data.Entity.Fields | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Namespace Niacomsoft.Eips.Data.Entity.Fields Interfaces IAutoGenerationId<T> 定义了自动生成 ID 字段接口。 IAvailable<T> 定义了标记是否激活的接口。 IBuiltIn<T> 定义了标记是否系统内置的接口。 ICreatedBy<T> 定义了标识数据实体创建人信息的接口。 ICreatedTime 定义了标记数据实体首次创建时间的接口。 IDefaultOptions<T> 定义了默认选项标记的接口。 IEnabled<T> 定义了标记是否可用的接口。 IFrozen<T> 定义了标记是否被冻结的接口。 ILocked<T> 定义了标记锁定状态的接口。 IModifiedBy<T> 定义了标识数据实体最后修改人信息的接口。 IModifiedTime 定义了标识数据实体最后一次修改时间的接口。 INotes 定义了标记数据实体备注信息的接口。 IOpenId<T> 定义了数据实体开放标识接口。 IReadOnly<T> 定义了标识是否只读的接口。 IRemoved<T> 定义了标记是否移除的接口。 IRequired<T> 定义了标记是否“必需”的接口。 IUniqueId<T> 定义了数据实体唯一标识接口。 IVersionNumber 定义了版本号数字接口。 IVirtual<T> 定义了标识是否虚拟的接口。 IVisibility<T> 定义了标识是否可见的接口。"
  },
  "api/Niacomsoft.Eips.Data.Entity.Fields.IAutoGenerationId-1.html": {
    "href": "api/Niacomsoft.Eips.Data.Entity.Fields.IAutoGenerationId-1.html",
    "title": "Interface IAutoGenerationId<T> | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Interface IAutoGenerationId<T> 定义了自动生成 ID 字段接口。 Namespace : Niacomsoft.Eips.Data.Entity.Fields Assembly : Niacomsoft.Eips.Core.dll Syntax public interface IAutoGenerationId<T> where T : struct Type Parameters Name Description T 自动生成 ID 字段类型。 Properties | Improve this Doc View Source AutoId 自动 ID。 Declaration T AutoId { get; set; } Property Value Type Description T 设置或获取一个 T 类型的值，用于表示自动 ID。"
  },
  "api/Niacomsoft.Eips.Data.Entity.Fields.IAvailable-1.html": {
    "href": "api/Niacomsoft.Eips.Data.Entity.Fields.IAvailable-1.html",
    "title": "Interface IAvailable<T> | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Interface IAvailable<T> 定义了标记是否激活的接口。 Namespace : Niacomsoft.Eips.Data.Entity.Fields Assembly : Niacomsoft.Eips.Core.dll Syntax public interface IAvailable<T> where T : struct Type Parameters Name Description T 标记是否激活的类型。 Properties | Improve this Doc View Source Available 是否已经激活。 Declaration T Available { get; set; } Property Value Type Description T 设置或获取一个值，用于表示是否已经激活。 | Improve this Doc View Source Unavailable 是否尚未激活。 Declaration T Unavailable { get; } Property Value Type Description T 获取一个值，用于表示是否尚未激活。"
  },
  "api/Niacomsoft.Eips.Data.Entity.Fields.IBuiltIn-1.html": {
    "href": "api/Niacomsoft.Eips.Data.Entity.Fields.IBuiltIn-1.html",
    "title": "Interface IBuiltIn<T> | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Interface IBuiltIn<T> 定义了标记是否系统内置的接口。 Namespace : Niacomsoft.Eips.Data.Entity.Fields Assembly : Niacomsoft.Eips.Core.dll Syntax public interface IBuiltIn<T> where T : struct Type Parameters Name Description T 标记是否系统内置的类型。 Properties | Improve this Doc View Source BuiltIn 是否系统内置的。 Declaration T BuiltIn { get; set; } Property Value Type Description T 设置或获取一个值，用于表示是否系统内置的。 | Improve this Doc View Source NotBuiltIn 是否非系统内置的。 Declaration T NotBuiltIn { get; } Property Value Type Description T 获取一个值，用于表示是否非系统内置的。"
  },
  "api/Niacomsoft.Eips.Data.Entity.Fields.ICreatedBy-1.html": {
    "href": "api/Niacomsoft.Eips.Data.Entity.Fields.ICreatedBy-1.html",
    "title": "Interface ICreatedBy<T> | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Interface ICreatedBy<T> 定义了标识数据实体创建人信息的接口。 Inherited Members ICreatedTime.CreatedTime ICreatedTime.CreatedTimeDescription Namespace : Niacomsoft.Eips.Data.Entity.Fields Assembly : Niacomsoft.Eips.Core.dll Syntax public interface ICreatedBy<T> : ICreatedTime Type Parameters Name Description T 创建人唯一标识类型。 Properties | Improve this Doc View Source Creator 创建人姓名。 Declaration string Creator { get; set; } Property Value Type Description String 设置或获取一个字符串，用于表示创建人姓名。 | Improve this Doc View Source CreatorId 创建人唯一标识。 Declaration T CreatorId { get; set; } Property Value Type Description T 设置或获取 T 类型的对象实例或值，用于表示创建人唯一标识。 See Also ICreatedTime"
  },
  "api/Niacomsoft.Eips.Data.Entity.Fields.ICreatedTime.html": {
    "href": "api/Niacomsoft.Eips.Data.Entity.Fields.ICreatedTime.html",
    "title": "Interface ICreatedTime | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Interface ICreatedTime 定义了标记数据实体首次创建时间的接口。 Namespace : Niacomsoft.Eips.Data.Entity.Fields Assembly : Niacomsoft.Eips.Core.dll Syntax public interface ICreatedTime Properties | Improve this Doc View Source CreatedTime 首次创建时间。 Declaration DateTime CreatedTime { get; set; } Property Value Type Description DateTime 设置或获取一个值，用于表示首次创建时间。 See Also DateTime | Improve this Doc View Source CreatedTimeDescription 首次创建时间描述。 Declaration string CreatedTimeDescription { get; } Property Value Type Description String 获取一个字符串，用于表示首次创建时间描述。"
  },
  "api/Niacomsoft.Eips.Data.Entity.Fields.IDefaultOptions-1.html": {
    "href": "api/Niacomsoft.Eips.Data.Entity.Fields.IDefaultOptions-1.html",
    "title": "Interface IDefaultOptions<T> | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Interface IDefaultOptions<T> 定义了默认选项标记的接口。 Namespace : Niacomsoft.Eips.Data.Entity.Fields Assembly : Niacomsoft.Eips.Core.dll Syntax public interface IDefaultOptions<T> where T : struct Type Parameters Name Description T 默认选项标记类型。 Properties | Improve this Doc View Source Default 是否默认的选项。 Declaration T Default { get; } Property Value Type Description T 设置或获取一个值，用于表示是否默认的选项。"
  },
  "api/Niacomsoft.Eips.Data.Entity.Fields.IEnabled-1.html": {
    "href": "api/Niacomsoft.Eips.Data.Entity.Fields.IEnabled-1.html",
    "title": "Interface IEnabled<T> | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Interface IEnabled<T> 定义了标记是否可用的接口。 Namespace : Niacomsoft.Eips.Data.Entity.Fields Assembly : Niacomsoft.Eips.Core.dll Syntax public interface IEnabled<T> where T : struct Type Parameters Name Description T 标识是否可用的类型。 Properties | Improve this Doc View Source Disable 是否禁用。 Declaration T Disable { get; } Property Value Type Description T 获取一个值，用于表示是否禁用。 | Improve this Doc View Source Enable 是否可用。 Declaration T Enable { get; set; } Property Value Type Description T 设置或获取一个值，用于表示是否可用。"
  },
  "api/Niacomsoft.Eips.Data.Entity.Fields.IFrozen-1.html": {
    "href": "api/Niacomsoft.Eips.Data.Entity.Fields.IFrozen-1.html",
    "title": "Interface IFrozen<T> | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Interface IFrozen<T> 定义了标记是否被冻结的接口。 Namespace : Niacomsoft.Eips.Data.Entity.Fields Assembly : Niacomsoft.Eips.Core.dll Syntax public interface IFrozen<T> where T : struct Type Parameters Name Description T 标记是否被冻结的类型。 Properties | Improve this Doc View Source Frozen 是否被冻结。 Declaration T Frozen { get; set; } Property Value Type Description T 设置或获取一个值，用于表示是否被冻结。 | Improve this Doc View Source Unfrozen 是否未被冻结。 Declaration T Unfrozen { get; } Property Value Type Description T 获取一个值，用于表示是否未被冻结。"
  },
  "api/Niacomsoft.Eips.Data.Entity.Fields.ILocked-1.html": {
    "href": "api/Niacomsoft.Eips.Data.Entity.Fields.ILocked-1.html",
    "title": "Interface ILocked<T> | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Interface ILocked<T> 定义了标记锁定状态的接口。 Namespace : Niacomsoft.Eips.Data.Entity.Fields Assembly : Niacomsoft.Eips.Core.dll Syntax public interface ILocked<T> where T : struct Type Parameters Name Description T 标记锁定状态的类型。 Properties | Improve this Doc View Source Locked 是否锁定。 Declaration T Locked { get; set; } Property Value Type Description T 设置或获取一个值，用于表示是否锁定。 | Improve this Doc View Source Unlock 是否未锁定。 Declaration T Unlock { get; } Property Value Type Description T 获取一个值，用于表示是否未锁定。"
  },
  "api/Niacomsoft.Eips.Data.Entity.Fields.IModifiedBy-1.html": {
    "href": "api/Niacomsoft.Eips.Data.Entity.Fields.IModifiedBy-1.html",
    "title": "Interface IModifiedBy<T> | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Interface IModifiedBy<T> 定义了标识数据实体最后修改人信息的接口。 Inherited Members IModifiedTime.IsModified IModifiedTime.LatestModifiedTime IModifiedTime.LatestModifiedTimeDescription ICreatedBy<T>.Creator ICreatedBy<T>.CreatorId ICreatedTime.CreatedTime ICreatedTime.CreatedTimeDescription Namespace : Niacomsoft.Eips.Data.Entity.Fields Assembly : Niacomsoft.Eips.Core.dll Syntax public interface IModifiedBy<T> : IModifiedTime, ICreatedBy<T>, ICreatedTime Type Parameters Name Description T 最后修改人唯一标识类型。 Properties | Improve this Doc View Source LatestModifier 最后修改人姓名。 Declaration string LatestModifier { get; set; } Property Value Type Description String 设置或获取一个字符串，用于表示最后修改人姓名。 | Improve this Doc View Source LatestModifierId 最后修改人唯一标识。 Declaration T LatestModifierId { get; set; } Property Value Type Description T 设置或获取 T 类型的对象实例或值，用于表示最后修改人唯一标识。 See Also ICreatedBy <T> ICreatedTime IModifiedTime"
  },
  "api/Niacomsoft.Eips.Data.Entity.Fields.IModifiedTime.html": {
    "href": "api/Niacomsoft.Eips.Data.Entity.Fields.IModifiedTime.html",
    "title": "Interface IModifiedTime | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Interface IModifiedTime 定义了标识数据实体最后一次修改时间的接口。 Inherited Members ICreatedTime.CreatedTime ICreatedTime.CreatedTimeDescription Namespace : Niacomsoft.Eips.Data.Entity.Fields Assembly : Niacomsoft.Eips.Core.dll Syntax public interface IModifiedTime : ICreatedTime Properties | Improve this Doc View Source IsModified 是否被修改过。 Declaration bool IsModified { get; } Property Value Type Description Boolean 获取一个值，用于表示是否被修改过。 当 LatestModifiedTime .HasValue 等于 false 时，返回 true ；否则返回 false 。 | Improve this Doc View Source LatestModifiedTime 最后一次的修改时间。 Declaration DateTime? LatestModifiedTime { get; set; } Property Value Type Description Nullable < DateTime > 设置或获取一个值，用于表示最后一次的修改时间。 See Also DateTime Nullable <T> | Improve this Doc View Source LatestModifiedTimeDescription 最后一次的修改时间描述。 Declaration string LatestModifiedTimeDescription { get; } Property Value Type Description String 获取一个字符串，用于表示最后一次的修改时间描述。 See Also ICreatedTime"
  },
  "api/Niacomsoft.Eips.Data.Entity.Fields.INotes.html": {
    "href": "api/Niacomsoft.Eips.Data.Entity.Fields.INotes.html",
    "title": "Interface INotes | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Interface INotes 定义了标记数据实体备注信息的接口。 Namespace : Niacomsoft.Eips.Data.Entity.Fields Assembly : Niacomsoft.Eips.Core.dll Syntax public interface INotes Properties | Improve this Doc View Source Notes 备注信息。 Declaration string Notes { get; set; } Property Value Type Description String 设置或获取一个字符串，用于表示备注信息。"
  },
  "api/Niacomsoft.Eips.Data.Entity.Fields.IOpenId-1.html": {
    "href": "api/Niacomsoft.Eips.Data.Entity.Fields.IOpenId-1.html",
    "title": "Interface IOpenId<T> | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Interface IOpenId<T> 定义了数据实体开放标识接口。 Namespace : Niacomsoft.Eips.Data.Entity.Fields Assembly : Niacomsoft.Eips.Core.dll Syntax public interface IOpenId<T> Type Parameters Name Description T 数据实体开放标识类型。 Properties | Improve this Doc View Source OpenId 数据实体开放标识。 Declaration T OpenId { get; set; } Property Value Type Description T 设置或获取 T 类型的对象实例或值，用于表示数据实体开放标识。"
  },
  "api/Niacomsoft.Eips.Data.Entity.Fields.IReadOnly-1.html": {
    "href": "api/Niacomsoft.Eips.Data.Entity.Fields.IReadOnly-1.html",
    "title": "Interface IReadOnly<T> | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Interface IReadOnly<T> 定义了标识是否只读的接口。 Namespace : Niacomsoft.Eips.Data.Entity.Fields Assembly : Niacomsoft.Eips.Core.dll Syntax public interface IReadOnly<T> where T : struct Type Parameters Name Description T 是否只读。 Properties | Improve this Doc View Source ReadOnly 是否只读。 Declaration T ReadOnly { get; set; } Property Value Type Description T 设置或获取一个值，用于表示是否只读。 | Improve this Doc View Source Writable 是否可写。 Declaration T Writable { get; } Property Value Type Description T 获取一个值，用于表示是否可写。"
  },
  "api/Niacomsoft.Eips.Data.Entity.Fields.IRemoved-1.html": {
    "href": "api/Niacomsoft.Eips.Data.Entity.Fields.IRemoved-1.html",
    "title": "Interface IRemoved<T> | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Interface IRemoved<T> 定义了标记是否移除的接口。 Namespace : Niacomsoft.Eips.Data.Entity.Fields Assembly : Niacomsoft.Eips.Core.dll Syntax public interface IRemoved<T> where T : struct Type Parameters Name Description T 标记是否移除的类型。 Properties | Improve this Doc View Source AllowRestore 是否允许移除后还原。 Declaration T AllowRestore { get; set; } Property Value Type Description T 设置或获取一个值，用于表示是否允许移除后还原。 | Improve this Doc View Source HasRemoved 是否已经移除。 Declaration T HasRemoved { get; set; } Property Value Type Description T 设置或获取一个值，用于表示是否已经移除。 | Improve this Doc View Source Normal 状态是否正常。 Declaration T Normal { get; set; } Property Value Type Description T 获取一个值，用于表示状态是否正常。 | Improve this Doc View Source PhysicalDeleted 是否已经物理删除。 Declaration bool PhysicalDeleted { get; } Property Value Type Description Boolean 获取一个值，用于表示是否已经物理删除。"
  },
  "api/Niacomsoft.Eips.Data.Entity.Fields.IRequired-1.html": {
    "href": "api/Niacomsoft.Eips.Data.Entity.Fields.IRequired-1.html",
    "title": "Interface IRequired<T> | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Interface IRequired<T> 定义了标记是否“必需”的接口。 Namespace : Niacomsoft.Eips.Data.Entity.Fields Assembly : Niacomsoft.Eips.Core.dll Syntax public interface IRequired<T> where T : struct Type Parameters Name Description T 标识是否“必需”的类型。 Properties | Improve this Doc View Source Optional 是否可选的。 Declaration T Optional { get; } Property Value Type Description T 获取一个值，用于表示是否可选的。 | Improve this Doc View Source Required 是否必需。 Declaration T Required { get; set; } Property Value Type Description T 设置或获取一个值，用于表示是否必需。"
  },
  "api/Niacomsoft.Eips.Data.Entity.Fields.IUniqueId-1.html": {
    "href": "api/Niacomsoft.Eips.Data.Entity.Fields.IUniqueId-1.html",
    "title": "Interface IUniqueId<T> | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Interface IUniqueId<T> 定义了数据实体唯一标识接口。 Namespace : Niacomsoft.Eips.Data.Entity.Fields Assembly : Niacomsoft.Eips.Core.dll Syntax public interface IUniqueId<T> Type Parameters Name Description T 数据实体唯一标识类型。 Properties | Improve this Doc View Source Id 数据实体唯一标识。 Declaration T Id { get; set; } Property Value Type Description T 设置或获取 T 类型的对象实例或值，用于表示数据实体唯一标识。"
  },
  "api/Niacomsoft.Eips.Data.Entity.Fields.IVersionNumber.html": {
    "href": "api/Niacomsoft.Eips.Data.Entity.Fields.IVersionNumber.html",
    "title": "Interface IVersionNumber | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Interface IVersionNumber 定义了版本号数字接口。 Namespace : Niacomsoft.Eips.Data.Entity.Fields Assembly : Niacomsoft.Eips.Core.dll Syntax public interface IVersionNumber Properties | Improve this Doc View Source Version 数据版本号。 Declaration double Version { get; set; } Property Value Type Description Double 设置或获取一个值，用于表示数据版本号。"
  },
  "api/Niacomsoft.Eips.Data.Entity.Fields.IVirtual-1.html": {
    "href": "api/Niacomsoft.Eips.Data.Entity.Fields.IVirtual-1.html",
    "title": "Interface IVirtual<T> | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Interface IVirtual<T> 定义了标识是否虚拟的接口。 Namespace : Niacomsoft.Eips.Data.Entity.Fields Assembly : Niacomsoft.Eips.Core.dll Syntax public interface IVirtual<T> where T : struct Type Parameters Name Description T 标记是否虚拟的类型。 Properties | Improve this Doc View Source NotVirtual 是否非虚拟的。 Declaration T NotVirtual { get; set; } Property Value Type Description T 获取一个值，用于表示是否非虚拟的。 | Improve this Doc View Source Virtual 是否虚拟的。 Declaration T Virtual { get; set; } Property Value Type Description T 设置或获取一个值，用于表示是否虚拟的。"
  },
  "api/Niacomsoft.Eips.Data.Entity.Fields.IVisibility-1.html": {
    "href": "api/Niacomsoft.Eips.Data.Entity.Fields.IVisibility-1.html",
    "title": "Interface IVisibility<T> | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Interface IVisibility<T> 定义了标识是否可见的接口。 Namespace : Niacomsoft.Eips.Data.Entity.Fields Assembly : Niacomsoft.Eips.Core.dll Syntax public interface IVisibility<T> where T : struct Type Parameters Name Description T 标识是否可见的类型。 Properties | Improve this Doc View Source Hidden 是否隐藏。 Declaration T Hidden { get; } Property Value Type Description T 获取一个值，用于表示是否隐藏。 | Improve this Doc View Source Visible 是否可见。 Declaration T Visible { get; set; } Property Value Type Description T 设置或获取一个值，用于表示是否可见。"
  },
  "api/Niacomsoft.Eips.Data.Entity.html": {
    "href": "api/Niacomsoft.Eips.Data.Entity.html",
    "title": "Namespace Niacomsoft.Eips.Data.Entity | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Namespace Niacomsoft.Eips.Data.Entity Classes DbResult 提供了数据库事务执行结果相关的方法。 DbResult<T> 提供了包含了数据结果相关的方法。 DbResultBuilder 提供了构建 IDbResult 相关的方法。 DbTypeExtensions 为 C# 类型提供的扩展方法。 提供了 C# 类型和数据库类型值相互转换的方法。 Interfaces IDbResult 定义了数据库结果接口。 IDbResult<T> 定义了包含数据结果的数据库结果接口。"
  },
  "api/Niacomsoft.Eips.Data.Entity.IDbResult.html": {
    "href": "api/Niacomsoft.Eips.Data.Entity.IDbResult.html",
    "title": "Interface IDbResult | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Interface IDbResult 定义了数据库结果接口。 Namespace : Niacomsoft.Eips.Data.Entity Assembly : Niacomsoft.Eips.Core.dll Syntax public interface IDbResult Properties | Improve this Doc View Source Completed 数据库事务是否执行成功。 Declaration bool Completed { get; set; } Property Value Type Description Boolean 设置或获取一个值，用于表示数据库事务是否执行成功。 | Improve this Doc View Source ExecutionException 数据库事务执行异常。 Declaration DbExecutionException ExecutionException { get; set; } Property Value Type Description DbExecutionException 设置或获取 DbExecutionException 类型的对象实例，用于表示数据库事务执行异常。 See Also DbExecutionException"
  },
  "api/Niacomsoft.Eips.Data.Entity.IDbResult-1.html": {
    "href": "api/Niacomsoft.Eips.Data.Entity.IDbResult-1.html",
    "title": "Interface IDbResult<T> | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Interface IDbResult<T> 定义了包含数据结果的数据库结果接口。 Inherited Members IDbResult.Completed IDbResult.ExecutionException Namespace : Niacomsoft.Eips.Data.Entity Assembly : Niacomsoft.Eips.Core.dll Syntax public interface IDbResult<T> : IDbResult Type Parameters Name Description T 数据结果类型。 Properties | Improve this Doc View Source Result 数据库结果。 Declaration T Result { get; set; } Property Value Type Description T 设置或获取 T 类型的对象实例或值，用于表示数据库结果。 See Also IDbResult"
  },
  "api/Niacomsoft.Eips.Data.Entity.Queryable.html": {
    "href": "api/Niacomsoft.Eips.Data.Entity.Queryable.html",
    "title": "Namespace Niacomsoft.Eips.Data.Entity.Queryable | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Namespace Niacomsoft.Eips.Data.Entity.Queryable Classes PagedList<TElement> 提供了供分页的数据列表相关的方法。 PagedListBuilder<TElement> 提供了构建 PagedListBuilder<TElement> 类型的对象实例相关的方法。 PagedParameter 提供了分页查询参数相关的方法。 SortParameter 提供了数据排序参数相关的方法。 Interfaces IPagedList<TElement> 定义了供分页的数据列表结果接口。 IPagedParameter 定义了分页查询参数的接口。 ISortParameter 定义了数据排序参数的接口。 Enums SortMode 定义了数据排序方式枚举类型。"
  },
  "api/Niacomsoft.Eips.Data.Entity.Queryable.IPagedList-1.html": {
    "href": "api/Niacomsoft.Eips.Data.Entity.Queryable.IPagedList-1.html",
    "title": "Interface IPagedList<TElement> | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Interface IPagedList<TElement> 定义了供分页的数据列表结果接口。 Namespace : Niacomsoft.Eips.Data.Entity.Queryable Assembly : Niacomsoft.Eips.Core.dll Syntax public interface IPagedList<TElement> Type Parameters Name Description TElement 元素类型。 Properties | Improve this Doc View Source Rows 元素集合。 Declaration IEnumerable<TElement> Rows { get; set; } Property Value Type Description IEnumerable <TElement> 设置或获取 TElement 类型的对象实例或值的集合，用于表示元素集合。 See Also IEnumerable <T> | Improve this Doc View Source TotalRowsNumber 元素总数量。 Declaration long TotalRowsNumber { get; set; } Property Value Type Description Int64 设置或获取一个值，用于表示元素总数量。"
  },
  "api/Niacomsoft.Eips.Data.Entity.Queryable.IPagedParameter.html": {
    "href": "api/Niacomsoft.Eips.Data.Entity.Queryable.IPagedParameter.html",
    "title": "Interface IPagedParameter | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Interface IPagedParameter 定义了分页查询参数的接口。 Namespace : Niacomsoft.Eips.Data.Entity.Queryable Assembly : Niacomsoft.Eips.Core.dll Syntax public interface IPagedParameter Properties | Improve this Doc View Source CurrentIndex 需要查询的当前页索引数字。 Declaration int CurrentIndex { get; set; } Property Value Type Description Int32 设置或获取一个值，用于表示需要查询的当前页索引数字。 | Improve this Doc View Source PerPageSize 每页数据行数。 Declaration int PerPageSize { get; set; } Property Value Type Description Int32 设置或获取一个值，用于表示每页数据行数。"
  },
  "api/Niacomsoft.Eips.Data.Entity.Queryable.ISortParameter.html": {
    "href": "api/Niacomsoft.Eips.Data.Entity.Queryable.ISortParameter.html",
    "title": "Interface ISortParameter | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Interface ISortParameter 定义了数据排序参数的接口。 Namespace : Niacomsoft.Eips.Data.Entity.Queryable Assembly : Niacomsoft.Eips.Core.dll Syntax public interface ISortParameter Properties | Improve this Doc View Source Fields 需要排序的字段。 Declaration string[] Fields { get; set; } Property Value Type Description String [] 设置或获取一个字符串数组，用于表示需要排序的字段。 | Improve this Doc View Source Mode 排序方式。 Declaration SortMode? Mode { get; set; } Property Value Type Description Nullable < SortMode > 设置或获取一个值，用于表示排序方式。 See Also SortMode"
  },
  "api/Niacomsoft.Eips.Data.Entity.Queryable.PagedList-1.html": {
    "href": "api/Niacomsoft.Eips.Data.Entity.Queryable.PagedList-1.html",
    "title": "Class PagedList<TElement> | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class PagedList<TElement> 提供了供分页的数据列表相关的方法。 Inheritance Object PagedList<TElement> Implements IPagedList <TElement> Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips.Data.Entity.Queryable Assembly : Niacomsoft.Eips.Core.dll Syntax public class PagedList<TElement> : IPagedList<TElement> Type Parameters Name Description TElement 数据元素类型。 Constructors | Improve this Doc View Source PagedList() 用于初始化一个 PagedList<TElement> 类型的对象实例。 Declaration public PagedList() | Improve this Doc View Source PagedList(IEnumerable<TElement>) 用于初始化一个 PagedList<TElement> 类型的对象实例。 Declaration public PagedList(IEnumerable<TElement> rows) Parameters Type Name Description IEnumerable <TElement> rows 元素集合。 | Improve this Doc View Source PagedList(IEnumerable<TElement>, Int64) 用于初始化一个 PagedList<TElement> 类型的对象实例。 Declaration public PagedList(IEnumerable<TElement> rows, long total) Parameters Type Name Description IEnumerable <TElement> rows 元素集合。 Int64 total 元素总数量。 Properties | Improve this Doc View Source Rows 元素集合。 Declaration public virtual TElement[] Rows { get; set; } Property Value Type Description TElement[] 设置或获取 TElement 类型的对象实例或值的集合，用于表示元素集合。 | Improve this Doc View Source TotalRowsNumber 元素总数量。 Declaration public virtual long TotalRowsNumber { get; set; } Property Value Type Description Int64 设置或获取一个值，用于表示元素总数量。 Explicit Interface Implementations | Improve this Doc View Source IPagedList<TElement>.Rows 元素集合。 Declaration IEnumerable<TElement> IPagedList<TElement>.Rows { get; set; } Returns Type Description IEnumerable <TElement> 设置或获取 TElement 类型的对象实例或值的集合，用于表示元素集合。 See Also IEnumerable <T> Implements IPagedList<TElement> See Also IPagedList <TElement>"
  },
  "api/Niacomsoft.Eips.Data.Entity.Queryable.PagedListBuilder-1.html": {
    "href": "api/Niacomsoft.Eips.Data.Entity.Queryable.PagedListBuilder-1.html",
    "title": "Class PagedListBuilder<TElement> | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class PagedListBuilder<TElement> 提供了构建 PagedListBuilder<TElement> 类型的对象实例相关的方法。 Inheritance Object PagedListBuilder<TElement> Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips.Data.Entity.Queryable Assembly : Niacomsoft.Eips.Core.dll Syntax public class PagedListBuilder<TElement> Type Parameters Name Description TElement 分页元素类型。 Constructors | Improve this Doc View Source PagedListBuilder() 用于初始化一个 PagedListBuilder<TElement> 类型的对象实例。 Declaration public PagedListBuilder() Methods | Improve this Doc View Source Build() 构建 PagedList<TElement> 类型的对象实例。 Declaration public PagedList<TElement> Build() Returns Type Description PagedList <TElement> PagedList<TElement> 类型的对象实例。 | Improve this Doc View Source Reset() 重置 PagedListBuilder<TElement> 类型的对象实例。 Declaration public PagedListBuilder<TElement> Reset() Returns Type Description PagedListBuilder <TElement> PagedListBuilder<TElement> 类型的对象实例。 | Improve this Doc View Source WithRows(IEnumerable<TElement>) 设置 TElement 元素集合。 Declaration public PagedListBuilder<TElement> WithRows(IEnumerable<TElement> rows) Parameters Type Name Description IEnumerable <TElement> rows 元素集合。 Returns Type Description PagedListBuilder <TElement> PagedListBuilder<TElement> 类型的对象实例。 See Also IEnumerable <T> | Improve this Doc View Source WithTotalElementsCount(Int64) 设置元素总个数。 Declaration public PagedListBuilder<TElement> WithTotalElementsCount(long total = 0L) Parameters Type Name Description Int64 total 元素总个数。 Returns Type Description PagedListBuilder <TElement> PagedListBuilder<TElement> 类型的对象实例。"
  },
  "api/Niacomsoft.Eips.Data.Entity.Queryable.PagedParameter.html": {
    "href": "api/Niacomsoft.Eips.Data.Entity.Queryable.PagedParameter.html",
    "title": "Class PagedParameter | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class PagedParameter 提供了分页查询参数相关的方法。 Inheritance Object PagedParameter Implements IPagedParameter Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips.Data.Entity.Queryable Assembly : Niacomsoft.Eips.Core.dll Syntax public class PagedParameter : IPagedParameter Constructors | Improve this Doc View Source PagedParameter() 用于初始化一个 PagedParameter 类型的对象实例。 Declaration public PagedParameter() | Improve this Doc View Source PagedParameter(Int32) 用于初始化一个 PagedParameter 类型的对象实例。 Declaration public PagedParameter(int size) Parameters Type Name Description Int32 size 每页的数据行数。 | Improve this Doc View Source PagedParameter(Int32, Int32) 用于初始化一个 PagedParameter 类型的对象实例。 Declaration public PagedParameter(int index, int size) Parameters Type Name Description Int32 index 当前页索引数字。 Int32 size 每页的数据行数。 Properties | Improve this Doc View Source CurrentIndex 需要查询的当前页索引数字。 Declaration public virtual int CurrentIndex { get; set; } Property Value Type Description Int32 设置或获取一个值，用于表示需要查询的当前页索引数字。 | Improve this Doc View Source PerPageSize 每页数据行数。 Declaration public virtual int PerPageSize { get; set; } Property Value Type Description Int32 设置或获取一个值，用于表示每页数据行数。 Implements IPagedParameter See Also IPagedParameter"
  },
  "api/Niacomsoft.Eips.Data.Entity.Queryable.SortMode.html": {
    "href": "api/Niacomsoft.Eips.Data.Entity.Queryable.SortMode.html",
    "title": "Enum SortMode | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Enum SortMode 定义了数据排序方式枚举类型。 Namespace : Niacomsoft.Eips.Data.Entity.Queryable Assembly : Niacomsoft.Eips.Core.dll Syntax public enum SortMode Fields Name Description Ascending 升序排序。 Default 默认的排序方式。等效于 Descending 。 Descending 降序排序。"
  },
  "api/Niacomsoft.Eips.Data.Entity.Queryable.SortParameter.html": {
    "href": "api/Niacomsoft.Eips.Data.Entity.Queryable.SortParameter.html",
    "title": "Class SortParameter | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class SortParameter 提供了数据排序参数相关的方法。 Inheritance Object SortParameter Implements ISortParameter Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips.Data.Entity.Queryable Assembly : Niacomsoft.Eips.Core.dll Syntax public class SortParameter : ISortParameter Constructors | Improve this Doc View Source SortParameter() 用于初始化一个 SortParameter 类型的对象实例。 Declaration public SortParameter() | Improve this Doc View Source SortParameter(Nullable<SortMode>) 用于初始化一个 SortParameter 类型的对象实例。 Declaration public SortParameter(SortMode? mode) Parameters Type Name Description Nullable < SortMode > mode 排序模式。 | Improve this Doc View Source SortParameter(Nullable<SortMode>, String[]) 用于初始化一个 SortParameter 类型的对象实例。 Declaration public SortParameter(SortMode? mode, params string[] fields) Parameters Type Name Description Nullable < SortMode > mode 排序模式。 String [] fields 排序字段。 | Improve this Doc View Source SortParameter(String[]) 用于初始化一个 SortParameter 类型的对象实例。 Declaration public SortParameter(string[] fields) Parameters Type Name Description String [] fields 排序字段。 Fields | Improve this Doc View Source DefaultSortingFields 默认的排序字段。 Declaration public static readonly string[] DefaultSortingFields Field Value Type Description String [] Properties | Improve this Doc View Source Fields 需要排序的字段。 Declaration public virtual string[] Fields { get; set; } Property Value Type Description String [] 设置或获取一个字符串数组，用于表示需要排序的字段。 | Improve this Doc View Source Mode 排序方式。 Declaration public virtual SortMode? Mode { get; set; } Property Value Type Description Nullable < SortMode > 设置或获取一个值，用于表示排序方式。 See Also SortMode Implements ISortParameter See Also ISortParameter"
  },
  "api/Niacomsoft.Eips.Data.html": {
    "href": "api/Niacomsoft.Eips.Data.html",
    "title": "Namespace Niacomsoft.Eips.Data | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Namespace Niacomsoft.Eips.Data Classes DbExecutionException 当执行数据库事务失败时，将引发此类型的异常。 密闭的，不可以从此类型派生。"
  },
  "api/Niacomsoft.Eips.DateTimeComparer.html": {
    "href": "api/Niacomsoft.Eips.DateTimeComparer.html",
    "title": "Struct DateTimeComparer | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Struct DateTimeComparer 提供了日期时间对比相关的方法。 Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : Niacomsoft.Eips Assembly : Niacomsoft.Eips.Common.dll Syntax public struct DateTimeComparer Constructors | Improve this Doc View Source DateTimeComparer(DateTime) 用于初始化一个 DateTimeComparer 类型。 Declaration public DateTimeComparer(DateTime begin) Parameters Type Name Description DateTime begin DateTime 类型的值。 | Improve this Doc View Source DateTimeComparer(DateTime, DateTime) 用于初始化一个 DateTimeComparer 类型。 Declaration public DateTimeComparer(DateTime begin, DateTime end) Parameters Type Name Description DateTime begin DateTime 类型的值。 DateTime end DateTime 类型的值。 | Improve this Doc View Source DateTimeComparer(DateTimeOffset) 用于初始化一个 DateTimeComparer 类型。 Declaration public DateTimeComparer(DateTimeOffset begin) Parameters Type Name Description DateTimeOffset begin DateTimeOffset 类型的值。 | Improve this Doc View Source DateTimeComparer(DateTimeOffset, DateTimeOffset) 用于初始化一个 DateTimeComparer 类型。 Declaration public DateTimeComparer(DateTimeOffset begin, DateTimeOffset end) Parameters Type Name Description DateTimeOffset begin DateTimeOffset 类型的值。 DateTimeOffset end DateTimeOffset 类型的值。 Properties | Improve this Doc View Source After 日期时间 Begin 是否在 End 之后。 计算精度仅精确到“秒“。 Declaration public readonly bool After { get; } Property Value Type Description Boolean 获取一个值，用于表示日期时间 Begin 是否在 End 之后。 See Also TimeSpan TotalSeconds Intervals | Improve this Doc View Source Before 日期时间 Begin 是否在 End 之前。 计算精度仅精确到“秒“。 Declaration public readonly bool Before { get; } Property Value Type Description Boolean 获取一个值，用于表示日期时间 Begin 是否在 End 之后。 See Also TimeSpan TotalSeconds Intervals | Improve this Doc View Source Begin 用于对比的起始日期时间。 Declaration public DateTime Begin { get; } Property Value Type Description DateTime 获取一个值，用于表示用于对比的起始日期时间。 | Improve this Doc View Source End 用于对比的截止日期时间。 Declaration public DateTime End { get; } Property Value Type Description DateTime 获取一个值，用于表示用于对比的截止日期时间。 | Improve this Doc View Source Intervals End 和 Begin 的时间间隔。 Declaration public readonly TimeSpan Intervals { get; } Property Value Type Description TimeSpan 获取一个值，用于表示 End 和 Begin 的时间间隔。 See Also TimeSpan | Improve this Doc View Source IsSameDay Begin 和 End 是否同年同月同日。 Declaration public readonly bool IsSameDay { get; } Property Value Type Description Boolean 获取一个值，用于表示 Begin 和 End 是否同年同月同日。 | Improve this Doc View Source IsSameMonth Begin 和 End 是否同年同月。 Declaration public readonly bool IsSameMonth { get; } Property Value Type Description Boolean 获取一个值，用于表示 Begin 和 End 是否同年同月。 | Improve this Doc View Source IsSameYear Begin 和 End 是否同年。 Declaration public readonly bool IsSameYear { get; } Property Value Type Description Boolean 获取一个值，用于表示 Begin 和 End 是否同年。 See Also DateTime"
  },
  "api/Niacomsoft.Eips.DateTimeDescriptor.html": {
    "href": "api/Niacomsoft.Eips.DateTimeDescriptor.html",
    "title": "Class DateTimeDescriptor | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class DateTimeDescriptor 提供了描述日期时间相关的方法。 Inheritance Object DateTimeDescriptor Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips Assembly : Niacomsoft.Eips.Common.dll Syntax public class DateTimeDescriptor Methods | Improve this Doc View Source GetDescription(Nullable<DateTime>) 获取日期时间的描述。 此方法将使用 dateTime 与 UtcNow 进行对比。 Declaration public static string GetDescription(DateTime? dateTime) Parameters Type Name Description Nullable < DateTime > dateTime 可为空的 DateTime 类型的值。 Returns Type Description String 日期时间的描述信息。 当 dateTime .HasValue 等于 false 时，将返回 null 。 | Improve this Doc View Source GetDescription(Nullable<DateTimeOffset>) 获取日期时间的描述。 Declaration public static string GetDescription(DateTimeOffset? dateTime) Parameters Type Name Description Nullable < DateTimeOffset > dateTime 可为空的 DateTimeOffset 类型的值。 Returns Type Description String 日期时间的描述信息。 当 dateTime .HasValue 等于 false 时，将返回 null 。"
  },
  "api/Niacomsoft.Eips.Defaults.html": {
    "href": "api/Niacomsoft.Eips.Defaults.html",
    "title": "Class Defaults | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class Defaults 提供了企业私有 SaaS 服务相关的默认值。 Inheritance Object Defaults Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips Assembly : Niacomsoft.Eips.Common.dll Syntax public class Defaults Fields | Improve this Doc View Source DefaultDiagnosticCategory 默认的诊断器类别。 Declaration public const string DefaultDiagnosticCategory = \"EIPS\" Field Value Type Description String | Improve this Doc View Source DefaultEncoding 默认的编码程序。 Encoding 类型的对象实例。 Declaration public static readonly Encoding DefaultEncoding Field Value Type Description Encoding See Also Encoding UTF8Encoding | Improve this Doc View Source DefaultPasswordAlphabet 默认密码字母表。 Declaration public const string DefaultPasswordAlphabet = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_-!@#$%^&*=+\" Field Value Type Description String | Improve this Doc View Source DefaultPerPaginationSize 默认每页分页大小。 Declaration public const int DefaultPerPaginationSize = 20 Field Value Type Description Int32 | Improve this Doc View Source FalseInt32 等效于 false 的 Int32 类型的值。 Declaration public const int FalseInt32 = 0 Field Value Type Description Int32 | Improve this Doc View Source MinimumPaginationIndex 最小的分页索引数字。 Declaration public const int MinimumPaginationIndex = 0 Field Value Type Description Int32 | Improve this Doc View Source TrueInt32 等效于 true 的 Int32 类型的值。 Declaration public const int TrueInt32 = 1 Field Value Type Description Int32"
  },
  "api/Niacomsoft.Eips.Diagnostics.html": {
    "href": "api/Niacomsoft.Eips.Diagnostics.html",
    "title": "Namespace Niacomsoft.Eips.Diagnostics | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Namespace Niacomsoft.Eips.Diagnostics Classes TraceInformation 提供了诊断内容相关的方法。 TraceInformation<TTarget> 提供了诊断内容相关的方法。 TraceInformationBuilder 提供了构建 TraceInformation 类型的对象实例相关的方法。"
  },
  "api/Niacomsoft.Eips.Diagnostics.TraceInformation.html": {
    "href": "api/Niacomsoft.Eips.Diagnostics.TraceInformation.html",
    "title": "Class TraceInformation | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class TraceInformation 提供了诊断内容相关的方法。 Inheritance Object TraceInformation TraceInformation<TTarget> Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips.Diagnostics Assembly : Niacomsoft.Eips.Common.dll Syntax public class TraceInformation Constructors | Improve this Doc View Source TraceInformation(String) 用于初始化一个 TraceInformation 类型的对象实例。 Declaration public TraceInformation(string message) Parameters Type Name Description String message 诊断信息。 | Improve this Doc View Source TraceInformation(String, String) 用于初始化一个 TraceInformation 类型的对象实例。 Declaration public TraceInformation(string method, string message) Parameters Type Name Description String method 需要诊断的方法名称。 String message 诊断信息。 | Improve this Doc View Source TraceInformation(Type, String) 用于初始化一个 TraceInformation 类型的对象实例。 Declaration public TraceInformation(Type target, string message) Parameters Type Name Description Type target 需要诊断的目标类型。 Type 类型的对象实例。 String message 诊断信息。 | Improve this Doc View Source TraceInformation(Type, String, String) 用于初始化一个 TraceInformation 类型的对象实例。 Declaration public TraceInformation(Type target, string method, string message) Parameters Type Name Description Type target 需要诊断的目标类型。 Type 类型的对象实例。 String method 需要诊断的方法名称。 String message 诊断信息。 Properties | Improve this Doc View Source Message 诊断信息。 Declaration public virtual string Message { get; } Property Value Type Description String 获取一个字符串，用于表示诊断信息。 | Improve this Doc View Source MethodName 需要诊断的方法名称。 Declaration public virtual string MethodName { get; } Property Value Type Description String 获取一个字符串，用于表示需要诊断的方法名称。 | Improve this Doc View Source Target 需要诊断的目标类型。 Declaration public virtual Type Target { get; } Property Value Type Description Type 获取 Type 类型的对象实例，用于表示需要诊断的目标类型。 See Also Type Methods | Improve this Doc View Source GetUniversalMessagePrefix() 获取用于输出的消息前缀。 Declaration protected virtual string GetUniversalMessagePrefix() Returns Type Description String 统一诊断信息前缀。 | Improve this Doc View Source ToString() 获取完整的诊断信息。 Declaration public override string ToString() Returns Type Description String 完整的诊断信息。 Overrides Object.ToString() | Improve this Doc View Source ToString(Object[]) 获取完整的诊断信息。 Declaration public virtual string ToString(params object[] args) Parameters Type Name Description Object [] args 诊断信息格式化参数。 Returns Type Description String 完整的诊断信息。"
  },
  "api/Niacomsoft.Eips.Diagnostics.TraceInformation-1.html": {
    "href": "api/Niacomsoft.Eips.Diagnostics.TraceInformation-1.html",
    "title": "Class TraceInformation<TTarget> | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class TraceInformation<TTarget> 提供了诊断内容相关的方法。 Inheritance Object TraceInformation TraceInformation<TTarget> Inherited Members TraceInformation.GetUniversalMessagePrefix() TraceInformation.Message TraceInformation.MethodName TraceInformation.Target TraceInformation.ToString() TraceInformation.ToString(Object[]) Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips.Diagnostics Assembly : Niacomsoft.Eips.Common.dll Syntax public class TraceInformation<TTarget> : TraceInformation Type Parameters Name Description TTarget 需要诊断的目标类型。 Constructors | Improve this Doc View Source TraceInformation(String) 用于初始化一个 TraceInformation<TTarget> 类型的对象实例。 Declaration public TraceInformation(string message) Parameters Type Name Description String message 诊断信息。 | Improve this Doc View Source TraceInformation(String, String) 用于初始化一个 TraceInformation<TTarget> 类型的对象实例。 Declaration public TraceInformation(string method, string message) Parameters Type Name Description String method 需要诊断的方法名称。 String message 诊断信息。 See Also TraceInformation"
  },
  "api/Niacomsoft.Eips.Diagnostics.TraceInformationBuilder.html": {
    "href": "api/Niacomsoft.Eips.Diagnostics.TraceInformationBuilder.html",
    "title": "Class TraceInformationBuilder | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class TraceInformationBuilder 提供了构建 TraceInformation 类型的对象实例相关的方法。 Inheritance Object TraceInformationBuilder Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips.Diagnostics Assembly : Niacomsoft.Eips.Common.dll Syntax public class TraceInformationBuilder Constructors | Improve this Doc View Source TraceInformationBuilder() 用于初始化一个 TraceInformationBuilder 类型的对象实例。 Declaration public TraceInformationBuilder() Methods | Improve this Doc View Source Build() 构建 TraceInformation 类型的对象实例。 Declaration public virtual TraceInformation Build() Returns Type Description TraceInformation 派生自 TraceInformation 类型的对象实例。 See Also TraceInformation | Improve this Doc View Source InternalReset() 重置所有字段。 Declaration protected virtual void InternalReset() | Improve this Doc View Source Reset() 重置 TraceInformationBuilder 。 Declaration public virtual TraceInformationBuilder Reset() Returns Type Description TraceInformationBuilder TraceInformationBuilder 类型的对象实例。 | Improve this Doc View Source WithMessage(String) 设置调试消息。 Declaration public virtual TraceInformationBuilder WithMessage(string message) Parameters Type Name Description String message 调试消息。 Returns Type Description TraceInformationBuilder TraceInformationBuilder 类型的对象实例。 | Improve this Doc View Source WithMethod(String) 设置需要调试的方法名称。 Declaration public virtual TraceInformationBuilder WithMethod(string method) Parameters Type Name Description String method 方法名称。 Returns Type Description TraceInformationBuilder TraceInformationBuilder 类型的对象实例。 | Improve this Doc View Source WithTarget(Type) 设置需要调试的目标类型。 Declaration public virtual TraceInformationBuilder WithTarget(Type target) Parameters Type Name Description Type target 需要调试的目标类型。 Type 类型的对象实例。 Returns Type Description TraceInformationBuilder TraceInformationBuilder 类型的对象实例。 | Improve this Doc View Source WithTarget<TTarget>() 设置需要调试的目标类型。 Declaration public virtual TraceInformationBuilder WithTarget<TTarget>() Returns Type Description TraceInformationBuilder TraceInformationBuilder 类型的对象实例。 Type Parameters Name Description TTarget 需要调试的目标类型。"
  },
  "api/Niacomsoft.Eips.DynamicCreateObjectInstanceException.html": {
    "href": "api/Niacomsoft.Eips.DynamicCreateObjectInstanceException.html",
    "title": "Class DynamicCreateObjectInstanceException | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class DynamicCreateObjectInstanceException 当调用 CreateInstance(Type, Object[]) 方法动态创建对象实例时，可能引发此类型的异常。 密闭的，不可以从此类型派生。 Inheritance Object Exception DynamicCreateObjectInstanceException Implements ISerializable _Exception Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace : Niacomsoft.Eips Assembly : Niacomsoft.Eips.Common.dll Syntax [Serializable] public sealed class DynamicCreateObjectInstanceException : Exception, ISerializable, _Exception Constructors | Improve this Doc View Source DynamicCreateObjectInstanceException(Type, Exception) 用于初始化一个 DynamicCreateObjectInstanceException 类型的对象实例。 Declaration public DynamicCreateObjectInstanceException(Type referenceType, Exception innerException) Parameters Type Name Description Type referenceType 引用类型。 Exception innerException 引发此异常的 Exception 类型的对象实例。 Properties | Improve this Doc View Source TargetType 目标引用类型。 Declaration public Type TargetType { get; } Property Value Type Description Type 获取 Type 类型的对象实例，用于表示目标引用类型。 See Also Type Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception See Also Exception"
  },
  "api/Niacomsoft.Eips.EmptyCompareOptions.html": {
    "href": "api/Niacomsoft.Eips.EmptyCompareOptions.html",
    "title": "Enum EmptyCompareOptions | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Enum EmptyCompareOptions 定义了空白字符串比较选项枚举类型。 Namespace : Niacomsoft.Eips Assembly : Niacomsoft.Eips.Common.dll Syntax public enum EmptyCompareOptions Fields Name Description Default 默认的选项。等效于 IncludeWhiteSpace 。 IncludeWhiteSpace 对比时不仅比较 Empty ，还需要比较空格符。 OnlyEmpty 仅比较 Empty 。 OnlyNull 仅比较是否等于 null 。"
  },
  "api/Niacomsoft.Eips.EnvironmentVariable.html": {
    "href": "api/Niacomsoft.Eips.EnvironmentVariable.html",
    "title": "Class EnvironmentVariable | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class EnvironmentVariable 提供了访问环境变量信息相关的方法。 密闭的，不可以从此类型派生。 Inheritance Object EnvironmentVariable Implements IEnvironmentVariable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips Assembly : Niacomsoft.Eips.Core.dll Syntax public sealed class EnvironmentVariable : IEnvironmentVariable Properties | Improve this Doc View Source Exists 环境变量是否有值。 Declaration public bool Exists { get; } Property Value Type Description Boolean 获取一个值，用于表示环境变量是否有值。 | Improve this Doc View Source HasValue 指定名称环境变量值 Value 是否不等于 null 和 Empty 。 Declaration public bool HasValue { get; } Property Value Type Description Boolean 获取一个值，用于表示指定名称环境变量值 Value 是否不等于 null 和 Empty 。 | Improve this Doc View Source Name 环境变量名称。 Declaration public string Name { get; } Property Value Type Description String 获取一个字符串，用于表示环境变量名称。 | Improve this Doc View Source Target 目标环境变量所在位置。 Declaration public EnvironmentVariableTarget? Target { get; } Property Value Type Description Nullable < EnvironmentVariableTarget > 获取一个值，用于表示目标环境变量所在位置。 可为空的 EnvironmentVariableTarget 类型的值。 See Also EnvironmentVariableTarget | Improve this Doc View Source Value 环境变量值。 Declaration public string Value { get; } Property Value Type Description String 获取一个字符串，用于表示环境变量值。 | Improve this Doc View Source Values 不同位置的环境变量值。 Declaration public IDictionary<EnvironmentVariableTarget, string> Values { get; } Property Value Type Description IDictionary < EnvironmentVariableTarget , String > 获取 IDictionary<TKey,TValue> 类型的对象实例，用于表示不同位置的环境变量值。 See Also IDictionary <TKey, TValue> EnvironmentVariableTarget Implements IEnvironmentVariable See Also IEnvironmentVariable"
  },
  "api/Niacomsoft.Eips.EnvironmentVariableAccessor.html": {
    "href": "api/Niacomsoft.Eips.EnvironmentVariableAccessor.html",
    "title": "Class EnvironmentVariableAccessor | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class EnvironmentVariableAccessor 提供了访问环境变量信息相关的方法。 Inheritance Object EnvironmentVariableAccessor Implements IEnvironmentVariableAccessor Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips Assembly : Niacomsoft.Eips.Core.dll Syntax public class EnvironmentVariableAccessor : IEnvironmentVariableAccessor Methods | Improve this Doc View Source CreateEnvironmentVariableTuple(String, EnvironmentVariableTarget) 创建环境变量元祖。 Declaration protected virtual Tuple<EnvironmentVariableTarget?, string> CreateEnvironmentVariableTuple(string envVarValue, EnvironmentVariableTarget target) Parameters Type Name Description String envVarValue 环境变量值。 EnvironmentVariableTarget target 环境变量位置。 EnvironmentVariableTarget 类型的值。 Returns Type Description Tuple < Nullable < EnvironmentVariableTarget >, String > 包含了可为空的 EnvironmentVariableTarget 类型、字符串的 Tuple<T1,T2> 类型的对象实例。 See Also EnvironmentVariableTarget Tuple <T1, T2> | Improve this Doc View Source GetEnvironmentVariable(String) 获取指定名称的环境变量信息。 Declaration public IEnvironmentVariable GetEnvironmentVariable(string name) Parameters Type Name Description String name 环境变量名称。 Returns Type Description IEnvironmentVariable 环境变量信息。 实现了 IEnvironmentVariable 类型接口的对象实例。 Exceptions Type Condition ArgumentException 当 name 等于 null 、或者 Empty 时，将引发此类型的异常。 See Also IEnvironmentVariable | Improve this Doc View Source GetMachineScopedEnvironmentVariable(String) 获取系统级环境变量。 Declaration protected virtual Tuple<EnvironmentVariableTarget?, string> GetMachineScopedEnvironmentVariable(string name) Parameters Type Name Description String name 环境变量名称。 Returns Type Description Tuple < Nullable < EnvironmentVariableTarget >, String > 包含了可为空的 EnvironmentVariableTarget 类型、字符串的 Tuple<T1,T2> 类型的对象实例。 Exceptions Type Condition SecurityException 当调用 GetEnvironmentVariable(String, EnvironmentVariableTarget) 方法时，可能引发此类型的异常。 See Also EnvironmentVariableTarget Tuple <T1, T2> | Improve this Doc View Source GetProcessScopedEnvironmentVariable(String) 获取进程级环境变量。 Declaration protected virtual Tuple<EnvironmentVariableTarget?, string> GetProcessScopedEnvironmentVariable(string name) Parameters Type Name Description String name 环境变量名称。 Returns Type Description Tuple < Nullable < EnvironmentVariableTarget >, String > 包含了可为空的 EnvironmentVariableTarget 类型、字符串的 Tuple<T1,T2> 类型的对象实例。 Exceptions Type Condition SecurityException 当调用 GetEnvironmentVariable(String, EnvironmentVariableTarget) 方法时，可能引发此类型的异常。 See Also EnvironmentVariableTarget Tuple <T1, T2> | Improve this Doc View Source GetUserScopedEnvironmentVariable(String) 获取用户级环境变量。 Declaration protected virtual Tuple<EnvironmentVariableTarget?, string> GetUserScopedEnvironmentVariable(string name) Parameters Type Name Description String name 环境变量名称。 Returns Type Description Tuple < Nullable < EnvironmentVariableTarget >, String > 包含了可为空的 EnvironmentVariableTarget 类型、字符串的 Tuple<T1,T2> 类型的对象实例。 Exceptions Type Condition SecurityException 当调用 GetEnvironmentVariable(String, EnvironmentVariableTarget) 方法时，可能引发此类型的异常。 See Also EnvironmentVariableTarget Tuple <T1, T2> Implements IEnvironmentVariableAccessor See Also IEnvironmentVariableAccessor IAsyncEnvironmentVariableAccessor"
  },
  "api/Niacomsoft.Eips.Extensions.HashIdCryptographyKeyProvider.html": {
    "href": "api/Niacomsoft.Eips.Extensions.HashIdCryptographyKeyProvider.html",
    "title": "Class HashIdCryptographyKeyProvider | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class HashIdCryptographyKeyProvider 提供了创建哈希格式 ID 加密密钥相关的方法。 Inheritance Object HashIdCryptographyKeyProvider Implements IHashIdCryptographyKeyProvider Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Niacomsoft.Eips.Extensions Assembly : Niacomsoft.Eips.Extensions.Hashid.dll Syntax public class HashIdCryptographyKeyProvider : IHashIdCryptographyKeyProvider Properties | Improve this Doc View Source Key 哈希格式 ID 加密密钥。 Declaration public virtual string Key { get; } Property Value Type Description String 获取一个字符串，用于表示哈希格式 ID 加密密钥。 Implements IHashIdCryptographyKeyProvider See Also IHashIdCryptographyKeyProvider"
  },
  "api/Niacomsoft.Eips.Extensions.HashIdFormatter-1.html": {
    "href": "api/Niacomsoft.Eips.Extensions.HashIdFormatter-1.html",
    "title": "Class HashIdFormatter<T> | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class HashIdFormatter<T> 提供了数值哈希格式化相关的基本方法。 Inheritance Object HashIdFormatter<T> Int32HashFormatter Int64HashFormatter Implements IHashIdFormatter <T> Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Niacomsoft.Eips.Extensions Assembly : Niacomsoft.Eips.Extensions.Hashid.dll Syntax public abstract class HashIdFormatter<T> : IHashIdFormatter<T> where T : struct Type Parameters Name Description T 值类型。 仅支持 Int32 和 Int64 类型。 Constructors | Improve this Doc View Source HashIdFormatter(IHashIdCryptographyKeyProvider) 用于初始化一个 HashIdFormatter<T> 类型的对象实例。 Declaration protected HashIdFormatter(IHashIdCryptographyKeyProvider keyProvider) Parameters Type Name Description IHashIdCryptographyKeyProvider keyProvider 创建加密密钥的方法。 Properties | Improve this Doc View Source KeyProvider 生成加密密钥的方法。 Declaration public virtual IHashIdCryptographyKeyProvider KeyProvider { get; } Property Value Type Description IHashIdCryptographyKeyProvider 获取 IHashIdCryptographyKeyProvider 类型的对象实例，用于表示生成加密密钥的方法。 See Also IHashIdCryptographyKeyProvider | Improve this Doc View Source Provider 计算哈希格式数值的方法。 Declaration public virtual IHashids Provider { get; } Property Value Type Description HashidsNet.IHashids 获取 HashidsNet.IHashids 类型的对象实例，用于表示计算哈希格式数值的方法。 See Also HashidsNet.IHashids Methods | Improve this Doc View Source FromString(String) 从哈希字符串 hashStr 还原 T 类型的值。 Declaration public abstract T? FromString(string hashStr) Parameters Type Name Description String hashStr 哈希字符串。 Returns Type Description Nullable <T> 可为空的 T 类型的值。 当 hashStr 等于 null 、 Empty 或者空格符时，则返回 null 。 | Improve this Doc View Source InvalidHashString(String) 校验字符串 s 是否等于 null 、 Empty 或者空格符。 Declaration protected virtual bool InvalidHashString(string s) Parameters Type Name Description String s 哈希字符串。 Returns Type Description Boolean 当字符串 s 等于 null 、 Empty 或者空格符时，则返回 true ；否则返回 false 。 | Improve this Doc View Source ToString(T) 将数值 value 转换成哈希字符串。 Declaration public abstract string ToString(T value) Parameters Type Name Description T value T 类型的值。 Returns Type Description String 哈希字符串。 Implements IHashIdFormatter<T>"
  },
  "api/Niacomsoft.Eips.Extensions.html": {
    "href": "api/Niacomsoft.Eips.Extensions.html",
    "title": "Namespace Niacomsoft.Eips.Extensions | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Namespace Niacomsoft.Eips.Extensions Classes HashIdCryptographyKeyProvider 提供了创建哈希格式 ID 加密密钥相关的方法。 HashIdFormatter<T> 提供了数值哈希格式化相关的基本方法。 Int32HashFormatter 提供了计算 Int32 类型哈希格式化相关的方法。 密闭的，不可以从此类型派生。 Int64HashFormatter 提供了计算 Int64 类型哈希格式化相关的方法。 密闭的，不可以从此类型派生。 Interfaces IHashIdCryptographyKeyProvider 定义了创建哈希格式 ID 加密密钥的接口。 IHashIdFormatter<T> 定义了数值哈希字符串格式化的接口。"
  },
  "api/Niacomsoft.Eips.Extensions.IHashIdCryptographyKeyProvider.html": {
    "href": "api/Niacomsoft.Eips.Extensions.IHashIdCryptographyKeyProvider.html",
    "title": "Interface IHashIdCryptographyKeyProvider | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Interface IHashIdCryptographyKeyProvider 定义了创建哈希格式 ID 加密密钥的接口。 Namespace : Niacomsoft.Eips.Extensions Assembly : Niacomsoft.Eips.Extensions.Hashid.dll Syntax public interface IHashIdCryptographyKeyProvider Properties | Improve this Doc View Source Key 哈希格式 ID 加密密钥。 Declaration string Key { get; } Property Value Type Description String 获取一个字符串，用于表示哈希格式 ID 加密密钥。"
  },
  "api/Niacomsoft.Eips.Extensions.IHashIdFormatter-1.html": {
    "href": "api/Niacomsoft.Eips.Extensions.IHashIdFormatter-1.html",
    "title": "Interface IHashIdFormatter<T> | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Interface IHashIdFormatter<T> 定义了数值哈希字符串格式化的接口。 Namespace : Niacomsoft.Eips.Extensions Assembly : Niacomsoft.Eips.Extensions.Hashid.dll Syntax public interface IHashIdFormatter<T> where T : struct Type Parameters Name Description T 值类型。 仅支持 Int32 和 Int64 类型的数值。 Properties | Improve this Doc View Source KeyProvider 生成加密密钥的方法。 Declaration IHashIdCryptographyKeyProvider KeyProvider { get; } Property Value Type Description IHashIdCryptographyKeyProvider 获取 IHashIdCryptographyKeyProvider 类型的对象实例，用于表示生成加密密钥的方法。 See Also IHashIdCryptographyKeyProvider | Improve this Doc View Source Provider 计算哈希格式数值的方法。 Declaration IHashids Provider { get; } Property Value Type Description HashidsNet.IHashids 获取 HashidsNet.IHashids 类型的对象实例，用于表示计算哈希格式数值的方法。 See Also HashidsNet.IHashids Methods | Improve this Doc View Source FromString(String) 从哈希字符串 hashStr 还原 T 类型的值。 Declaration T? FromString(string hashStr) Parameters Type Name Description String hashStr 哈希字符串。 Returns Type Description Nullable <T> 可为空的 T 类型的值。 当 hashStr 等于 null 、 Empty 或者空格符时，则返回 null 。 | Improve this Doc View Source ToString(T) 将数值 value 转换成哈希字符串。 Declaration string ToString(T value) Parameters Type Name Description T value T 类型的值。 Returns Type Description String 哈希字符串。 See Also HashidsNet.Hashids"
  },
  "api/Niacomsoft.Eips.Extensions.Int32HashFormatter.html": {
    "href": "api/Niacomsoft.Eips.Extensions.Int32HashFormatter.html",
    "title": "Class Int32HashFormatter | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class Int32HashFormatter 提供了计算 Int32 类型哈希格式化相关的方法。 密闭的，不可以从此类型派生。 Inheritance Object HashIdFormatter < Int32 > Int32HashFormatter Implements IHashIdFormatter < Int32 > Inherited Members HashIdFormatter<Int32>.InvalidHashString(String) HashIdFormatter<Int32>.KeyProvider HashIdFormatter<Int32>.Provider Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Niacomsoft.Eips.Extensions Assembly : Niacomsoft.Eips.Extensions.Hashid.dll Syntax public sealed class Int32HashFormatter : HashIdFormatter<int>, IHashIdFormatter<int> Constructors | Improve this Doc View Source Int32HashFormatter(IHashIdCryptographyKeyProvider) 用于初始化一个 Int32HashFormatter 类型的对象实例。 Declaration public Int32HashFormatter(IHashIdCryptographyKeyProvider keyProvider) Parameters Type Name Description IHashIdCryptographyKeyProvider keyProvider 创建加密密钥的方法。 Methods | Improve this Doc View Source FromString(String) 从哈希字符串 hashStr 还原 Int32 类型的值。 Declaration public override int? FromString(string hashStr) Parameters Type Name Description String hashStr 哈希字符串。 Returns Type Description Nullable < Int32 > 可为空的 Int32 类型的值。 当 hashStr 等于 null 、 Empty 或者空格符时，则返回 null 。 Overrides Niacomsoft.Eips.Extensions.HashIdFormatter<System.Int32>.FromString(System.String) Exceptions Type Condition OverflowException 当调用 HashidsNet.IHashids.DecodeSingle(System.String) 方法时，可能引发此类型的异常。 HashidsNet.NoResultException 当调用 HashidsNet.IHashids.DecodeSingle(System.String) 方法时，可能引发此类型的异常。 | Improve this Doc View Source ToString(Int32) 将数值 value 转换成哈希字符串。 Declaration public override string ToString(int value) Parameters Type Name Description Int32 value Int32 类型的值。 Returns Type Description String 哈希字符串。 Overrides Niacomsoft.Eips.Extensions.HashIdFormatter<System.Int32>.ToString(System.Int32) Exceptions Type Condition NotNaturalNumberException 当 value 不是一个自然数时，将引发此类型的异常。 Implements IHashIdFormatter<T> See Also IHashIdFormatter <T> HashIdFormatter <T>"
  },
  "api/Niacomsoft.Eips.Extensions.Int64HashFormatter.html": {
    "href": "api/Niacomsoft.Eips.Extensions.Int64HashFormatter.html",
    "title": "Class Int64HashFormatter | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class Int64HashFormatter 提供了计算 Int64 类型哈希格式化相关的方法。 密闭的，不可以从此类型派生。 Inheritance Object HashIdFormatter < Int64 > Int64HashFormatter Implements IHashIdFormatter < Int64 > Inherited Members HashIdFormatter<Int64>.InvalidHashString(String) HashIdFormatter<Int64>.KeyProvider HashIdFormatter<Int64>.Provider Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Niacomsoft.Eips.Extensions Assembly : Niacomsoft.Eips.Extensions.Hashid.dll Syntax public sealed class Int64HashFormatter : HashIdFormatter<long>, IHashIdFormatter<long> Constructors | Improve this Doc View Source Int64HashFormatter(IHashIdCryptographyKeyProvider) 用于初始化一个 Int64HashFormatter 类型的对象实例。 Declaration public Int64HashFormatter(IHashIdCryptographyKeyProvider keyProvider) Parameters Type Name Description IHashIdCryptographyKeyProvider keyProvider 创建加密密钥的方法。 Methods | Improve this Doc View Source FromString(String) 从哈希字符串 hashStr 还原 Int64 类型的值。 Declaration public override long? FromString(string hashStr) Parameters Type Name Description String hashStr 哈希字符串。 Returns Type Description Nullable < Int64 > 可为空的 Int64 类型的值。 当 hashStr 等于 null 、 Empty 或者空格符时，则返回 null 。 Overrides Niacomsoft.Eips.Extensions.HashIdFormatter<System.Int64>.FromString(System.String) Exceptions Type Condition HashidsNet.NoResultException 当调用 HashidsNet.IHashids.DecodeSingleLong(System.String) 方法时，可能引发此类型的异常。 | Improve this Doc View Source ToString(Int64) 将数值 value 转换成哈希字符串。 Declaration public override string ToString(long value) Parameters Type Name Description Int64 value Int64 类型的值。 Returns Type Description String 哈希字符串。 Overrides Niacomsoft.Eips.Extensions.HashIdFormatter<System.Int64>.ToString(System.Int64) Exceptions Type Condition NotNaturalNumberException 当 value 不是一个自然数时，将引发此类型的异常。 Implements IHashIdFormatter<T> See Also IHashIdFormatter <T> HashIdFormatter <T>"
  },
  "api/Niacomsoft.Eips.Gender.html": {
    "href": "api/Niacomsoft.Eips.Gender.html",
    "title": "Enum Gender | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Enum Gender 定义了性别枚举类型。 Namespace : Niacomsoft.Eips Assembly : Niacomsoft.Eips.Core.dll Syntax public enum Gender Fields Name Description Default 默认的。等效于 NotSupport 。 Female 女性。 Male 男性。 NotSupport 未提供。 Unknown 未知的。 Extension Methods DbTypeExtensions.ToInt()"
  },
  "api/Niacomsoft.Eips.Globalization.ContextCultureConfigurator.html": {
    "href": "api/Niacomsoft.Eips.Globalization.ContextCultureConfigurator.html",
    "title": "Class ContextCultureConfigurator | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class ContextCultureConfigurator 提供了配置上下文文化区域相关的方法。 Inheritance Object ContextCultureConfigurator Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips.Globalization Assembly : Niacomsoft.Eips.Common.dll Syntax public class ContextCultureConfigurator Methods | Improve this Doc View Source SetDefaultThreadCurrentCulture(SupportedCultures) 设置应用程序域中线程默认文化区域。 Declaration public static void SetDefaultThreadCurrentCulture(SupportedCultures supported = SupportedCultures.China) Parameters Type Name Description SupportedCultures supported Enterprise InPrivate SaaS - EIPS 提供的文化区域信息。 SupportedCultures 类型的值。 See Also SupportedCultures | Improve this Doc View Source SetDefaultThreadCurrentCulture(Int32) 设置应用程序域中线程默认文化区域。 Declaration public static void SetDefaultThreadCurrentCulture(int lcid) Parameters Type Name Description Int32 lcid 文化区域标识。 | Improve this Doc View Source SetThreadCurrentCulture(SupportedCultures) 设置当前线程的文化区域信息。 Declaration public static void SetThreadCurrentCulture(SupportedCultures supported = SupportedCultures.China) Parameters Type Name Description SupportedCultures supported Enterprise InPrivate SaaS - EIPS 提供的文化区域信息。 SupportedCultures 类型的值。 See Also SupportedCultures | Improve this Doc View Source SetThreadCurrentCulture(Int32) 设置当前线程的文化区域信息。 Declaration public static void SetThreadCurrentCulture(int lcid) Parameters Type Name Description Int32 lcid 文化区域标识。"
  },
  "api/Niacomsoft.Eips.Globalization.html": {
    "href": "api/Niacomsoft.Eips.Globalization.html",
    "title": "Namespace Niacomsoft.Eips.Globalization | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Namespace Niacomsoft.Eips.Globalization Classes ContextCultureConfigurator 提供了配置上下文文化区域相关的方法。 SR 提供了字符串资源相关的方法。 Enums SupportedCultures 定义了 Enterprise InPrivate SaaS (EIPS) 默认提供的文化区域枚举类型。"
  },
  "api/Niacomsoft.Eips.Globalization.SR.html": {
    "href": "api/Niacomsoft.Eips.Globalization.SR.html",
    "title": "Class SR | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class SR 提供了字符串资源相关的方法。 Inheritance Object SR Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips.Globalization Assembly : Niacomsoft.Eips.Globalization.Supported.dll Syntax public class SR Methods | Improve this Doc View Source Format(String, Object[]) 获取指定名称的资源字符串，并调用 Format(String, Object[]) 方法进行格式化。 Declaration public static string Format(string resourceName, params object[] args) Parameters Type Name Description String resourceName 资源名称。 Object [] args 格式化参数数组。 Returns Type Description String 格式化后的资源字符串。 See Also Format(String, Object[]) | Improve this Doc View Source GetString(String) 获取指定名称的资源字符串。 Declaration public static string GetString(string resourceName) Parameters Type Name Description String resourceName 资源名称。 Returns Type Description String 资源字符串。"
  },
  "api/Niacomsoft.Eips.Globalization.SupportedCultures.html": {
    "href": "api/Niacomsoft.Eips.Globalization.SupportedCultures.html",
    "title": "Enum SupportedCultures | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Enum SupportedCultures 定义了 Enterprise InPrivate SaaS (EIPS) 默认提供的文化区域枚举类型。 Namespace : Niacomsoft.Eips.Globalization Assembly : Niacomsoft.Eips.Common.dll Syntax public enum SupportedCultures Fields Name Description China 中文（中国） Default 默认的文化区域。等效于 China Taiwan 中文（台湾） USA 英语（美国）"
  },
  "api/Niacomsoft.Eips.GuidGenerator.html": {
    "href": "api/Niacomsoft.Eips.GuidGenerator.html",
    "title": "Class GuidGenerator | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class GuidGenerator 提供了生成 Guid 类型 ID 相关的方法。 密闭的，不可以从此类型派生。 Inheritance Object GuidGenerator Implements IValueTypedIDGenerateUtilities < Guid > IIDGenerateUtilities < Guid > Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips Assembly : Niacomsoft.Eips.Core.dll Syntax public sealed class GuidGenerator : IValueTypedIDGenerateUtilities<Guid>, IIDGenerateUtilities<Guid> Methods | Improve this Doc View Source NewId(Object[]) 产生一个新的 Guid 类型 ID。 Declaration public Guid NewId(params object[] args) Parameters Type Name Description Object [] args 生成新的 ID 所需的扩展参数。 Returns Type Description Guid Guid 类型 ID。 Implements IValueTypedIDGenerateUtilities<TValueType> IIDGenerateUtilities<T> See Also IValueTypedIDGenerateUtilities <TValueType> IIDGenerateUtilities <T> Guid"
  },
  "api/Niacomsoft.Eips.html": {
    "href": "api/Niacomsoft.Eips.html",
    "title": "Namespace Niacomsoft.Eips | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Namespace Niacomsoft.Eips Classes ActivatorUtilities 提供了动态创建对象实例相关的辅助方法。 AttributeHelper<TTarget> 提供了访问注解信息相关的基本方法。 DateTimeDescriptor 提供了描述日期时间相关的方法。 Defaults 提供了企业私有 SaaS 服务相关的默认值。 DynamicCreateObjectInstanceException 当调用 CreateInstance(Type, Object[]) 方法动态创建对象实例时，可能引发此类型的异常。 密闭的，不可以从此类型派生。 EnvironmentVariable 提供了访问环境变量信息相关的方法。 密闭的，不可以从此类型派生。 EnvironmentVariableAccessor 提供了访问环境变量信息相关的方法。 GuidGenerator 提供了生成 Guid 类型 ID 相关的方法。 密闭的，不可以从此类型派生。 NotNaturalNumberException 当数值小于 0 时，将引发此类型的异常。 密闭的，不可以从此类型派生。 ParameterGuard 提供了安全的参数值相关的方法。 ReferenceTypeEqualityComparer 提供了引用类型相等对比相关的方法。 StringEqualityComparer 提供了字符串相等对比相关的方法。 StringUtilities 提供了字符串相关的辅助方法。 ValueTypeComparer 提供了值类型比较相关的方法。 Structs DateTimeComparer 提供了日期时间对比相关的方法。 Interfaces IAsyncAttributeHelper<TTarget> 定义了异步的访问注解信息的接口。 IAsyncEnvironmentVariableAccessor 提供了异步访问环境变量信息相关的方法。 IAttributeHelper<TTarget> 定义了注解 Attribute 相关的接口。 IEnvironmentVariable 定义了访问环境变量信息的接口。 IEnvironmentVariableAccessor 定义了访问环境变量信息的接口。 IFluentInterface 定义了组合式 API 的接口。 IIDGenerateUtilities<T> 定义了生成 ID 的方法接口。 IStringifyIDGenerateUtilities 定义了生成字符串类型 ID 的方法接口。 IValueTypedIDGenerateUtilities<TValueType> 定义了生成值类型 ID 的方法接口。 Enums EmptyCompareOptions 定义了空白字符串比较选项枚举类型。 Gender 定义了性别枚举类型。 NumberComparisonSymbols 定义了数字比较符号枚举类型。"
  },
  "api/Niacomsoft.Eips.IAsyncAttributeHelper-1.html": {
    "href": "api/Niacomsoft.Eips.IAsyncAttributeHelper-1.html",
    "title": "Interface IAsyncAttributeHelper<TTarget> | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Interface IAsyncAttributeHelper<TTarget> 定义了异步的访问注解信息的接口。 Inherited Members IAttributeHelper<TTarget>.GetCustomAttribute<TAttribute>(TTarget, Boolean) IAttributeHelper<TTarget>.GetCustomAttributes(TTarget, Boolean) IAttributeHelper<TTarget>.GetCustomAttributes<TAttribute>(TTarget, Boolean) Namespace : Niacomsoft.Eips Assembly : Niacomsoft.Eips.Core.Abstractions.dll Syntax public interface IAsyncAttributeHelper<TTarget> : IAttributeHelper<TTarget> where TTarget : class Type Parameters Name Description TTarget 注解目标类型。 Methods | Improve this Doc View Source GetCustomAttributeAsync<TAttribute>(TTarget, Boolean) (异步的方法) 获取 target 中 TAttribute 类型的注解。 Declaration Task<TAttribute> GetCustomAttributeAsync<TAttribute>(TTarget target, bool inherit = false) where TAttribute : Attribute Parameters Type Name Description TTarget target 注解目标。 TTarget 类型的对象实例。 Boolean inherit 是否检索 TTarget 的继承链。 Returns Type Description Task <TAttribute> TAttribute 类型的对象实例。 Type Parameters Name Description TAttribute 派生自 Attribute 的类型。 See Also Attribute Task <TResult> | Improve this Doc View Source GetCustomAttributesAsync(TTarget, Boolean) (异步的方法) 获取 target 所有的注解。 Declaration Task<IEnumerable<Attribute>> GetCustomAttributesAsync(TTarget target, bool inherit = false) Parameters Type Name Description TTarget target 注解目标。 TTarget 类型的对象实例。 Boolean inherit 是否检索 TTarget 的继承链。 Returns Type Description Task < IEnumerable < Attribute >> Attribute 类型的对象实例集合。 See Also IEnumerable <T> Attribute Task <TResult> | Improve this Doc View Source GetCustomAttributesAsync<TAttribute>(TTarget, Boolean) (异步的方法) 获取 target 所有的 TAttribute 类型注解。 Declaration Task<IEnumerable<TAttribute>> GetCustomAttributesAsync<TAttribute>(TTarget target, bool inherit = false) where TAttribute : Attribute Parameters Type Name Description TTarget target 注解目标。 TTarget 类型的对象实例。 Boolean inherit 是否检索 TTarget 的继承链。 Returns Type Description Task < IEnumerable <TAttribute>> TAttribute 类型的对象实例集合。 Type Parameters Name Description TAttribute 派生自 Attribute 的类型。 See Also IEnumerable <T> Attribute Task <TResult> See Also IAttributeHelper <TTarget>"
  },
  "api/Niacomsoft.Eips.IAsyncEnvironmentVariableAccessor.html": {
    "href": "api/Niacomsoft.Eips.IAsyncEnvironmentVariableAccessor.html",
    "title": "Interface IAsyncEnvironmentVariableAccessor | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Interface IAsyncEnvironmentVariableAccessor 提供了异步访问环境变量信息相关的方法。 Inherited Members IEnvironmentVariableAccessor.GetEnvironmentVariable(String) Namespace : Niacomsoft.Eips Assembly : Niacomsoft.Eips.Core.Abstractions.dll Syntax public interface IAsyncEnvironmentVariableAccessor : IEnvironmentVariableAccessor Methods | Improve this Doc View Source GetEnvironmentVariableAsync(String) (异步的方法) 获取指定名称的环境变量。 Declaration Task<IEnvironmentVariable> GetEnvironmentVariableAsync(string name) Parameters Type Name Description String name 环境变量名称。 Returns Type Description Task < IEnvironmentVariable > 环境变量信息。 See Also IEnvironmentVariable Task <TResult> See Also IEnvironmentVariableAccessor"
  },
  "api/Niacomsoft.Eips.IAttributeHelper-1.html": {
    "href": "api/Niacomsoft.Eips.IAttributeHelper-1.html",
    "title": "Interface IAttributeHelper<TTarget> | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Interface IAttributeHelper<TTarget> 定义了注解 Attribute 相关的接口。 Namespace : Niacomsoft.Eips Assembly : Niacomsoft.Eips.Core.Abstractions.dll Syntax public interface IAttributeHelper<TTarget> where TTarget : class Type Parameters Name Description TTarget 注解目标类型。 Methods | Improve this Doc View Source GetCustomAttribute<TAttribute>(TTarget, Boolean) 获取 target 中 TAttribute 类型的注解。 Declaration TAttribute GetCustomAttribute<TAttribute>(TTarget target, bool inherit = false) where TAttribute : Attribute Parameters Type Name Description TTarget target 注解目标。 TTarget 类型的对象实例。 Boolean inherit 是否检索 TTarget 的继承链。 Returns Type Description TAttribute TAttribute 类型的对象实例。 Type Parameters Name Description TAttribute 派生自 Attribute 的类型。 See Also Attribute | Improve this Doc View Source GetCustomAttributes(TTarget, Boolean) 获取 target 所有的注解。 Declaration IEnumerable<Attribute> GetCustomAttributes(TTarget target, bool inherit = false) Parameters Type Name Description TTarget target 注解目标。 TTarget 类型的对象实例。 Boolean inherit 是否检索 TTarget 的继承链。 Returns Type Description IEnumerable < Attribute > Attribute 类型的对象实例集合。 See Also IEnumerable <T> Attribute | Improve this Doc View Source GetCustomAttributes<TAttribute>(TTarget, Boolean) 获取 target 所有的 TAttribute 类型注解。 Declaration IEnumerable<TAttribute> GetCustomAttributes<TAttribute>(TTarget target, bool inherit = false) where TAttribute : Attribute Parameters Type Name Description TTarget target 注解目标。 TTarget 类型的对象实例。 Boolean inherit 是否检索 TTarget 的继承链。 Returns Type Description IEnumerable <TAttribute> TAttribute 类型的对象实例集合。 Type Parameters Name Description TAttribute 派生自 Attribute 的类型。 See Also IEnumerable <T> Attribute"
  },
  "api/Niacomsoft.Eips.IEnvironmentVariable.html": {
    "href": "api/Niacomsoft.Eips.IEnvironmentVariable.html",
    "title": "Interface IEnvironmentVariable | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Interface IEnvironmentVariable 定义了访问环境变量信息的接口。 Namespace : Niacomsoft.Eips Assembly : Niacomsoft.Eips.Core.Abstractions.dll Syntax public interface IEnvironmentVariable Properties | Improve this Doc View Source Exists 环境变量是否有值。 Declaration bool Exists { get; } Property Value Type Description Boolean 获取一个值，用于表示环境变量是否有值。 | Improve this Doc View Source HasValue 指定名称环境变量值 Value 是否不等于 null 和 Empty 。 Declaration bool HasValue { get; } Property Value Type Description Boolean 获取一个值，用于表示指定名称环境变量值 Value 是否不等于 null 和 Empty 。 | Improve this Doc View Source Name 环境变量名称。 Declaration string Name { get; } Property Value Type Description String 获取一个字符串，用于表示环境变量名称。 | Improve this Doc View Source Target 目标环境变量所在位置。 Declaration EnvironmentVariableTarget? Target { get; } Property Value Type Description Nullable < EnvironmentVariableTarget > 获取一个值，用于表示目标环境变量所在位置。 可为空的 EnvironmentVariableTarget 类型的值。 See Also EnvironmentVariableTarget | Improve this Doc View Source Value 环境变量值。 Declaration string Value { get; } Property Value Type Description String 获取一个字符串，用于表示环境变量值。 | Improve this Doc View Source Values 不同位置的环境变量值。 Declaration IDictionary<EnvironmentVariableTarget, string> Values { get; } Property Value Type Description IDictionary < EnvironmentVariableTarget , String > 获取 IDictionary<TKey,TValue> 类型的对象实例，用于表示不同位置的环境变量值。 See Also IDictionary <TKey, TValue> EnvironmentVariableTarget"
  },
  "api/Niacomsoft.Eips.IEnvironmentVariableAccessor.html": {
    "href": "api/Niacomsoft.Eips.IEnvironmentVariableAccessor.html",
    "title": "Interface IEnvironmentVariableAccessor | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Interface IEnvironmentVariableAccessor 定义了访问环境变量信息的接口。 Namespace : Niacomsoft.Eips Assembly : Niacomsoft.Eips.Core.Abstractions.dll Syntax public interface IEnvironmentVariableAccessor Methods | Improve this Doc View Source GetEnvironmentVariable(String) 获取指定名称的环境变量信息。 Declaration IEnvironmentVariable GetEnvironmentVariable(string name) Parameters Type Name Description String name 环境变量名称。 Returns Type Description IEnvironmentVariable 环境变量信息。 实现了 IEnvironmentVariable 类型接口的对象实例。 See Also IEnvironmentVariable"
  },
  "api/Niacomsoft.Eips.IFluentInterface.html": {
    "href": "api/Niacomsoft.Eips.IFluentInterface.html",
    "title": "Interface IFluentInterface | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Interface IFluentInterface 定义了组合式 API 的接口。 Namespace : Niacomsoft.Eips Assembly : Niacomsoft.Eips.Core.Abstractions.dll Syntax public interface IFluentInterface"
  },
  "api/Niacomsoft.Eips.IIDGenerateUtilities-1.html": {
    "href": "api/Niacomsoft.Eips.IIDGenerateUtilities-1.html",
    "title": "Interface IIDGenerateUtilities<T> | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Interface IIDGenerateUtilities<T> 定义了生成 ID 的方法接口。 Namespace : Niacomsoft.Eips Assembly : Niacomsoft.Eips.Core.Abstractions.dll Syntax public interface IIDGenerateUtilities<T> Type Parameters Name Description T ID 类型。 Methods | Improve this Doc View Source NewId(Object[]) 产生一个新的 T 类型 ID。 Declaration T NewId(params object[] args) Parameters Type Name Description Object [] args 生成新的 ID 所需的扩展参数。 Returns Type Description T T 类型 ID。"
  },
  "api/Niacomsoft.Eips.IStringifyIDGenerateUtilities.html": {
    "href": "api/Niacomsoft.Eips.IStringifyIDGenerateUtilities.html",
    "title": "Interface IStringifyIDGenerateUtilities | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Interface IStringifyIDGenerateUtilities 定义了生成字符串类型 ID 的方法接口。 Inherited Members IIDGenerateUtilities<String>.NewId(Object[]) Namespace : Niacomsoft.Eips Assembly : Niacomsoft.Eips.Core.Abstractions.dll Syntax public interface IStringifyIDGenerateUtilities : IIDGenerateUtilities<string> See Also IIDGenerateUtilities <T>"
  },
  "api/Niacomsoft.Eips.IValueTypedIDGenerateUtilities-1.html": {
    "href": "api/Niacomsoft.Eips.IValueTypedIDGenerateUtilities-1.html",
    "title": "Interface IValueTypedIDGenerateUtilities<TValueType> | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Interface IValueTypedIDGenerateUtilities<TValueType> 定义了生成值类型 ID 的方法接口。 Inherited Members IIDGenerateUtilities<TValueType>.NewId(Object[]) Namespace : Niacomsoft.Eips Assembly : Niacomsoft.Eips.Core.Abstractions.dll Syntax public interface IValueTypedIDGenerateUtilities<TValueType> : IIDGenerateUtilities<TValueType> where TValueType : struct Type Parameters Name Description TValueType 值类型。 See Also IIDGenerateUtilities <T>"
  },
  "api/Niacomsoft.Eips.NotNaturalNumberException.html": {
    "href": "api/Niacomsoft.Eips.NotNaturalNumberException.html",
    "title": "Class NotNaturalNumberException | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class NotNaturalNumberException 当数值小于 0 时，将引发此类型的异常。 密闭的，不可以从此类型派生。 Inheritance Object Exception NotNaturalNumberException Implements ISerializable _Exception Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace : Niacomsoft.Eips Assembly : Niacomsoft.Eips.Common.dll Syntax public sealed class NotNaturalNumberException : Exception, ISerializable, _Exception Constructors | Improve this Doc View Source NotNaturalNumberException(Int16) 用于初始化一个 NotNaturalNumberException 类型的对象实例。 Declaration public NotNaturalNumberException(short value) Parameters Type Name Description Int16 value Int16 类型的值。 | Improve this Doc View Source NotNaturalNumberException(Int32) 用于初始化一个 NotNaturalNumberException 类型的对象实例。 Declaration public NotNaturalNumberException(int value) Parameters Type Name Description Int32 value Int32 类型的值。 | Improve this Doc View Source NotNaturalNumberException(Int64) 用于初始化一个 NotNaturalNumberException 类型的对象实例。 Declaration public NotNaturalNumberException(long value) Parameters Type Name Description Int64 value Int64 类型的值。 Methods | Improve this Doc View Source Throw(Int16) 当 value 小于 0 时，将引发一个 NotNaturalNumberException 类型的异常。 Declaration public static void Throw(short value) Parameters Type Name Description Int16 value Int16 类型的值。 Exceptions Type Condition NotNaturalNumberException | Improve this Doc View Source Throw(Int32) 当 value 小于 0 时，将引发一个 NotNaturalNumberException 类型的异常。 Declaration public static void Throw(int value) Parameters Type Name Description Int32 value Int32 类型的值。 Exceptions Type Condition NotNaturalNumberException | Improve this Doc View Source Throw(Int64) 当 value 小于 0 时，将引发一个 NotNaturalNumberException 类型的异常。 Declaration public static void Throw(long value) Parameters Type Name Description Int64 value Int64 类型的值。 Exceptions Type Condition NotNaturalNumberException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception See Also Exception"
  },
  "api/Niacomsoft.Eips.NumberComparisonSymbols.html": {
    "href": "api/Niacomsoft.Eips.NumberComparisonSymbols.html",
    "title": "Enum NumberComparisonSymbols | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Enum NumberComparisonSymbols 定义了数字比较符号枚举类型。 Namespace : Niacomsoft.Eips Assembly : Niacomsoft.Eips.Common.dll Syntax public enum NumberComparisonSymbols Fields Name Description Default 默认的。 等效于 Equal 。 Equal 等于号。 GreaterThan 大于号。 GreaterThanOrEqual 大于等于号。 LessThan 小于号。 LessThanOrEqual 小于等于号。"
  },
  "api/Niacomsoft.Eips.Options.html": {
    "href": "api/Niacomsoft.Eips.Options.html",
    "title": "Namespace Niacomsoft.Eips.Options | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Namespace Niacomsoft.Eips.Options Interfaces IConfigurableOptions 定义了可配置选项的标记接口。"
  },
  "api/Niacomsoft.Eips.Options.IConfigurableOptions.html": {
    "href": "api/Niacomsoft.Eips.Options.IConfigurableOptions.html",
    "title": "Interface IConfigurableOptions | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Interface IConfigurableOptions 定义了可配置选项的标记接口。 Namespace : Niacomsoft.Eips.Options Assembly : Niacomsoft.Eips.Core.Abstractions.dll Syntax public interface IConfigurableOptions"
  },
  "api/Niacomsoft.Eips.ParameterGuard.html": {
    "href": "api/Niacomsoft.Eips.ParameterGuard.html",
    "title": "Class ParameterGuard | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class ParameterGuard 提供了安全的参数值相关的方法。 Inheritance Object ParameterGuard Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips Assembly : Niacomsoft.Eips.Common.dll Syntax public class ParameterGuard Methods | Improve this Doc View Source SafeGet(String, String, EmptyCompareOptions) 当 Empty(String, EmptyCompareOptions) 返回 true 时，则返回 safeString ；否则返回 s 。 Declaration public static string SafeGet(string s, string safeString, EmptyCompareOptions options = EmptyCompareOptions.OnlyNull) Parameters Type Name Description String s 原始字符串。 String safeString 安全字符串。 EmptyCompareOptions options 空白字符串选项。 EmptyCompareOptions 类型的值。 Returns Type Description String 字符串。 See Also EmptyCompareOptions | Improve this Doc View Source SafeGet<T>(T, Func<T>) 当 instance 等于 null 时，则使用 safeGuard 的返回值；否则使用 instance 。 Declaration public static T SafeGet<T>(T instance, Func<T> safeGuard) where T : class Parameters Type Name Description T instance T 类型的对象实例。 Func <T> safeGuard 构建安全参数值的方法。 Returns Type Description T T 类型的对象实例。 Type Parameters Name Description T 引用类型。 | Improve this Doc View Source SafeGet<T>(Nullable<T>, T) 当 value.HasValue 等于 true 时，则返回 value.Value ；否则返回 safeValue 。 Declaration public static T SafeGet<T>(T? value, T safeValue) where T : struct Parameters Type Name Description Nullable <T> value 可能为空的 T 类型的值。 T safeValue T 类型的值。 Returns Type Description T T 类型的值。 Type Parameters Name Description T 值类型。 See Also Nullable <T> | Improve this Doc View Source TrueGet<T>(T, Func<T, Boolean>, Func<T>) 当条件表达式 where 返回 true 时，则使用 safeGuard 作为参数值；否则使用 source 作为最终参数值。 Declaration public static T TrueGet<T>(T source, Func<T, bool> where, Func<T> safeGuard) Parameters Type Name Description T source 原始参数值。 Func <T, Boolean > where 条件表达式。 Func <T> safeGuard 构建安全参数值的方法。 Returns Type Description T T 类型的参数值。 Type Parameters Name Description T 参数值类型。 Exceptions Type Condition ArgumentNullException 当 safeGuard 等于 null 时，将引发此类型的异常。 See Also Func <T, TResult> Func <TResult>"
  },
  "api/Niacomsoft.Eips.ReferenceTypeEqualityComparer.html": {
    "href": "api/Niacomsoft.Eips.ReferenceTypeEqualityComparer.html",
    "title": "Class ReferenceTypeEqualityComparer | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class ReferenceTypeEqualityComparer 提供了引用类型相等对比相关的方法。 Inheritance Object ReferenceTypeEqualityComparer Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips Assembly : Niacomsoft.Eips.Common.dll Syntax public class ReferenceTypeEqualityComparer Methods | Improve this Doc View Source None(Object) 用于校验 obj 是否等于 null 。 Declaration public static bool None(object obj) Parameters Type Name Description Object obj 需要校验的对象实例。 Returns Type Description Boolean 当 obj 等于 null 时，则返回 true ；否则返回 false 。 | Improve this Doc View Source NotNone(Object) 用于校验 obj 是否不等于 null 。 Declaration public static bool NotNone(object obj) Parameters Type Name Description Object obj 需要校验的对象实例。 Returns Type Description Boolean 当 obj 不等于 null 时，则返回 true ；否则返回 false 。 See Also None(Object)"
  },
  "api/Niacomsoft.Eips.Reflection.AssemblyAttributeHelper.html": {
    "href": "api/Niacomsoft.Eips.Reflection.AssemblyAttributeHelper.html",
    "title": "Class AssemblyAttributeHelper | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class AssemblyAttributeHelper 提供了访问程序集注解信息相关的方法。 密闭的，不可以从此类型派生。 Inheritance Object AttributeHelper < Assembly > AssemblyAttributeHelper Implements IAttributeHelper < Assembly > Inherited Members AttributeHelper<Assembly>.InvalidTarget(Assembly) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips.Reflection Assembly : Niacomsoft.Eips.Core.dll Syntax public sealed class AssemblyAttributeHelper : AttributeHelper<Assembly>, IAttributeHelper<Assembly> Properties | Improve this Doc View Source Instance 访问程序集注解信息的方法。 Declaration public static IAttributeHelper<Assembly> Instance { get; } Property Value Type Description IAttributeHelper < Assembly > 获取 AssemblyAttributeHelper 类型的对象实例，用于表示访问程序集注解信息的方法。 See Also IAttributeHelper <TTarget> Methods | Improve this Doc View Source GetCustomAttribute<TAttribute>(Assembly, Boolean) 获取 assm 中 TAttribute 类型的注解。 Declaration public override TAttribute GetCustomAttribute<TAttribute>(Assembly assm, bool inherit = false) where TAttribute : Attribute Parameters Type Name Description Assembly assm 注解目标。 Assembly 类型的对象实例。 Boolean inherit 是否检索 Assembly 的继承链。 Returns Type Description TAttribute TAttribute 类型的对象实例。 Type Parameters Name Description TAttribute Overrides Niacomsoft.Eips.AttributeHelper<System.Reflection.Assembly>.GetCustomAttribute<TAttribute>(System.Reflection.Assembly, System.Boolean) Exceptions Type Condition AmbiguousMatchException 当调用 GetCustomAttribute(Assembly, Type, Boolean) 方法时，可能引发此类型的异常。 See Also Attribute | Improve this Doc View Source GetCustomAttributes(Assembly, Boolean) 获取 assm 所有的注解。 Declaration public override IEnumerable<Attribute> GetCustomAttributes(Assembly assm, bool inherit = false) Parameters Type Name Description Assembly assm 注解目标。 Assembly 类型的对象实例。 Boolean inherit 是否检索 Assembly 的继承链。 Returns Type Description IEnumerable < Attribute > Attribute 类型的对象实例集合。 Overrides Niacomsoft.Eips.AttributeHelper<System.Reflection.Assembly>.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) See Also IEnumerable <T> Attribute | Improve this Doc View Source GetCustomAttributes<TAttribute>(Assembly, Boolean) 获取 assm 所有的 TAttribute 类型注解。 Declaration public override IEnumerable<TAttribute> GetCustomAttributes<TAttribute>(Assembly assm, bool inherit = false) where TAttribute : Attribute Parameters Type Name Description Assembly assm 注解目标。 Assembly 类型的对象实例。 Boolean inherit 是否检索 Assembly 的继承链。 Returns Type Description IEnumerable <TAttribute> TAttribute 类型的对象实例集合。 Type Parameters Name Description TAttribute Overrides Niacomsoft.Eips.AttributeHelper<System.Reflection.Assembly>.GetCustomAttributes<TAttribute>(System.Reflection.Assembly, System.Boolean) See Also IEnumerable <T> Attribute Implements IAttributeHelper<TTarget> See Also IAttributeHelper <TTarget> IAsyncAttributeHelper <TTarget> AttributeHelper <TTarget> Assembly"
  },
  "api/Niacomsoft.Eips.Reflection.html": {
    "href": "api/Niacomsoft.Eips.Reflection.html",
    "title": "Namespace Niacomsoft.Eips.Reflection | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Namespace Niacomsoft.Eips.Reflection Classes AssemblyAttributeHelper 提供了访问程序集注解信息相关的方法。 密闭的，不可以从此类型派生。 MemberAttributeHelper 提供了访问成员注解信息相关的方法。 密闭的，不可以从此类型派生。"
  },
  "api/Niacomsoft.Eips.Reflection.MemberAttributeHelper.html": {
    "href": "api/Niacomsoft.Eips.Reflection.MemberAttributeHelper.html",
    "title": "Class MemberAttributeHelper | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class MemberAttributeHelper 提供了访问成员注解信息相关的方法。 密闭的，不可以从此类型派生。 Inheritance Object AttributeHelper < MemberInfo > MemberAttributeHelper Implements IAttributeHelper < MemberInfo > Inherited Members AttributeHelper<MemberInfo>.InvalidTarget(MemberInfo) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips.Reflection Assembly : Niacomsoft.Eips.Core.dll Syntax public sealed class MemberAttributeHelper : AttributeHelper<MemberInfo>, IAttributeHelper<MemberInfo> Properties | Improve this Doc View Source Instance 访问成员注解信息的方法。 Declaration public static IAttributeHelper<MemberInfo> Instance { get; } Property Value Type Description IAttributeHelper < MemberInfo > 获取 MemberAttributeHelper 类型的对象实例，用于表示访问成员注解信息的方法。 See Also IAttributeHelper <TTarget> MemberInfo Methods | Improve this Doc View Source GetCustomAttribute<TAttribute>(MemberInfo, Boolean) 获取 member 中 TAttribute 类型的注解。 Declaration public override TAttribute GetCustomAttribute<TAttribute>(MemberInfo member, bool inherit = false) where TAttribute : Attribute Parameters Type Name Description MemberInfo member 注解目标。 MemberInfo 类型的对象实例。 Boolean inherit 是否检索 MemberInfo 的继承链。 Returns Type Description TAttribute TAttribute 类型的对象实例。 Type Parameters Name Description TAttribute Overrides Niacomsoft.Eips.AttributeHelper<System.Reflection.MemberInfo>.GetCustomAttribute<TAttribute>(System.Reflection.MemberInfo, System.Boolean) Exceptions Type Condition NotSupportedException 当调用 GetCustomAttribute(MemberInfo, Type, Boolean) 方法时，可能引发此类型的异常。 AmbiguousMatchException 当调用 GetCustomAttribute(MemberInfo, Type, Boolean) 方法时，可能引发此类型的异常。 TypeLoadException 当调用 GetCustomAttribute(MemberInfo, Type, Boolean) 方法时，可能引发此类型的异常。 See Also Attribute | Improve this Doc View Source GetCustomAttributes(MemberInfo, Boolean) 获取 member 所有的注解。 Declaration public override IEnumerable<Attribute> GetCustomAttributes(MemberInfo member, bool inherit = false) Parameters Type Name Description MemberInfo member 注解目标。 MemberInfo 类型的对象实例。 Boolean inherit 是否检索 MemberInfo 的继承链。 Returns Type Description IEnumerable < Attribute > Attribute 类型的对象实例集合。 Overrides Niacomsoft.Eips.AttributeHelper<System.Reflection.MemberInfo>.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) Exceptions Type Condition NotSupportedException 当调用 GetCustomAttributes(MemberInfo, Boolean) 方法时，可能引发此类型的异常。 TypeLoadException 当调用 GetCustomAttributes(MemberInfo, Boolean) 方法时，可能引发此类型的异常。 See Also IEnumerable <T> Attribute | Improve this Doc View Source GetCustomAttributes<TAttribute>(MemberInfo, Boolean) 获取 member 所有的 TAttribute 类型注解。 Declaration public override IEnumerable<TAttribute> GetCustomAttributes<TAttribute>(MemberInfo member, bool inherit = false) where TAttribute : Attribute Parameters Type Name Description MemberInfo member 注解目标。 MemberInfo 类型的对象实例。 Boolean inherit 是否检索 MemberInfo 的继承链。 Returns Type Description IEnumerable <TAttribute> TAttribute 类型的对象实例集合。 Type Parameters Name Description TAttribute Overrides Niacomsoft.Eips.AttributeHelper<System.Reflection.MemberInfo>.GetCustomAttributes<TAttribute>(System.Reflection.MemberInfo, System.Boolean) Exceptions Type Condition NotSupportedException 当调用 GetCustomAttributes(MemberInfo, Boolean) 方法时，可能引发此类型的异常。 TypeLoadException 当调用 GetCustomAttributes(MemberInfo, Boolean) 方法时，可能引发此类型的异常。 See Also IEnumerable <T> Attribute Implements IAttributeHelper<TTarget> See Also IAttributeHelper <TTarget> IAsyncAttributeHelper <TTarget> AttributeHelper <TTarget> MemberInfo"
  },
  "api/Niacomsoft.Eips.Runtime.Serialization.html": {
    "href": "api/Niacomsoft.Eips.Runtime.Serialization.html",
    "title": "Namespace Niacomsoft.Eips.Runtime.Serialization | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Namespace Niacomsoft.Eips.Runtime.Serialization Classes JsonSerializerProperties 提供了 JSON 序列化属性名称。 XmlSerializerProperties 提供了 XML 序列化属性名称。"
  },
  "api/Niacomsoft.Eips.Runtime.Serialization.JsonSerializerProperties.html": {
    "href": "api/Niacomsoft.Eips.Runtime.Serialization.JsonSerializerProperties.html",
    "title": "Class JsonSerializerProperties | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class JsonSerializerProperties 提供了 JSON 序列化属性名称。 Inheritance Object JsonSerializerProperties Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips.Runtime.Serialization Assembly : Niacomsoft.Eips.Core.dll Syntax public class JsonSerializerProperties Fields | Improve this Doc View Source AccessToken 访问令牌。 Declaration public const string AccessToken = \"access_token\" Field Value Type Description String | Improve this Doc View Source Alias 别名。 Declaration public const string Alias = \"alias\" Field Value Type Description String | Improve this Doc View Source AutoId 自动的 ID。 Declaration public const string AutoId = \"__aid__\" Field Value Type Description String | Improve this Doc View Source Available 是否已经激活的。 Declaration public const string Available = \"available\" Field Value Type Description String | Improve this Doc View Source BuiltIn 是否为系统内置的。 Declaration public const string BuiltIn = \"buildin\" Field Value Type Description String | Improve this Doc View Source CreatedTime 创建时间。 Declaration public const string CreatedTime = \"createdTime\" Field Value Type Description String | Improve this Doc View Source CreatedTimeDescription 创建时间描述。 Declaration public const string CreatedTimeDescription = \"createdAt\" Field Value Type Description String | Improve this Doc View Source Creator 创建人姓名。 Declaration public const string Creator = \"createdBy\" Field Value Type Description String | Improve this Doc View Source DefaultOptions 是否默认选项。 Declaration public const string DefaultOptions = \"default\" Field Value Type Description String | Improve this Doc View Source Enable 是否可用。 Declaration public const string Enable = \"enabled\" Field Value Type Description String | Improve this Doc View Source Frozen 是否冻结。 Declaration public const string Frozen = \"frozen\" Field Value Type Description String | Improve this Doc View Source Gender 性别。 Declaration public const string Gender = \"gender\" Field Value Type Description String | Improve this Doc View Source Id 标识。 Declaration public const string Id = \"__id__\" Field Value Type Description String | Improve this Doc View Source Locked 是否被锁定。 Declaration public const string Locked = \"locked\" Field Value Type Description String | Improve this Doc View Source ModifiedTime 最后修改时间。 Declaration public const string ModifiedTime = \"modifiedTime\" Field Value Type Description String | Improve this Doc View Source ModifiedTimeDescription 最后修改时间描述。 Declaration public const string ModifiedTimeDescription = \"modifiedAt\" Field Value Type Description String | Improve this Doc View Source Modifier 最后修改人姓名。 Declaration public const string Modifier = \"modifiedBy\" Field Value Type Description String | Improve this Doc View Source Name 姓名。 Declaration public const string Name = \"name\" Field Value Type Description String | Improve this Doc View Source NickName 昵称。 Declaration public const string NickName = \"nickName\" Field Value Type Description String | Improve this Doc View Source Notes 备注信息。 Declaration public const string Notes = \"notes\" Field Value Type Description String | Improve this Doc View Source OpenId 开放标识。 Declaration public const string OpenId = \"__oid__\" Field Value Type Description String | Improve this Doc View Source PagedElements 可供分页的元素集合。 Declaration public const string PagedElements = \"rows\" Field Value Type Description String | Improve this Doc View Source PhysicalDeleted 是否被物理删除。 Declaration public const string PhysicalDeleted = \"deleted\" Field Value Type Description String | Improve this Doc View Source ReadOnly 是否只读。 Declaration public const string ReadOnly = \"readonly\" Field Value Type Description String | Improve this Doc View Source RefreshToken 刷新后的访问令牌。 Declaration public const string RefreshToken = \"refresh_token\" Field Value Type Description String | Improve this Doc View Source Removed 是否被逻辑删除。 Declaration public const string Removed = \"removed\" Field Value Type Description String | Improve this Doc View Source Signature 电子签名。 Declaration public const string Signature = \"sign\" Field Value Type Description String | Improve this Doc View Source TotalRowsNumber 分页后的总行数。 Declaration public const string TotalRowsNumber = \"total\" Field Value Type Description String | Improve this Doc View Source UniqueId 唯一标识。 Declaration public const string UniqueId = \"__uid__\" Field Value Type Description String | Improve this Doc View Source VersionNumber 版本号数字。 Declaration public const string VersionNumber = \"version\" Field Value Type Description String | Improve this Doc View Source Virtual 是否虚拟的。 Declaration public const string Virtual = \"virtual\" Field Value Type Description String | Improve this Doc View Source Visible 是否可见。 Declaration public const string Visible = \"visible\" Field Value Type Description String"
  },
  "api/Niacomsoft.Eips.Runtime.Serialization.XmlSerializerProperties.html": {
    "href": "api/Niacomsoft.Eips.Runtime.Serialization.XmlSerializerProperties.html",
    "title": "Class XmlSerializerProperties | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class XmlSerializerProperties 提供了 XML 序列化属性名称。 Inheritance Object XmlSerializerProperties Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips.Runtime.Serialization Assembly : Niacomsoft.Eips.Core.dll Syntax public class XmlSerializerProperties Fields | Improve this Doc View Source AccessToken 访问令牌。 Declaration public const string AccessToken = \"AccessToken\" Field Value Type Description String | Improve this Doc View Source Alias 别名。 Declaration public const string Alias = \"Alias\" Field Value Type Description String | Improve this Doc View Source AutoId 自动的 ID。 Declaration public const string AutoId = \"AutoId\" Field Value Type Description String | Improve this Doc View Source Available 是否已经激活的。 Declaration public const string Available = \"Available\" Field Value Type Description String | Improve this Doc View Source BuiltIn 是否为系统内置的。 Declaration public const string BuiltIn = \"BuildIn\" Field Value Type Description String | Improve this Doc View Source CreatedTime 创建时间。 Declaration public const string CreatedTime = \"CreatedTime\" Field Value Type Description String | Improve this Doc View Source CreatedTimeDescription 创建时间描述。 Declaration public const string CreatedTimeDescription = \"CreatedAt\" Field Value Type Description String | Improve this Doc View Source Creator 创建人姓名。 Declaration public const string Creator = \"CreatedBy\" Field Value Type Description String | Improve this Doc View Source DefaultOptions 是否默认选项。 Declaration public const string DefaultOptions = \"DefaultOptions\" Field Value Type Description String | Improve this Doc View Source Enable 是否可用。 Declaration public const string Enable = \"Enabled\" Field Value Type Description String | Improve this Doc View Source Frozen 是否冻结。 Declaration public const string Frozen = \"Frozen\" Field Value Type Description String | Improve this Doc View Source Gender 性别。 Declaration public const string Gender = \"Gender\" Field Value Type Description String | Improve this Doc View Source Id 标识。 Declaration public const string Id = \"Id\" Field Value Type Description String | Improve this Doc View Source Locked 是否被锁定。 Declaration public const string Locked = \"Locked\" Field Value Type Description String | Improve this Doc View Source ModifiedTime 最后修改时间。 Declaration public const string ModifiedTime = \"ModifiedTime\" Field Value Type Description String | Improve this Doc View Source ModifiedTimeDescription 最后修改时间描述。 Declaration public const string ModifiedTimeDescription = \"ModifiedAt\" Field Value Type Description String | Improve this Doc View Source Modifier 最后修改人姓名。 Declaration public const string Modifier = \"ModifiedBy\" Field Value Type Description String | Improve this Doc View Source Name 姓名。 Declaration public const string Name = \"Name\" Field Value Type Description String | Improve this Doc View Source NickName 昵称。 Declaration public const string NickName = \"NickName\" Field Value Type Description String | Improve this Doc View Source Notes 备注信息。 Declaration public const string Notes = \"Notes\" Field Value Type Description String | Improve this Doc View Source OpenId 开放标识。 Declaration public const string OpenId = \"OpenId\" Field Value Type Description String | Improve this Doc View Source PagedElements 可供分页的元素集合。 Declaration public const string PagedElements = \"Rows\" Field Value Type Description String | Improve this Doc View Source PhysicalDeleted 是否被物理删除。 Declaration public const string PhysicalDeleted = \"Deleted\" Field Value Type Description String | Improve this Doc View Source ReadOnly 是否只读。 Declaration public const string ReadOnly = \"ReadOnly\" Field Value Type Description String | Improve this Doc View Source RefreshToken 刷新后的访问令牌。 Declaration public const string RefreshToken = \"RefreshToken\" Field Value Type Description String | Improve this Doc View Source Removed 是否被逻辑删除。 Declaration public const string Removed = \"Removed\" Field Value Type Description String | Improve this Doc View Source Signature 电子签名。 Declaration public const string Signature = \"Signature\" Field Value Type Description String | Improve this Doc View Source TotalRowsNumber 分页后的总行数。 Declaration public const string TotalRowsNumber = \"Total\" Field Value Type Description String | Improve this Doc View Source UniqueId 唯一标识。 Declaration public const string UniqueId = \"UniqueId\" Field Value Type Description String | Improve this Doc View Source VersionNumber 版本号数字。 Declaration public const string VersionNumber = \"Version\" Field Value Type Description String | Improve this Doc View Source Virtual 是否虚拟的。 Declaration public const string Virtual = \"Virtual\" Field Value Type Description String | Improve this Doc View Source Visible 是否可见。 Declaration public const string Visible = \"Visible\" Field Value Type Description String"
  },
  "api/Niacomsoft.Eips.Security.Authentication.AuthenticationFailureReason.html": {
    "href": "api/Niacomsoft.Eips.Security.Authentication.AuthenticationFailureReason.html",
    "title": "Enum AuthenticationFailureReason | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Enum AuthenticationFailureReason 定义了身份认证失败原因枚举类型。 Namespace : Niacomsoft.Eips.Security.Authentication Assembly : Niacomsoft.Eips.Core.dll Syntax public enum AuthenticationFailureReason Fields Name Description IncorrectLoginPassword 错误的登录密码。 UserNotExists 用户不存在。 Extension Methods AuthenticationFailureReasonExtensions.GetDescription()"
  },
  "api/Niacomsoft.Eips.Security.Authentication.AuthenticationFailureReasonExtensions.html": {
    "href": "api/Niacomsoft.Eips.Security.Authentication.AuthenticationFailureReasonExtensions.html",
    "title": "Class AuthenticationFailureReasonExtensions | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class AuthenticationFailureReasonExtensions 为 AuthenticationFailureReason 类型提供的扩展方法。 Inheritance Object AuthenticationFailureReasonExtensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips.Security.Authentication Assembly : Niacomsoft.Eips.Core.dll Syntax public static class AuthenticationFailureReasonExtensions Methods | Improve this Doc View Source GetDescription(AuthenticationFailureReason) 获取 reason 等效的描述内容。 Declaration public static string GetDescription(this AuthenticationFailureReason reason) Parameters Type Name Description AuthenticationFailureReason reason AuthenticationFailureReason 类型的值。 Returns Type Description String 身份认证失败原因。 AuthenticationFailureReason 类型的值等效的描述内容。 Exceptions Type Condition NotSupportedException 当调用 GetField(String) 方法时，可能引发此类型的异常。"
  },
  "api/Niacomsoft.Eips.Security.Authentication.BasicCredentials.html": {
    "href": "api/Niacomsoft.Eips.Security.Authentication.BasicCredentials.html",
    "title": "Class BasicCredentials | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class BasicCredentials 提供了基于用户名、密码的基础身份认证凭据相关的方法。 Inheritance Object BasicCredentials Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips.Security.Authentication Assembly : Niacomsoft.Eips.Core.dll Syntax [Serializable] public class BasicCredentials Properties | Improve this Doc View Source Password 已经经过加密的登录密码。 Declaration public virtual string Password { get; set; } Property Value Type Description String 设置或获取一个字符串，用于表示已经经过加密的登录密码。 | Improve this Doc View Source UserName 用户名。 Declaration public virtual string UserName { get; set; } Property Value Type Description String 设置或获取一个字符串，用于表示用户名。"
  },
  "api/Niacomsoft.Eips.Security.Authentication.html": {
    "href": "api/Niacomsoft.Eips.Security.Authentication.html",
    "title": "Namespace Niacomsoft.Eips.Security.Authentication | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Namespace Niacomsoft.Eips.Security.Authentication Classes AuthenticationFailureReasonExtensions 为 AuthenticationFailureReason 类型提供的扩展方法。 BasicCredentials 提供了基于用户名、密码的基础身份认证凭据相关的方法。 Enums AuthenticationFailureReason 定义了身份认证失败原因枚举类型。"
  },
  "api/Niacomsoft.Eips.Security.Cryptography.AES128AlgorithmsProvider.html": {
    "href": "api/Niacomsoft.Eips.Security.Cryptography.AES128AlgorithmsProvider.html",
    "title": "Class AES128AlgorithmsProvider | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class AES128AlgorithmsProvider 提供了 128 位密钥 AES 算法相关的方法。 Inheritance Object CryptographicAlgorithms SymmetricAlgorithms AES128AlgorithmsProvider Implements ISymmetricAlgorithms Inherited Members SymmetricAlgorithms.Provider SymmetricAlgorithms.DefaultCipherMode SymmetricAlgorithms.DefaultKey SymmetricAlgorithms.DefaultPaddingMode SymmetricAlgorithms.Decrypt(Byte[], ISymmetricCryptographicKey, Nullable<CipherMode>, Nullable<PaddingMode>) SymmetricAlgorithms.Decrypt(Stream, ISymmetricCryptographicKey, Nullable<CipherMode>, Nullable<PaddingMode>) SymmetricAlgorithms.Encrypt(Byte[], ISymmetricCryptographicKey, Nullable<CipherMode>, Nullable<PaddingMode>) SymmetricAlgorithms.Encrypt(Byte[], Stream, ISymmetricCryptographicKey, Nullable<CipherMode>, Nullable<PaddingMode>) CryptographicAlgorithms.NullBinaryData(Byte[]) CryptographicAlgorithms.WriteToStream(Byte[], Stream) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips.Security.Cryptography Assembly : Niacomsoft.Eips.Core.dll Syntax public class AES128AlgorithmsProvider : SymmetricAlgorithms, ISymmetricAlgorithms Constructors | Improve this Doc View Source AES128AlgorithmsProvider(IAESCryptographicKey, CipherMode, PaddingMode) 用于初始化一个 AES128AlgorithmsProvider 类型的对象实例。 Declaration public AES128AlgorithmsProvider(IAESCryptographicKey key, CipherMode cipherMode = CipherMode.CBC, PaddingMode paddingMode = PaddingMode.PKCS7) Parameters Type Name Description IAESCryptographicKey key AES 算法加密密钥。 实现了 IAESCryptographicKey 类型接口的对象实例。 CipherMode cipherMode 默认的 CipherMode 类型的值。 PaddingMode paddingMode 默认的 PaddingMode 类型的值。 Exceptions Type Condition ArgumentNullException 当 key 等于 null 时，将引发此类型的异常。 Methods | Improve this Doc View Source InitializeSymmetricAlgorithmsProvider(ISymmetricCryptographicKey, CipherMode, PaddingMode) 初始化对称加密算法。 Declaration protected override void InitializeSymmetricAlgorithmsProvider(ISymmetricCryptographicKey key, CipherMode mode, PaddingMode padding) Parameters Type Name Description ISymmetricCryptographicKey key 实现了 ISymmetricCryptographicKey 类型接口的对象实例。 CipherMode mode CipherMode 类型的值。 PaddingMode padding PaddingMode 类型的值。 Overrides SymmetricAlgorithms.InitializeSymmetricAlgorithmsProvider(ISymmetricCryptographicKey, CipherMode, PaddingMode) See Also ISymmetricCryptographicKey CipherMode PaddingMode Implements ISymmetricAlgorithms See Also SymmetricAlgorithms"
  },
  "api/Niacomsoft.Eips.Security.Cryptography.AES192AlgorithmsProvider.html": {
    "href": "api/Niacomsoft.Eips.Security.Cryptography.AES192AlgorithmsProvider.html",
    "title": "Class AES192AlgorithmsProvider | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class AES192AlgorithmsProvider 提供了 192 位密钥 AES 算法相关的方法。 Inheritance Object CryptographicAlgorithms SymmetricAlgorithms AES192AlgorithmsProvider Implements ISymmetricAlgorithms Inherited Members SymmetricAlgorithms.Provider SymmetricAlgorithms.DefaultCipherMode SymmetricAlgorithms.DefaultKey SymmetricAlgorithms.DefaultPaddingMode SymmetricAlgorithms.Decrypt(Byte[], ISymmetricCryptographicKey, Nullable<CipherMode>, Nullable<PaddingMode>) SymmetricAlgorithms.Decrypt(Stream, ISymmetricCryptographicKey, Nullable<CipherMode>, Nullable<PaddingMode>) SymmetricAlgorithms.Encrypt(Byte[], ISymmetricCryptographicKey, Nullable<CipherMode>, Nullable<PaddingMode>) SymmetricAlgorithms.Encrypt(Byte[], Stream, ISymmetricCryptographicKey, Nullable<CipherMode>, Nullable<PaddingMode>) CryptographicAlgorithms.NullBinaryData(Byte[]) CryptographicAlgorithms.WriteToStream(Byte[], Stream) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips.Security.Cryptography Assembly : Niacomsoft.Eips.Core.dll Syntax public class AES192AlgorithmsProvider : SymmetricAlgorithms, ISymmetricAlgorithms Constructors | Improve this Doc View Source AES192AlgorithmsProvider(IAESCryptographicKey, CipherMode, PaddingMode) 用于初始化一个 AES192AlgorithmsProvider 类型的对象实例。 Declaration public AES192AlgorithmsProvider(IAESCryptographicKey key, CipherMode cipherMode = CipherMode.CBC, PaddingMode paddingMode = PaddingMode.PKCS7) Parameters Type Name Description IAESCryptographicKey key AES 算法加密密钥。 实现了 IAESCryptographicKey 类型接口的对象实例。 CipherMode cipherMode 默认的 CipherMode 类型的值。 PaddingMode paddingMode 默认的 PaddingMode 类型的值。 Exceptions Type Condition ArgumentNullException 当 key 等于 null 时，将引发此类型的异常。 Methods | Improve this Doc View Source InitializeSymmetricAlgorithmsProvider(ISymmetricCryptographicKey, CipherMode, PaddingMode) 初始化对称加密算法。 Declaration protected override void InitializeSymmetricAlgorithmsProvider(ISymmetricCryptographicKey key, CipherMode mode, PaddingMode padding) Parameters Type Name Description ISymmetricCryptographicKey key 实现了 ISymmetricCryptographicKey 类型接口的对象实例。 CipherMode mode CipherMode 类型的值。 PaddingMode padding PaddingMode 类型的值。 Overrides SymmetricAlgorithms.InitializeSymmetricAlgorithmsProvider(ISymmetricCryptographicKey, CipherMode, PaddingMode) See Also ISymmetricCryptographicKey CipherMode PaddingMode Implements ISymmetricAlgorithms See Also SymmetricAlgorithms"
  },
  "api/Niacomsoft.Eips.Security.Cryptography.AES256AlgorithmsProvider.html": {
    "href": "api/Niacomsoft.Eips.Security.Cryptography.AES256AlgorithmsProvider.html",
    "title": "Class AES256AlgorithmsProvider | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class AES256AlgorithmsProvider 提供了 256 位密钥 AES 算法相关的方法。 Inheritance Object CryptographicAlgorithms SymmetricAlgorithms AES256AlgorithmsProvider AESAlgorithmsProvider Implements ISymmetricAlgorithms Inherited Members SymmetricAlgorithms.Provider SymmetricAlgorithms.DefaultCipherMode SymmetricAlgorithms.DefaultKey SymmetricAlgorithms.DefaultPaddingMode SymmetricAlgorithms.Decrypt(Byte[], ISymmetricCryptographicKey, Nullable<CipherMode>, Nullable<PaddingMode>) SymmetricAlgorithms.Decrypt(Stream, ISymmetricCryptographicKey, Nullable<CipherMode>, Nullable<PaddingMode>) SymmetricAlgorithms.Encrypt(Byte[], ISymmetricCryptographicKey, Nullable<CipherMode>, Nullable<PaddingMode>) SymmetricAlgorithms.Encrypt(Byte[], Stream, ISymmetricCryptographicKey, Nullable<CipherMode>, Nullable<PaddingMode>) CryptographicAlgorithms.NullBinaryData(Byte[]) CryptographicAlgorithms.WriteToStream(Byte[], Stream) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips.Security.Cryptography Assembly : Niacomsoft.Eips.Core.dll Syntax public class AES256AlgorithmsProvider : SymmetricAlgorithms, ISymmetricAlgorithms Constructors | Improve this Doc View Source AES256AlgorithmsProvider(IAESCryptographicKey, CipherMode, PaddingMode) 用于初始化一个 AES256AlgorithmsProvider 类型的对象实例。 Declaration public AES256AlgorithmsProvider(IAESCryptographicKey key, CipherMode cipherMode = CipherMode.CBC, PaddingMode paddingMode = PaddingMode.PKCS7) Parameters Type Name Description IAESCryptographicKey key AES 算法加密密钥。 实现了 IAESCryptographicKey 类型接口的对象实例。 CipherMode cipherMode 默认的 CipherMode 类型的值。 PaddingMode paddingMode 默认的 PaddingMode 类型的值。 Exceptions Type Condition ArgumentNullException 当 key 等于 null 时，将引发此类型的异常。 Methods | Improve this Doc View Source InitializeSymmetricAlgorithmsProvider(ISymmetricCryptographicKey, CipherMode, PaddingMode) 初始化对称加密算法。 Declaration protected override void InitializeSymmetricAlgorithmsProvider(ISymmetricCryptographicKey key, CipherMode mode, PaddingMode padding) Parameters Type Name Description ISymmetricCryptographicKey key 实现了 ISymmetricCryptographicKey 类型接口的对象实例。 CipherMode mode CipherMode 类型的值。 PaddingMode padding PaddingMode 类型的值。 Overrides SymmetricAlgorithms.InitializeSymmetricAlgorithmsProvider(ISymmetricCryptographicKey, CipherMode, PaddingMode) See Also ISymmetricCryptographicKey CipherMode PaddingMode Implements ISymmetricAlgorithms See Also SymmetricAlgorithms"
  },
  "api/Niacomsoft.Eips.Security.Cryptography.AESAlgorithmsProvider.html": {
    "href": "api/Niacomsoft.Eips.Security.Cryptography.AESAlgorithmsProvider.html",
    "title": "Class AESAlgorithmsProvider | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class AESAlgorithmsProvider 提供了默认的 AES 算法相关的方法。 等同于 AES256AlgorithmsProvider 。 Inheritance Object CryptographicAlgorithms SymmetricAlgorithms AES256AlgorithmsProvider AESAlgorithmsProvider Implements ISymmetricAlgorithms Inherited Members AES256AlgorithmsProvider.InitializeSymmetricAlgorithmsProvider(ISymmetricCryptographicKey, CipherMode, PaddingMode) SymmetricAlgorithms.Provider SymmetricAlgorithms.DefaultCipherMode SymmetricAlgorithms.DefaultKey SymmetricAlgorithms.DefaultPaddingMode SymmetricAlgorithms.Decrypt(Byte[], ISymmetricCryptographicKey, Nullable<CipherMode>, Nullable<PaddingMode>) SymmetricAlgorithms.Decrypt(Stream, ISymmetricCryptographicKey, Nullable<CipherMode>, Nullable<PaddingMode>) SymmetricAlgorithms.Encrypt(Byte[], ISymmetricCryptographicKey, Nullable<CipherMode>, Nullable<PaddingMode>) SymmetricAlgorithms.Encrypt(Byte[], Stream, ISymmetricCryptographicKey, Nullable<CipherMode>, Nullable<PaddingMode>) CryptographicAlgorithms.NullBinaryData(Byte[]) CryptographicAlgorithms.WriteToStream(Byte[], Stream) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips.Security.Cryptography Assembly : Niacomsoft.Eips.Core.dll Syntax public class AESAlgorithmsProvider : AES256AlgorithmsProvider, ISymmetricAlgorithms Constructors | Improve this Doc View Source AESAlgorithmsProvider(IAESCryptographicKey, CipherMode, PaddingMode) 用于初始化一个 AESAlgorithmsProvider 类型的对象实例。 Declaration public AESAlgorithmsProvider(IAESCryptographicKey key, CipherMode cipherMode = CipherMode.CBC, PaddingMode paddingMode = PaddingMode.PKCS7) Parameters Type Name Description IAESCryptographicKey key AES 算法加密密钥。 实现了 IAESCryptographicKey 类型接口的对象实例。 CipherMode cipherMode 默认的 CipherMode 类型的值。 PaddingMode paddingMode 默认的 PaddingMode 类型的值。 Exceptions Type Condition ArgumentNullException 当 key 等于 null 时，将引发此类型的异常。 Implements ISymmetricAlgorithms See Also SymmetricAlgorithms AES256AlgorithmsProvider"
  },
  "api/Niacomsoft.Eips.Security.Cryptography.AESCryptographicKey.html": {
    "href": "api/Niacomsoft.Eips.Security.Cryptography.AESCryptographicKey.html",
    "title": "Class AESCryptographicKey | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class AESCryptographicKey 提供了 AES 算法加密密钥相关的方法。 Inheritance Object AESCryptographicKey Implements IAESCryptographicKey ISymmetricCryptographicKey Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips.Security.Cryptography Assembly : Niacomsoft.Eips.Core.dll Syntax public class AESCryptographicKey : IAESCryptographicKey, ISymmetricCryptographicKey Constructors | Improve this Doc View Source AESCryptographicKey() 用于初始化一个 AESCryptographicKey 类型的对象实例。 Declaration public AESCryptographicKey() Methods | Improve this Doc View Source GetKeyData() 获取密钥字节数据。 等同于 GetKeyData256() 。 Declaration public virtual byte[] GetKeyData() Returns Type Description Byte [] 字节数组。 See Also UTF8Encoding | Improve this Doc View Source GetKeyData128() 获取 128 位的密钥数据。 Declaration public virtual byte[] GetKeyData128() Returns Type Description Byte [] 密钥数据。 | Improve this Doc View Source GetKeyData192() 获取 192 位的密钥数据。 Declaration public virtual byte[] GetKeyData192() Returns Type Description Byte [] 密钥数据。 | Improve this Doc View Source GetKeyData256() 获取 256 位的密钥数据。 Declaration public virtual byte[] GetKeyData256() Returns Type Description Byte [] 密钥数据。 Implements IAESCryptographicKey ISymmetricCryptographicKey See Also IAESCryptographicKey ISymmetricCryptographicKey"
  },
  "api/Niacomsoft.Eips.Security.Cryptography.CryptographicAlgorithms.html": {
    "href": "api/Niacomsoft.Eips.Security.Cryptography.CryptographicAlgorithms.html",
    "title": "Class CryptographicAlgorithms | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class CryptographicAlgorithms 提供了加密算法相关的基本方法。 Inheritance Object CryptographicAlgorithms HashAlgorithms SymmetricAlgorithms Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips.Security.Cryptography Assembly : Niacomsoft.Eips.Core.Abstractions.dll Syntax public abstract class CryptographicAlgorithms Methods | Improve this Doc View Source NullBinaryData(Byte[]) 当 data 等于 null 或 data .LongLength 等于 0 时，将引发一个 CryptographicException 类型的异常。 Declaration protected virtual void NullBinaryData(byte[] data) Parameters Type Name Description Byte [] data 需要校验的字节数据。 Exceptions Type Condition CryptographicException | Improve this Doc View Source WriteToStream(Byte[], Stream) 将字节数据写入流 destinationStream 。 Declaration protected virtual void WriteToStream(byte[] input, Stream destinationStream) Parameters Type Name Description Byte [] input 字节数据。 Stream destinationStream 目标流。 派生自 Stream 类型的对象实例。 See Also Stream"
  },
  "api/Niacomsoft.Eips.Security.Cryptography.DESAlgorithmsProvider.html": {
    "href": "api/Niacomsoft.Eips.Security.Cryptography.DESAlgorithmsProvider.html",
    "title": "Class DESAlgorithmsProvider | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class DESAlgorithmsProvider 提供了 DES 对称加密算法相关的方法。 Inheritance Object CryptographicAlgorithms SymmetricAlgorithms DESAlgorithmsProvider Implements ISymmetricAlgorithms Inherited Members SymmetricAlgorithms.Provider SymmetricAlgorithms.InitializeSymmetricAlgorithmsProvider(ISymmetricCryptographicKey, CipherMode, PaddingMode) SymmetricAlgorithms.DefaultCipherMode SymmetricAlgorithms.DefaultKey SymmetricAlgorithms.DefaultPaddingMode SymmetricAlgorithms.Decrypt(Byte[], ISymmetricCryptographicKey, Nullable<CipherMode>, Nullable<PaddingMode>) SymmetricAlgorithms.Decrypt(Stream, ISymmetricCryptographicKey, Nullable<CipherMode>, Nullable<PaddingMode>) SymmetricAlgorithms.Encrypt(Byte[], ISymmetricCryptographicKey, Nullable<CipherMode>, Nullable<PaddingMode>) SymmetricAlgorithms.Encrypt(Byte[], Stream, ISymmetricCryptographicKey, Nullable<CipherMode>, Nullable<PaddingMode>) CryptographicAlgorithms.NullBinaryData(Byte[]) CryptographicAlgorithms.WriteToStream(Byte[], Stream) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips.Security.Cryptography Assembly : Niacomsoft.Eips.Core.dll Syntax public class DESAlgorithmsProvider : SymmetricAlgorithms, ISymmetricAlgorithms Constructors | Improve this Doc View Source DESAlgorithmsProvider(DESCryptographicKey, CipherMode, PaddingMode) 用于初始化一个 DESAlgorithmsProvider 类型的对象实例。 Declaration public DESAlgorithmsProvider(DESCryptographicKey key, CipherMode cipherMode = CipherMode.CBC, PaddingMode paddingMode = PaddingMode.PKCS7) Parameters Type Name Description DESCryptographicKey key DES 算法加密密钥。 派生自 DESCryptographicKey 类型的对象实例。 CipherMode cipherMode 默认的 CipherMode 类型的值。 PaddingMode paddingMode 默认的 PaddingMode 类型的值。 Exceptions Type Condition ArgumentNullException 当 key 等于 null 时，将引发此类型的异常。 Implements ISymmetricAlgorithms See Also SymmetricAlgorithms"
  },
  "api/Niacomsoft.Eips.Security.Cryptography.DESCryptographicKey.html": {
    "href": "api/Niacomsoft.Eips.Security.Cryptography.DESCryptographicKey.html",
    "title": "Class DESCryptographicKey | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class DESCryptographicKey 提供了 DES 算法密钥相关的方法。 Inheritance Object SymmetricCryptographicKey DESCryptographicKey Implements ISymmetricCryptographicKey Inherited Members SymmetricCryptographicKey.GetKeyData() Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips.Security.Cryptography Assembly : Niacomsoft.Eips.Core.dll Syntax public class DESCryptographicKey : SymmetricCryptographicKey, ISymmetricCryptographicKey Constructors | Improve this Doc View Source DESCryptographicKey() 用于初始化一个 DESCryptographicKey 类型的对象实例。 Declaration public DESCryptographicKey() Methods | Improve this Doc View Source InternalGetKeyString() 获取密钥字符串。 Declaration protected override string InternalGetKeyString() Returns Type Description String 密钥字符串。 Overrides SymmetricCryptographicKey.InternalGetKeyString() Implements ISymmetricCryptographicKey See Also ISymmetricCryptographicKey SymmetricCryptographicKey"
  },
  "api/Niacomsoft.Eips.Security.Cryptography.HashAlgorithms.html": {
    "href": "api/Niacomsoft.Eips.Security.Cryptography.HashAlgorithms.html",
    "title": "Class HashAlgorithms | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class HashAlgorithms 提供了哈希计算相关的基本方法。 Inheritance Object CryptographicAlgorithms HashAlgorithms MD5AlgorithmsProvider SHA1AlgorithmsProvider SHA256AlgorithmsProvider SHA384AlgorithmsProvider SHA512AlgorithmsProvider Implements IHashAlgorithms Inherited Members CryptographicAlgorithms.NullBinaryData(Byte[]) CryptographicAlgorithms.WriteToStream(Byte[], Stream) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips.Security.Cryptography Assembly : Niacomsoft.Eips.Core.Abstractions.dll Syntax public abstract class HashAlgorithms : CryptographicAlgorithms, IHashAlgorithms Constructors | Improve this Doc View Source HashAlgorithms() 用于初始化一个 HashAlgorithms 类型的对象实例。 Declaration protected HashAlgorithms() Properties | Improve this Doc View Source Provider 哈希算法。 Declaration protected abstract HashAlgorithm Provider { get; } Property Value Type Description HashAlgorithm 获取 HashAlgorithm 类型的对象实例，用于表示哈希算法。 派生自 HashAlgorithm 类型的对象实例。 See Also HashAlgorithm Methods | Improve this Doc View Source ComputeHash(Byte[]) 计算哈希。 Declaration public abstract byte[] ComputeHash(byte[] input) Parameters Type Name Description Byte [] input 需要计算的字节数组。 Returns Type Description Byte [] 哈希计算后的字节数组。 | Improve this Doc View Source ComputeHash(Byte[], Stream) 计算哈希数据，并写入流 stream 。 Declaration public abstract void ComputeHash(byte[] input, Stream stream) Parameters Type Name Description Byte [] input 字节数组。 Stream stream 目标流。 派生自 Stream 类型的对象实例。 See Also Stream Implements IHashAlgorithms See Also IHashAlgorithms CryptographicAlgorithms"
  },
  "api/Niacomsoft.Eips.Security.Cryptography.HashAlgorithmsFactory.html": {
    "href": "api/Niacomsoft.Eips.Security.Cryptography.HashAlgorithmsFactory.html",
    "title": "Class HashAlgorithmsFactory | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class HashAlgorithmsFactory 提供了创建哈希算法实例相关的方法。 Inheritance Object HashAlgorithmsFactory Implements IHashAlgorithmsFactory Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips.Security.Cryptography Assembly : Niacomsoft.Eips.Core.dll Syntax public class HashAlgorithmsFactory : IHashAlgorithmsFactory Constructors | Improve this Doc View Source HashAlgorithmsFactory() 用于初始化一个 HashAlgorithmsFactory 类型的对象实例。 Declaration public HashAlgorithmsFactory() Methods | Improve this Doc View Source Create(SupportedHashAlgorithms) 创建哈希算法。 实现了 IHashAlgorithms 类型接口的对象实例。 Declaration public IHashAlgorithms Create(SupportedHashAlgorithms alg = SupportedHashAlgorithms.MD5) Parameters Type Name Description SupportedHashAlgorithms alg 哈希算法。 SupportedHashAlgorithms 类型的值。 Returns Type Description IHashAlgorithms 哈希算法对象实例。 实现了 IHashAlgorithms 类型接口的对象实例。 See Also IHashAlgorithms SupportedHashAlgorithms Implements IHashAlgorithmsFactory See Also IHashAlgorithmsFactory"
  },
  "api/Niacomsoft.Eips.Security.Cryptography.html": {
    "href": "api/Niacomsoft.Eips.Security.Cryptography.html",
    "title": "Namespace Niacomsoft.Eips.Security.Cryptography | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Namespace Niacomsoft.Eips.Security.Cryptography Classes AES128AlgorithmsProvider 提供了 128 位密钥 AES 算法相关的方法。 AES192AlgorithmsProvider 提供了 192 位密钥 AES 算法相关的方法。 AES256AlgorithmsProvider 提供了 256 位密钥 AES 算法相关的方法。 AESAlgorithmsProvider 提供了默认的 AES 算法相关的方法。 等同于 AES256AlgorithmsProvider 。 AESCryptographicKey 提供了 AES 算法加密密钥相关的方法。 CryptographicAlgorithms 提供了加密算法相关的基本方法。 DESAlgorithmsProvider 提供了 DES 对称加密算法相关的方法。 DESCryptographicKey 提供了 DES 算法密钥相关的方法。 HashAlgorithms 提供了哈希计算相关的基本方法。 HashAlgorithmsFactory 提供了创建哈希算法实例相关的方法。 MD5AlgorithmsProvider 提供了 MD5 哈希算法相关的方法。 密闭的，不可以从此类型派生。 SHA1AlgorithmsProvider 提供了 SHA-1 哈希算法相关的方法。 密闭的，不可以从此类型派生。 SHA256AlgorithmsProvider 提供了 SHA-256 哈希算法相关的方法。 密闭的，不可以从此类型派生。 SHA384AlgorithmsProvider 提供了 SHA-384 哈希算法相关的方法。 密闭的，不可以从此类型派生。 SHA512AlgorithmsProvider 提供了 SHA-512 哈希算法相关的方法。 密闭的，不可以从此类型派生。 SymmetricAlgorithms 提供了对称加密相关的基本方法。 SymmetricCryptographicKey 提供了访问对称加密算法密钥相关的基本方法。 Interfaces IAESCryptographicKey 定义了 AES 算法加密密钥的接口。 IAsyncHashAlgorithms 提供了哈希算法相关的异步方法。 IAsyncSymmetricAlgorithms 定义了异步对称加密算法的接口。 IHashAlgorithms 定义了哈希算法接口。 IHashAlgorithmsFactory 定义了创建哈希算法的工厂接口。 ISymmetricAlgorithms 定义了对称加密算法的接口。 ISymmetricCryptographicKey 定义了对称加密算法密钥的接口。 Enums SupportedHashAlgorithms 定义了 EIPS 提供的哈希算法枚举类型。"
  },
  "api/Niacomsoft.Eips.Security.Cryptography.IAESCryptographicKey.html": {
    "href": "api/Niacomsoft.Eips.Security.Cryptography.IAESCryptographicKey.html",
    "title": "Interface IAESCryptographicKey | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Interface IAESCryptographicKey 定义了 AES 算法加密密钥的接口。 Inherited Members ISymmetricCryptographicKey.GetKeyData() Namespace : Niacomsoft.Eips.Security.Cryptography Assembly : Niacomsoft.Eips.Core.Abstractions.dll Syntax public interface IAESCryptographicKey : ISymmetricCryptographicKey Methods | Improve this Doc View Source GetKeyData128() 获取 128 位的密钥数据。 Declaration byte[] GetKeyData128() Returns Type Description Byte [] 密钥数据。 | Improve this Doc View Source GetKeyData192() 获取 192 位的密钥数据。 Declaration byte[] GetKeyData192() Returns Type Description Byte [] 密钥数据。 | Improve this Doc View Source GetKeyData256() 获取 256 位的密钥数据。 Declaration byte[] GetKeyData256() Returns Type Description Byte [] 密钥数据。 See Also ISymmetricCryptographicKey"
  },
  "api/Niacomsoft.Eips.Security.Cryptography.IAsyncHashAlgorithms.html": {
    "href": "api/Niacomsoft.Eips.Security.Cryptography.IAsyncHashAlgorithms.html",
    "title": "Interface IAsyncHashAlgorithms | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Interface IAsyncHashAlgorithms 提供了哈希算法相关的异步方法。 Inherited Members IHashAlgorithms.ComputeHash(Byte[]) IHashAlgorithms.ComputeHash(Byte[], Stream) Namespace : Niacomsoft.Eips.Security.Cryptography Assembly : Niacomsoft.Eips.Core.Abstractions.dll Syntax public interface IAsyncHashAlgorithms : IHashAlgorithms Methods | Improve this Doc View Source ComputeHashAsync(Byte[]) (异步的方法) 计算哈希。 Declaration Task<byte[]> ComputeHashAsync(byte[] input) Parameters Type Name Description Byte [] input 需要计算的字节数组。 Returns Type Description Task < Byte []> 哈希计算后的字节数组。 See Also Task <TResult> | Improve this Doc View Source ComputeHashAsync(Byte[], Stream) (异步的方法) 计算哈希数据，并写入流 stream 。 Declaration Task ComputeHashAsync(byte[] input, Stream stream) Parameters Type Name Description Byte [] input 字节数组。 Stream stream 目标流。 派生自 Stream 类型的对象实例。 Returns Type Description Task See Also Stream Task See Also IHashAlgorithms"
  },
  "api/Niacomsoft.Eips.Security.Cryptography.IAsyncSymmetricAlgorithms.html": {
    "href": "api/Niacomsoft.Eips.Security.Cryptography.IAsyncSymmetricAlgorithms.html",
    "title": "Interface IAsyncSymmetricAlgorithms | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Interface IAsyncSymmetricAlgorithms 定义了异步对称加密算法的接口。 Inherited Members ISymmetricAlgorithms.DefaultCipherMode ISymmetricAlgorithms.DefaultKey ISymmetricAlgorithms.DefaultPaddingMode ISymmetricAlgorithms.Decrypt(Byte[], ISymmetricCryptographicKey, Nullable<CipherMode>, Nullable<PaddingMode>) ISymmetricAlgorithms.Decrypt(Stream, ISymmetricCryptographicKey, Nullable<CipherMode>, Nullable<PaddingMode>) ISymmetricAlgorithms.Encrypt(Byte[], ISymmetricCryptographicKey, Nullable<CipherMode>, Nullable<PaddingMode>) ISymmetricAlgorithms.Encrypt(Byte[], Stream, ISymmetricCryptographicKey, Nullable<CipherMode>, Nullable<PaddingMode>) Namespace : Niacomsoft.Eips.Security.Cryptography Assembly : Niacomsoft.Eips.Core.Abstractions.dll Syntax public interface IAsyncSymmetricAlgorithms : ISymmetricAlgorithms Methods | Improve this Doc View Source DecryptAsync(Byte[], ISymmetricCryptographicKey, Nullable<CipherMode>, Nullable<PaddingMode>) (异步的方法) 解密。 Declaration Task<byte[]> DecryptAsync(byte[] encryptedData, ISymmetricCryptographicKey key = null, CipherMode? mode = null, PaddingMode? padding = null) Parameters Type Name Description Byte [] encryptedData 需要解密的字节数据。 ISymmetricCryptographicKey key 加密密钥。 当 key 等于 null 时，将使用 DefaultKey 。 Nullable < CipherMode > mode 可为空的 CipherMode 类型的值。 当 mode .HasValue 等于 false 时，将使用 DefaultCipherMode 。 Nullable < PaddingMode > padding 可为空的 PaddingMode 类型的值。 当 padding .HasValue 等于 false 时，将使用 DefaultPaddingMode 。 Returns Type Description Task < Byte []> 加密后的字节数据。 See Also ISymmetricAlgorithms CipherMode PaddingMode Task <TResult> | Improve this Doc View Source DecryptAsync(Stream, ISymmetricCryptographicKey, Nullable<CipherMode>, Nullable<PaddingMode>) (异步的方法) 从 sourceStream 读取数据并解密。 Declaration Task<byte[]> DecryptAsync(Stream sourceStream, ISymmetricCryptographicKey key = null, CipherMode? mode = null, PaddingMode? padding = null) Parameters Type Name Description Stream sourceStream 加密的输入流。 派生自 Stream 类型的对象实例。 ISymmetricCryptographicKey key 加密密钥。 当 key 等于 null 时，将使用 DefaultKey 。 Nullable < CipherMode > mode 可为空的 CipherMode 类型的值。 当 mode .HasValue 等于 false 时，将使用 DefaultCipherMode 。 Nullable < PaddingMode > padding 可为空的 PaddingMode 类型的值。 当 padding .HasValue 等于 false 时，将使用 DefaultPaddingMode 。 Returns Type Description Task < Byte []> 解密后的数据。 See Also ISymmetricAlgorithms CipherMode PaddingMode Stream Task <TResult> | Improve this Doc View Source EncryptAsync(Byte[], ISymmetricCryptographicKey, Nullable<CipherMode>, Nullable<PaddingMode>) (异步的方法) 加密。 Declaration Task<byte[]> EncryptAsync(byte[] input, ISymmetricCryptographicKey key = null, CipherMode? mode = null, PaddingMode? padding = null) Parameters Type Name Description Byte [] input 需要加密的字节数据。 ISymmetricCryptographicKey key 加密密钥。 当 key 等于 null 时，将使用 DefaultKey 。 Nullable < CipherMode > mode 可为空的 CipherMode 类型的值。 当 mode .HasValue 等于 false 时，将使用 DefaultCipherMode 。 Nullable < PaddingMode > padding 可为空的 PaddingMode 类型的值。 当 padding .HasValue 等于 false 时，将使用 DefaultPaddingMode 。 Returns Type Description Task < Byte []> 加密后的字节数据。 See Also ISymmetricAlgorithms CipherMode PaddingMode Task <TResult> | Improve this Doc View Source EncryptAsync(Byte[], Stream, ISymmetricCryptographicKey, Nullable<CipherMode>, Nullable<PaddingMode>) (异步的方法) 加密并将加密后的数据写入 destionationStream 。 Declaration Task EncryptAsync(byte[] input, Stream destionationStream, ISymmetricCryptographicKey key = null, CipherMode? mode = null, PaddingMode? padding = null) Parameters Type Name Description Byte [] input 需要加密的字节数据。 Stream destionationStream 目标流。 派生自 Stream 类型的对象实例。 ISymmetricCryptographicKey key 加密密钥。 当 key 等于 null 时，将使用 DefaultKey 。 Nullable < CipherMode > mode 可为空的 CipherMode 类型的值。 当 mode .HasValue 等于 false 时，将使用 DefaultCipherMode 。 Nullable < PaddingMode > padding 可为空的 PaddingMode 类型的值。 当 padding .HasValue 等于 false 时，将使用 DefaultPaddingMode 。 Returns Type Description Task Task 类型的对象实例。 See Also ISymmetricAlgorithms CipherMode PaddingMode Stream Task See Also ISymmetricAlgorithms"
  },
  "api/Niacomsoft.Eips.Security.Cryptography.IHashAlgorithms.html": {
    "href": "api/Niacomsoft.Eips.Security.Cryptography.IHashAlgorithms.html",
    "title": "Interface IHashAlgorithms | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Interface IHashAlgorithms 定义了哈希算法接口。 Namespace : Niacomsoft.Eips.Security.Cryptography Assembly : Niacomsoft.Eips.Core.Abstractions.dll Syntax public interface IHashAlgorithms Methods | Improve this Doc View Source ComputeHash(Byte[]) 计算哈希。 Declaration byte[] ComputeHash(byte[] input) Parameters Type Name Description Byte [] input 需要计算的字节数组。 Returns Type Description Byte [] 哈希计算后的字节数组。 | Improve this Doc View Source ComputeHash(Byte[], Stream) 计算哈希数据，并写入流 stream 。 Declaration void ComputeHash(byte[] input, Stream stream) Parameters Type Name Description Byte [] input 字节数组。 Stream stream 目标流。 派生自 Stream 类型的对象实例。 See Also Stream"
  },
  "api/Niacomsoft.Eips.Security.Cryptography.IHashAlgorithmsFactory.html": {
    "href": "api/Niacomsoft.Eips.Security.Cryptography.IHashAlgorithmsFactory.html",
    "title": "Interface IHashAlgorithmsFactory | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Interface IHashAlgorithmsFactory 定义了创建哈希算法的工厂接口。 Namespace : Niacomsoft.Eips.Security.Cryptography Assembly : Niacomsoft.Eips.Core.Abstractions.dll Syntax public interface IHashAlgorithmsFactory Methods | Improve this Doc View Source Create(SupportedHashAlgorithms) 创建哈希算法。 实现了 IHashAlgorithms 类型接口的对象实例。 Declaration IHashAlgorithms Create(SupportedHashAlgorithms alg = SupportedHashAlgorithms.MD5) Parameters Type Name Description SupportedHashAlgorithms alg 哈希算法。 SupportedHashAlgorithms 类型的值。 Returns Type Description IHashAlgorithms 哈希算法对象实例。 实现了 IHashAlgorithms 类型接口的对象实例。 See Also IHashAlgorithms SupportedHashAlgorithms"
  },
  "api/Niacomsoft.Eips.Security.Cryptography.ISymmetricAlgorithms.html": {
    "href": "api/Niacomsoft.Eips.Security.Cryptography.ISymmetricAlgorithms.html",
    "title": "Interface ISymmetricAlgorithms | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Interface ISymmetricAlgorithms 定义了对称加密算法的接口。 Namespace : Niacomsoft.Eips.Security.Cryptography Assembly : Niacomsoft.Eips.Core.Abstractions.dll Syntax public interface ISymmetricAlgorithms Properties | Improve this Doc View Source DefaultCipherMode 默认的 CipherMode 。 Declaration CipherMode DefaultCipherMode { get; } Property Value Type Description CipherMode 获取一个值，用于表示默认的 CipherMode 。 See Also CipherMode | Improve this Doc View Source DefaultKey 默认的对称加密的密钥。 Declaration ISymmetricCryptographicKey DefaultKey { get; } Property Value Type Description ISymmetricCryptographicKey 获取 ISymmetricCryptographicKey 类型的对象实例，用于表示默认的对称加密的密钥。 See Also ISymmetricCryptographicKey | Improve this Doc View Source DefaultPaddingMode 默认的 PaddingMode 。 Declaration PaddingMode DefaultPaddingMode { get; } Property Value Type Description PaddingMode 设置或获取一个值，用于表示默认的 PaddingMode 。 See Also PaddingMode Methods | Improve this Doc View Source Decrypt(Byte[], ISymmetricCryptographicKey, Nullable<CipherMode>, Nullable<PaddingMode>) 解密。 Declaration byte[] Decrypt(byte[] encryptedData, ISymmetricCryptographicKey key = null, CipherMode? mode = null, PaddingMode? padding = null) Parameters Type Name Description Byte [] encryptedData 需要解密的字节数据。 ISymmetricCryptographicKey key 加密密钥。 当 key 等于 null 时，将使用 DefaultKey 。 Nullable < CipherMode > mode 可为空的 CipherMode 类型的值。 当 mode .HasValue 等于 false 时，将使用 DefaultCipherMode 。 Nullable < PaddingMode > padding 可为空的 PaddingMode 类型的值。 当 padding .HasValue 等于 false 时，将使用 DefaultPaddingMode 。 Returns Type Description Byte [] 加密后的字节数据。 See Also ISymmetricAlgorithms CipherMode PaddingMode | Improve this Doc View Source Decrypt(Stream, ISymmetricCryptographicKey, Nullable<CipherMode>, Nullable<PaddingMode>) 从 sourceStream 读取数据并解密。 Declaration byte[] Decrypt(Stream sourceStream, ISymmetricCryptographicKey key = null, CipherMode? mode = null, PaddingMode? padding = null) Parameters Type Name Description Stream sourceStream 加密的输入流。 派生自 Stream 类型的对象实例。 ISymmetricCryptographicKey key 加密密钥。 当 key 等于 null 时，将使用 DefaultKey 。 Nullable < CipherMode > mode 可为空的 CipherMode 类型的值。 当 mode .HasValue 等于 false 时，将使用 DefaultCipherMode 。 Nullable < PaddingMode > padding 可为空的 PaddingMode 类型的值。 当 padding .HasValue 等于 false 时，将使用 DefaultPaddingMode 。 Returns Type Description Byte [] 解密后的数据。 See Also ISymmetricAlgorithms CipherMode PaddingMode Stream | Improve this Doc View Source Encrypt(Byte[], ISymmetricCryptographicKey, Nullable<CipherMode>, Nullable<PaddingMode>) 加密。 Declaration byte[] Encrypt(byte[] input, ISymmetricCryptographicKey key = null, CipherMode? mode = null, PaddingMode? padding = null) Parameters Type Name Description Byte [] input 需要加密的字节数据。 ISymmetricCryptographicKey key 加密密钥。 当 key 等于 null 时，将使用 DefaultKey 。 Nullable < CipherMode > mode 可为空的 CipherMode 类型的值。 当 mode .HasValue 等于 false 时，将使用 DefaultCipherMode 。 Nullable < PaddingMode > padding 可为空的 PaddingMode 类型的值。 当 padding .HasValue 等于 false 时，将使用 DefaultPaddingMode 。 Returns Type Description Byte [] 加密后的字节数据。 See Also ISymmetricAlgorithms CipherMode PaddingMode | Improve this Doc View Source Encrypt(Byte[], Stream, ISymmetricCryptographicKey, Nullable<CipherMode>, Nullable<PaddingMode>) 加密并将加密后的数据写入 destionationStream 。 Declaration void Encrypt(byte[] input, Stream destionationStream, ISymmetricCryptographicKey key = null, CipherMode? mode = null, PaddingMode? padding = null) Parameters Type Name Description Byte [] input 需要加密的字节数据。 Stream destionationStream 目标流。 派生自 Stream 类型的对象实例。 ISymmetricCryptographicKey key 加密密钥。 当 key 等于 null 时，将使用 DefaultKey 。 Nullable < CipherMode > mode 可为空的 CipherMode 类型的值。 当 mode .HasValue 等于 false 时，将使用 DefaultCipherMode 。 Nullable < PaddingMode > padding 可为空的 PaddingMode 类型的值。 当 padding .HasValue 等于 false 时，将使用 DefaultPaddingMode 。 See Also ISymmetricAlgorithms CipherMode PaddingMode Stream"
  },
  "api/Niacomsoft.Eips.Security.Cryptography.ISymmetricCryptographicKey.html": {
    "href": "api/Niacomsoft.Eips.Security.Cryptography.ISymmetricCryptographicKey.html",
    "title": "Interface ISymmetricCryptographicKey | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Interface ISymmetricCryptographicKey 定义了对称加密算法密钥的接口。 Namespace : Niacomsoft.Eips.Security.Cryptography Assembly : Niacomsoft.Eips.Core.Abstractions.dll Syntax public interface ISymmetricCryptographicKey Methods | Improve this Doc View Source GetKeyData() 获取密钥字节数据。 Declaration byte[] GetKeyData() Returns Type Description Byte [] 字节数组。 See Also UTF8Encoding"
  },
  "api/Niacomsoft.Eips.Security.Cryptography.MD5AlgorithmsProvider.html": {
    "href": "api/Niacomsoft.Eips.Security.Cryptography.MD5AlgorithmsProvider.html",
    "title": "Class MD5AlgorithmsProvider | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class MD5AlgorithmsProvider 提供了 MD5 哈希算法相关的方法。 密闭的，不可以从此类型派生。 Inheritance Object CryptographicAlgorithms HashAlgorithms MD5AlgorithmsProvider Implements IHashAlgorithms Inherited Members CryptographicAlgorithms.NullBinaryData(Byte[]) CryptographicAlgorithms.WriteToStream(Byte[], Stream) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips.Security.Cryptography Assembly : Niacomsoft.Eips.Core.dll Syntax public sealed class MD5AlgorithmsProvider : HashAlgorithms, IHashAlgorithms Constructors | Improve this Doc View Source MD5AlgorithmsProvider() 用于初始化一个 MD5AlgorithmsProvider 类型的对象实例。 Declaration public MD5AlgorithmsProvider() Properties | Improve this Doc View Source Provider 哈希算法。 Declaration protected override HashAlgorithm Provider { get; } Property Value Type Description HashAlgorithm 获取 Niacomsoft.Eips.Security.Cryptography.HashAlgorithms.HashAlgorithm 类型的对象实例，用于表示哈希算法。 派生自 Niacomsoft.Eips.Security.Cryptography.HashAlgorithms.HashAlgorithm 类型的对象实例。 Overrides HashAlgorithms.Provider See Also Niacomsoft.Eips.Security.Cryptography.HashAlgorithms.HashAlgorithm Methods | Improve this Doc View Source ComputeHash(Byte[]) 计算哈希。 Declaration public override byte[] ComputeHash(byte[] input) Parameters Type Name Description Byte [] input 需要计算的字节数组。 Returns Type Description Byte [] 哈希计算后的字节数组。 Overrides HashAlgorithms.ComputeHash(Byte[]) Exceptions Type Condition CryptographicException 当 input 等于 null 时，可能引发此类型的异常。 | Improve this Doc View Source ComputeHash(Byte[], Stream) 计算哈希数据，并写入流 stream 。 Declaration public override void ComputeHash(byte[] input, Stream stream) Parameters Type Name Description Byte [] input 字节数组。 Stream stream 目标流。 派生自 Stream 类型的对象实例。 Overrides HashAlgorithms.ComputeHash(Byte[], Stream) Exceptions Type Condition CryptographicException 当 input 等于 null 时，可能引发此类型的异常。 ArgumentNullException 当 stream 等于 null 时，将引发此类型的异常。 See Also Stream Implements IHashAlgorithms See Also IHashAlgorithms IAsyncHashAlgorithms HashAlgorithms"
  },
  "api/Niacomsoft.Eips.Security.Cryptography.SHA1AlgorithmsProvider.html": {
    "href": "api/Niacomsoft.Eips.Security.Cryptography.SHA1AlgorithmsProvider.html",
    "title": "Class SHA1AlgorithmsProvider | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class SHA1AlgorithmsProvider 提供了 SHA-1 哈希算法相关的方法。 密闭的，不可以从此类型派生。 Inheritance Object CryptographicAlgorithms HashAlgorithms SHA1AlgorithmsProvider Implements IHashAlgorithms Inherited Members CryptographicAlgorithms.NullBinaryData(Byte[]) CryptographicAlgorithms.WriteToStream(Byte[], Stream) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips.Security.Cryptography Assembly : Niacomsoft.Eips.Core.dll Syntax public sealed class SHA1AlgorithmsProvider : HashAlgorithms, IHashAlgorithms Constructors | Improve this Doc View Source SHA1AlgorithmsProvider() 用于初始化一个 SHA1AlgorithmsProvider 类型的对象实例。 Declaration public SHA1AlgorithmsProvider() Properties | Improve this Doc View Source Provider 哈希算法。 Declaration protected override HashAlgorithm Provider { get; } Property Value Type Description HashAlgorithm 获取 Niacomsoft.Eips.Security.Cryptography.HashAlgorithms.HashAlgorithm 类型的对象实例，用于表示哈希算法。 派生自 Niacomsoft.Eips.Security.Cryptography.HashAlgorithms.HashAlgorithm 类型的对象实例。 Overrides HashAlgorithms.Provider See Also Niacomsoft.Eips.Security.Cryptography.HashAlgorithms.HashAlgorithm Methods | Improve this Doc View Source ComputeHash(Byte[]) 计算哈希。 Declaration public override byte[] ComputeHash(byte[] input) Parameters Type Name Description Byte [] input 需要计算的字节数组。 Returns Type Description Byte [] 哈希计算后的字节数组。 Overrides HashAlgorithms.ComputeHash(Byte[]) Exceptions Type Condition CryptographicException 当 input 等于 null 时，可能引发此类型的异常。 | Improve this Doc View Source ComputeHash(Byte[], Stream) 计算哈希数据，并写入流 stream 。 Declaration public override void ComputeHash(byte[] input, Stream stream) Parameters Type Name Description Byte [] input 字节数组。 Stream stream 目标流。 派生自 Stream 类型的对象实例。 Overrides HashAlgorithms.ComputeHash(Byte[], Stream) Exceptions Type Condition CryptographicException 当 input 等于 null 时，可能引发此类型的异常。 ArgumentNullException 当 stream 等于 null 时，将引发此类型的异常。 See Also Stream Implements IHashAlgorithms See Also IHashAlgorithms IAsyncHashAlgorithms HashAlgorithms"
  },
  "api/Niacomsoft.Eips.Security.Cryptography.SHA256AlgorithmsProvider.html": {
    "href": "api/Niacomsoft.Eips.Security.Cryptography.SHA256AlgorithmsProvider.html",
    "title": "Class SHA256AlgorithmsProvider | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class SHA256AlgorithmsProvider 提供了 SHA-256 哈希算法相关的方法。 密闭的，不可以从此类型派生。 Inheritance Object CryptographicAlgorithms HashAlgorithms SHA256AlgorithmsProvider Implements IHashAlgorithms Inherited Members CryptographicAlgorithms.NullBinaryData(Byte[]) CryptographicAlgorithms.WriteToStream(Byte[], Stream) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips.Security.Cryptography Assembly : Niacomsoft.Eips.Core.dll Syntax public sealed class SHA256AlgorithmsProvider : HashAlgorithms, IHashAlgorithms Constructors | Improve this Doc View Source SHA256AlgorithmsProvider() 用于初始化一个 SHA256AlgorithmsProvider 类型的对象实例。 Declaration public SHA256AlgorithmsProvider() Properties | Improve this Doc View Source Provider 哈希算法。 Declaration protected override HashAlgorithm Provider { get; } Property Value Type Description HashAlgorithm 获取 Niacomsoft.Eips.Security.Cryptography.HashAlgorithms.HashAlgorithm 类型的对象实例，用于表示哈希算法。 派生自 Niacomsoft.Eips.Security.Cryptography.HashAlgorithms.HashAlgorithm 类型的对象实例。 Overrides HashAlgorithms.Provider See Also Niacomsoft.Eips.Security.Cryptography.HashAlgorithms.HashAlgorithm Methods | Improve this Doc View Source ComputeHash(Byte[]) 计算哈希。 Declaration public override byte[] ComputeHash(byte[] input) Parameters Type Name Description Byte [] input 需要计算的字节数组。 Returns Type Description Byte [] 哈希计算后的字节数组。 Overrides HashAlgorithms.ComputeHash(Byte[]) Exceptions Type Condition CryptographicException 当 input 等于 null 时，可能引发此类型的异常。 | Improve this Doc View Source ComputeHash(Byte[], Stream) 计算哈希数据，并写入流 stream 。 Declaration public override void ComputeHash(byte[] input, Stream stream) Parameters Type Name Description Byte [] input 字节数组。 Stream stream 目标流。 派生自 Stream 类型的对象实例。 Overrides HashAlgorithms.ComputeHash(Byte[], Stream) Exceptions Type Condition CryptographicException 当 input 等于 null 时，可能引发此类型的异常。 ArgumentNullException 当 stream 等于 null 时，将引发此类型的异常。 See Also Stream Implements IHashAlgorithms See Also IHashAlgorithms IAsyncHashAlgorithms HashAlgorithms"
  },
  "api/Niacomsoft.Eips.Security.Cryptography.SHA384AlgorithmsProvider.html": {
    "href": "api/Niacomsoft.Eips.Security.Cryptography.SHA384AlgorithmsProvider.html",
    "title": "Class SHA384AlgorithmsProvider | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class SHA384AlgorithmsProvider 提供了 SHA-384 哈希算法相关的方法。 密闭的，不可以从此类型派生。 Inheritance Object CryptographicAlgorithms HashAlgorithms SHA384AlgorithmsProvider Implements IHashAlgorithms Inherited Members CryptographicAlgorithms.NullBinaryData(Byte[]) CryptographicAlgorithms.WriteToStream(Byte[], Stream) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips.Security.Cryptography Assembly : Niacomsoft.Eips.Core.dll Syntax public sealed class SHA384AlgorithmsProvider : HashAlgorithms, IHashAlgorithms Constructors | Improve this Doc View Source SHA384AlgorithmsProvider() 用于初始化一个 SHA384AlgorithmsProvider 类型的对象实例。 Declaration public SHA384AlgorithmsProvider() Properties | Improve this Doc View Source Provider 哈希算法。 Declaration protected override HashAlgorithm Provider { get; } Property Value Type Description HashAlgorithm 获取 Niacomsoft.Eips.Security.Cryptography.HashAlgorithms.HashAlgorithm 类型的对象实例，用于表示哈希算法。 派生自 Niacomsoft.Eips.Security.Cryptography.HashAlgorithms.HashAlgorithm 类型的对象实例。 Overrides HashAlgorithms.Provider See Also Niacomsoft.Eips.Security.Cryptography.HashAlgorithms.HashAlgorithm Methods | Improve this Doc View Source ComputeHash(Byte[]) 计算哈希。 Declaration public override byte[] ComputeHash(byte[] input) Parameters Type Name Description Byte [] input 需要计算的字节数组。 Returns Type Description Byte [] 哈希计算后的字节数组。 Overrides HashAlgorithms.ComputeHash(Byte[]) Exceptions Type Condition CryptographicException 当 input 等于 null 时，可能引发此类型的异常。 | Improve this Doc View Source ComputeHash(Byte[], Stream) 计算哈希数据，并写入流 stream 。 Declaration public override void ComputeHash(byte[] input, Stream stream) Parameters Type Name Description Byte [] input 字节数组。 Stream stream 目标流。 派生自 Stream 类型的对象实例。 Overrides HashAlgorithms.ComputeHash(Byte[], Stream) Exceptions Type Condition CryptographicException 当 input 等于 null 时，可能引发此类型的异常。 ArgumentNullException 当 stream 等于 null 时，将引发此类型的异常。 See Also Stream Implements IHashAlgorithms See Also IHashAlgorithms IAsyncHashAlgorithms HashAlgorithms"
  },
  "api/Niacomsoft.Eips.Security.Cryptography.SHA512AlgorithmsProvider.html": {
    "href": "api/Niacomsoft.Eips.Security.Cryptography.SHA512AlgorithmsProvider.html",
    "title": "Class SHA512AlgorithmsProvider | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class SHA512AlgorithmsProvider 提供了 SHA-512 哈希算法相关的方法。 密闭的，不可以从此类型派生。 Inheritance Object CryptographicAlgorithms HashAlgorithms SHA512AlgorithmsProvider Implements IHashAlgorithms Inherited Members CryptographicAlgorithms.NullBinaryData(Byte[]) CryptographicAlgorithms.WriteToStream(Byte[], Stream) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips.Security.Cryptography Assembly : Niacomsoft.Eips.Core.dll Syntax public sealed class SHA512AlgorithmsProvider : HashAlgorithms, IHashAlgorithms Constructors | Improve this Doc View Source SHA512AlgorithmsProvider() 用于初始化一个 SHA512AlgorithmsProvider 类型的对象实例。 Declaration public SHA512AlgorithmsProvider() Properties | Improve this Doc View Source Provider 哈希算法。 Declaration protected override HashAlgorithm Provider { get; } Property Value Type Description HashAlgorithm 获取 Niacomsoft.Eips.Security.Cryptography.HashAlgorithms.HashAlgorithm 类型的对象实例，用于表示哈希算法。 派生自 Niacomsoft.Eips.Security.Cryptography.HashAlgorithms.HashAlgorithm 类型的对象实例。 Overrides HashAlgorithms.Provider See Also Niacomsoft.Eips.Security.Cryptography.HashAlgorithms.HashAlgorithm Methods | Improve this Doc View Source ComputeHash(Byte[]) 计算哈希。 Declaration public override byte[] ComputeHash(byte[] input) Parameters Type Name Description Byte [] input 需要计算的字节数组。 Returns Type Description Byte [] 哈希计算后的字节数组。 Overrides HashAlgorithms.ComputeHash(Byte[]) Exceptions Type Condition CryptographicException 当 input 等于 null 时，可能引发此类型的异常。 | Improve this Doc View Source ComputeHash(Byte[], Stream) 计算哈希数据，并写入流 stream 。 Declaration public override void ComputeHash(byte[] input, Stream stream) Parameters Type Name Description Byte [] input 字节数组。 Stream stream 目标流。 派生自 Stream 类型的对象实例。 Overrides HashAlgorithms.ComputeHash(Byte[], Stream) Exceptions Type Condition CryptographicException 当 input 等于 null 时，可能引发此类型的异常。 ArgumentNullException 当 stream 等于 null 时，将引发此类型的异常。 See Also Stream Implements IHashAlgorithms See Also IHashAlgorithms IAsyncHashAlgorithms HashAlgorithms"
  },
  "api/Niacomsoft.Eips.Security.Cryptography.SupportedHashAlgorithms.html": {
    "href": "api/Niacomsoft.Eips.Security.Cryptography.SupportedHashAlgorithms.html",
    "title": "Enum SupportedHashAlgorithms | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Enum SupportedHashAlgorithms 定义了 EIPS 提供的哈希算法枚举类型。 Namespace : Niacomsoft.Eips.Security.Cryptography Assembly : Niacomsoft.Eips.Common.dll Syntax public enum SupportedHashAlgorithms Fields Name Description Default 默认的哈希算法。等效于 MD5 。 MD5 MD5 哈希算法。 SHA1 SHA-1 哈希算法。 SHA256 SHA-256 哈希算法。 SHA384 SHA-384 哈希算法。 SHA512 SHA-512 哈希算法。"
  },
  "api/Niacomsoft.Eips.Security.Cryptography.SymmetricAlgorithms.html": {
    "href": "api/Niacomsoft.Eips.Security.Cryptography.SymmetricAlgorithms.html",
    "title": "Class SymmetricAlgorithms | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class SymmetricAlgorithms 提供了对称加密相关的基本方法。 Inheritance Object CryptographicAlgorithms SymmetricAlgorithms AES128AlgorithmsProvider AES192AlgorithmsProvider AES256AlgorithmsProvider DESAlgorithmsProvider Implements ISymmetricAlgorithms Inherited Members CryptographicAlgorithms.NullBinaryData(Byte[]) CryptographicAlgorithms.WriteToStream(Byte[], Stream) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips.Security.Cryptography Assembly : Niacomsoft.Eips.Core.Abstractions.dll Syntax public abstract class SymmetricAlgorithms : CryptographicAlgorithms, ISymmetricAlgorithms Constructors | Improve this Doc View Source SymmetricAlgorithms(ISymmetricCryptographicKey, CipherMode, PaddingMode) 用于初始化一个 SymmetricAlgorithms 类型的对象实例。 Declaration protected SymmetricAlgorithms(ISymmetricCryptographicKey key, CipherMode cipherMode = CipherMode.CBC, PaddingMode paddingMode = PaddingMode.PKCS7) Parameters Type Name Description ISymmetricCryptographicKey key 默认的对称加密密钥。 CipherMode cipherMode 默认的 CipherMode 类型的值。 PaddingMode paddingMode 默认的 PaddingMode 类型的值。 Exceptions Type Condition ArgumentNullException 当 key 等于 null 时，将引发此类型的异常。 Properties | Improve this Doc View Source DefaultCipherMode 默认的 CipherMode 。 Declaration public virtual CipherMode DefaultCipherMode { get; } Property Value Type Description CipherMode 获取一个值，用于表示默认的 CipherMode 。 See Also CipherMode | Improve this Doc View Source DefaultKey 默认的对称加密的密钥。 Declaration public virtual ISymmetricCryptographicKey DefaultKey { get; } Property Value Type Description ISymmetricCryptographicKey 获取 ISymmetricCryptographicKey 类型的对象实例，用于表示默认的对称加密的密钥。 See Also ISymmetricCryptographicKey | Improve this Doc View Source DefaultPaddingMode 默认的 PaddingMode 。 Declaration public virtual PaddingMode DefaultPaddingMode { get; } Property Value Type Description PaddingMode 设置或获取一个值，用于表示默认的 PaddingMode 。 See Also PaddingMode | Improve this Doc View Source Provider 对称加密算法。 Declaration protected virtual SymmetricAlgorithm Provider { get; set; } Property Value Type Description SymmetricAlgorithm 设置或获取 SymmetricAlgorithm 类型的对象实例，用于表示对称加密算法。 派生自 SymmetricAlgorithm 类型的对象实例。 See Also SymmetricAlgorithm Methods | Improve this Doc View Source Decrypt(Byte[], ISymmetricCryptographicKey, Nullable<CipherMode>, Nullable<PaddingMode>) 解密。 Declaration public virtual byte[] Decrypt(byte[] encryptedData, ISymmetricCryptographicKey key = null, CipherMode? mode = null, PaddingMode? padding = null) Parameters Type Name Description Byte [] encryptedData 需要解密的字节数据。 ISymmetricCryptographicKey key 加密密钥。 当 key 等于 null 时，将使用 DefaultKey 。 Nullable < CipherMode > mode 可为空的 CipherMode 类型的值。 当 mode .HasValue 等于 false 时，将使用 DefaultCipherMode 。 Nullable < PaddingMode > padding 可为空的 PaddingMode 类型的值。 当 padding .HasValue 等于 false 时，将使用 DefaultPaddingMode 。 Returns Type Description Byte [] 加密后的字节数据。 Exceptions Type Condition CryptographicException 当 encryptedData 等于 null 时，将引发此类型的异常。 See Also ISymmetricAlgorithms CipherMode PaddingMode | Improve this Doc View Source Decrypt(Stream, ISymmetricCryptographicKey, Nullable<CipherMode>, Nullable<PaddingMode>) 从 sourceStream 读取数据并解密。 Declaration public virtual byte[] Decrypt(Stream sourceStream, ISymmetricCryptographicKey key = null, CipherMode? mode = null, PaddingMode? padding = null) Parameters Type Name Description Stream sourceStream 加密的输入流。 派生自 Stream 类型的对象实例。 ISymmetricCryptographicKey key 加密密钥。 当 key 等于 null 时，将使用 DefaultKey 。 Nullable < CipherMode > mode 可为空的 CipherMode 类型的值。 当 mode .HasValue 等于 false 时，将使用 DefaultCipherMode 。 Nullable < PaddingMode > padding 可为空的 PaddingMode 类型的值。 当 padding .HasValue 等于 false 时，将使用 DefaultPaddingMode 。 Returns Type Description Byte [] 解密后的数据。 Exceptions Type Condition ArgumentNullException 当 sourceStream 等于 null 时，将引发此类型的异常。 See Also ISymmetricAlgorithms CipherMode PaddingMode Stream | Improve this Doc View Source Encrypt(Byte[], ISymmetricCryptographicKey, Nullable<CipherMode>, Nullable<PaddingMode>) 加密。 Declaration public virtual byte[] Encrypt(byte[] input, ISymmetricCryptographicKey key = null, CipherMode? mode = null, PaddingMode? padding = null) Parameters Type Name Description Byte [] input 需要加密的字节数据。 ISymmetricCryptographicKey key 加密密钥。 当 key 等于 null 时，将使用 DefaultKey 。 Nullable < CipherMode > mode 可为空的 CipherMode 类型的值。 当 mode .HasValue 等于 false 时，将使用 DefaultCipherMode 。 Nullable < PaddingMode > padding 可为空的 PaddingMode 类型的值。 当 padding .HasValue 等于 false 时，将使用 DefaultPaddingMode 。 Returns Type Description Byte [] 加密后的字节数据。 Exceptions Type Condition CryptographicException 当 input 等于 null 时，将引发此类型的异常。 See Also ISymmetricAlgorithms CipherMode PaddingMode | Improve this Doc View Source Encrypt(Byte[], Stream, ISymmetricCryptographicKey, Nullable<CipherMode>, Nullable<PaddingMode>) 加密并将加密后的数据写入 destionationStream 。 Declaration public virtual void Encrypt(byte[] input, Stream destionationStream, ISymmetricCryptographicKey key = null, CipherMode? mode = null, PaddingMode? padding = null) Parameters Type Name Description Byte [] input 需要加密的字节数据。 Stream destionationStream 目标流。 派生自 Stream 类型的对象实例。 ISymmetricCryptographicKey key 加密密钥。 当 key 等于 null 时，将使用 DefaultKey 。 Nullable < CipherMode > mode 可为空的 CipherMode 类型的值。 当 mode .HasValue 等于 false 时，将使用 DefaultCipherMode 。 Nullable < PaddingMode > padding 可为空的 PaddingMode 类型的值。 当 padding .HasValue 等于 false 时，将使用 DefaultPaddingMode 。 Exceptions Type Condition ArgumentNullException 当 destionationStream 等于 null 时，将引发此类型的异常。 CryptographicException 当调用 Encrypt(Byte[], ISymmetricCryptographicKey, Nullable<CipherMode>, Nullable<PaddingMode>) 方法时，可能引发此类型的异常。 See Also ISymmetricAlgorithms CipherMode PaddingMode Stream | Improve this Doc View Source InitializeSymmetricAlgorithmsProvider(ISymmetricCryptographicKey, CipherMode, PaddingMode) 初始化对称加密算法。 Declaration protected virtual void InitializeSymmetricAlgorithmsProvider(ISymmetricCryptographicKey key, CipherMode mode, PaddingMode padding) Parameters Type Name Description ISymmetricCryptographicKey key 实现了 ISymmetricCryptographicKey 类型接口的对象实例。 CipherMode mode CipherMode 类型的值。 PaddingMode padding PaddingMode 类型的值。 See Also ISymmetricCryptographicKey CipherMode PaddingMode Implements ISymmetricAlgorithms See Also ISymmetricAlgorithms IAsyncSymmetricAlgorithms CryptographicAlgorithms"
  },
  "api/Niacomsoft.Eips.Security.Cryptography.SymmetricCryptographicKey.html": {
    "href": "api/Niacomsoft.Eips.Security.Cryptography.SymmetricCryptographicKey.html",
    "title": "Class SymmetricCryptographicKey | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class SymmetricCryptographicKey 提供了访问对称加密算法密钥相关的基本方法。 Inheritance Object SymmetricCryptographicKey DESCryptographicKey Implements ISymmetricCryptographicKey Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips.Security.Cryptography Assembly : Niacomsoft.Eips.Core.Abstractions.dll Syntax public abstract class SymmetricCryptographicKey : ISymmetricCryptographicKey Methods | Improve this Doc View Source GetKeyData() 获取密钥字节数据。 Declaration public virtual byte[] GetKeyData() Returns Type Description Byte [] 字节数组。 Exceptions Type Condition ArgumentException 当方法 InternalGetKeyString() 返回 null 或 Empty 时，将引发此类型的异常。 See Also UTF8Encoding | Improve this Doc View Source InternalGetKeyString() 获取密钥字符串。 Declaration protected abstract string InternalGetKeyString() Returns Type Description String 密钥字符串。 Implements ISymmetricCryptographicKey See Also ISymmetricCryptographicKey"
  },
  "api/Niacomsoft.Eips.Security.html": {
    "href": "api/Niacomsoft.Eips.Security.html",
    "title": "Namespace Niacomsoft.Eips.Security | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Namespace Niacomsoft.Eips.Security Classes IncorrectPasswordAlphabetLengthException 当生成密码的字母表字符串长度小于 8 时，将引发此类型的异常。 密闭的，不可以从此类型派生。 RandomPasswordGenerator 提供了生成随机密码相关的方法。 密闭的，不可以从此类型派生。 Interfaces IPasswordGenerateUtilities 定义了生成密码的接口。"
  },
  "api/Niacomsoft.Eips.Security.IncorrectPasswordAlphabetLengthException.html": {
    "href": "api/Niacomsoft.Eips.Security.IncorrectPasswordAlphabetLengthException.html",
    "title": "Class IncorrectPasswordAlphabetLengthException | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class IncorrectPasswordAlphabetLengthException 当生成密码的字母表字符串长度小于 8 时，将引发此类型的异常。 密闭的，不可以从此类型派生。 Inheritance Object Exception IncorrectPasswordAlphabetLengthException Implements ISerializable _Exception Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace : Niacomsoft.Eips.Security Assembly : Niacomsoft.Eips.Common.dll Syntax public sealed class IncorrectPasswordAlphabetLengthException : Exception, ISerializable, _Exception Constructors | Improve this Doc View Source IncorrectPasswordAlphabetLengthException() 用于初始化一个 IncorrectPasswordAlphabetLengthException 类型的对象实例。 Declaration public IncorrectPasswordAlphabetLengthException() Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception See Also Exception"
  },
  "api/Niacomsoft.Eips.Security.IPasswordGenerateUtilities.html": {
    "href": "api/Niacomsoft.Eips.Security.IPasswordGenerateUtilities.html",
    "title": "Interface IPasswordGenerateUtilities | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Interface IPasswordGenerateUtilities 定义了生成密码的接口。 Namespace : Niacomsoft.Eips.Security Assembly : Niacomsoft.Eips.Core.Abstractions.dll Syntax public interface IPasswordGenerateUtilities Properties | Improve this Doc View Source Alphabet 生成密码的字母表。 Declaration string Alphabet { get; set; } Property Value Type Description String 设置或获取一个字符串，用于表示生成密码的字母表。 Methods | Improve this Doc View Source CreateNew(Int32) 创建新的密码 Declaration string CreateNew(int size = 8) Parameters Type Name Description Int32 size 密码长度。 Returns Type Description String 新的随机密码。"
  },
  "api/Niacomsoft.Eips.Security.Principal.ClaimsName.html": {
    "href": "api/Niacomsoft.Eips.Security.Principal.ClaimsName.html",
    "title": "Class ClaimsName | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class ClaimsName 提供了内置的身份信息点名称。 Inheritance Object ClaimsName Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips.Security.Principal Assembly : Niacomsoft.Eips.Core.dll Syntax public class ClaimsName Fields | Improve this Doc View Source Name 用户真实姓名。 Declaration public const string Name = \"e-rn\" Field Value Type Description String | Improve this Doc View Source NickName 用户昵称。 Declaration public const string NickName = \"e-nn\" Field Value Type Description String | Improve this Doc View Source OpenId 用户在子系统中的开放标识。 Declaration public const string OpenId = \"e-oid\" Field Value Type Description String | Improve this Doc View Source UniqueId 用户在 EIPS 中的唯一标识。 Declaration public const string UniqueId = \"e-uid\" Field Value Type Description String | Improve this Doc View Source UserName 登录用户名。 Declaration public const string UserName = \"e-un\" Field Value Type Description String"
  },
  "api/Niacomsoft.Eips.Security.Principal.html": {
    "href": "api/Niacomsoft.Eips.Security.Principal.html",
    "title": "Namespace Niacomsoft.Eips.Security.Principal | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Namespace Niacomsoft.Eips.Security.Principal Classes ClaimsName 提供了内置的身份信息点名称。"
  },
  "api/Niacomsoft.Eips.Security.RandomPasswordGenerator.html": {
    "href": "api/Niacomsoft.Eips.Security.RandomPasswordGenerator.html",
    "title": "Class RandomPasswordGenerator | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class RandomPasswordGenerator 提供了生成随机密码相关的方法。 密闭的，不可以从此类型派生。 Inheritance Object RandomPasswordGenerator Implements IPasswordGenerateUtilities Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips.Security Assembly : Niacomsoft.Eips.Core.dll Syntax public sealed class RandomPasswordGenerator : IPasswordGenerateUtilities Constructors | Improve this Doc View Source RandomPasswordGenerator() 用于初始化一个 RandomPasswordGenerator 类型的对象实例。 Declaration public RandomPasswordGenerator() See Also Defaults DefaultPasswordAlphabet | Improve this Doc View Source RandomPasswordGenerator(String) 用于初始化一个 RandomPasswordGenerator 类型的对象实例。 Declaration public RandomPasswordGenerator(string alphabet) Parameters Type Name Description String alphabet 随机密码字母表。 Exceptions Type Condition IncorrectPasswordAlphabetLengthException 当 alphabet 长度小于 8 时，将引发此类型的异常。 Properties | Improve this Doc View Source Alphabet 生成密码的字母表。 Declaration public string Alphabet { get; set; } Property Value Type Description String 设置或获取一个字符串，用于表示生成密码的字母表。 Methods | Improve this Doc View Source CreateNew(Int32) 创建新的密码 Declaration public string CreateNew(int size = 8) Parameters Type Name Description Int32 size 密码长度。 Returns Type Description String 新的随机密码。 Implements IPasswordGenerateUtilities See Also IPasswordGenerateUtilities"
  },
  "api/Niacomsoft.Eips.StringEqualityComparer.html": {
    "href": "api/Niacomsoft.Eips.StringEqualityComparer.html",
    "title": "Class StringEqualityComparer | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class StringEqualityComparer 提供了字符串相等对比相关的方法。 Inheritance Object StringEqualityComparer Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips Assembly : Niacomsoft.Eips.Common.dll Syntax public class StringEqualityComparer Methods | Improve this Doc View Source Empty(String, EmptyCompareOptions) 用于校验字符串 s 是否等于 null 、 Empty 或者空格符（需要参考 options 的值）。 Declaration public static bool Empty(string s, EmptyCompareOptions options = EmptyCompareOptions.IncludeWhiteSpace) Parameters Type Name Description String s 需要对比的字符串。 EmptyCompareOptions options 空白字符串对比选项。 默认为 Default 。 Returns Type Description Boolean 当字符串 s 等于 null 、 Empty 或者空格符（需要参考 options 的值）时，则返回 true ；否则返回 false 。 See Also EmptyCompareOptions | Improve this Doc View Source IgnoreCaseEquals(String, String) 忽略字符串的大小写，对比 s1 与 s2 是否相等。 Declaration public static bool IgnoreCaseEquals(string s1, string s2) Parameters Type Name Description String s1 字符串。 String s2 字符串。 Returns Type Description Boolean 当 s1 与 s2 忽略大小写相等时，则返回 true ；否则返回 false 。 当 s1 和 s2 都为 null 时，则返回 true ；否则返回 false 。 See Also Equals(String, StringComparison)"
  },
  "api/Niacomsoft.Eips.StringUtilities.html": {
    "href": "api/Niacomsoft.Eips.StringUtilities.html",
    "title": "Class StringUtilities | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class StringUtilities 提供了字符串相关的辅助方法。 Inheritance Object StringUtilities Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips Assembly : Niacomsoft.Eips.Common.dll Syntax public class StringUtilities Methods | Improve this Doc View Source FromBase64String(String) 从 BASE-64 格式字符串获取字节数组。 Declaration public static byte[] FromBase64String(string base64Str) Parameters Type Name Description String base64Str BASE-64 格式字符串。 Returns Type Description Byte [] 字节数组。 当字符串 base64Str 等于 null 或者 Empty 时，将返回 null 。 Exceptions Type Condition FormatException 当调用 FromBase64String(String) 方法时，可能引发此类型的异常。 See Also Convert | Improve this Doc View Source GetBytes(String, Encoding) 使用指定的编码获取字符串 s 的字节数组。 Declaration public static byte[] GetBytes(string s, Encoding encoding = null) Parameters Type Name Description String s 字符串。 Encoding encoding 编码程序。 派生自 Encoding 类型的对象实例。 当 encoding 等于 null 时，将使用 DefaultEncoding 。 Returns Type Description Byte [] 字节数组。 当 s 等于 null 时，将返回 null 。 See Also Encoding DefaultEncoding | Improve this Doc View Source GetString(Byte[], Encoding) 使用指定的编码获取字符串。 Declaration public static string GetString(byte[] bytes, Encoding encoding = null) Parameters Type Name Description Byte [] bytes 字节数组。 Encoding encoding 编码程序。 当 encoding 等于 null 时，将使用 DefaultEncoding 。 Returns Type Description String 字符串。 当 bytes 等于 null 或者长度等于 0 时，将返回 null 。 See Also Encoding DefaultEncoding | Improve this Doc View Source ToBase64String(Byte[], Base64FormattingOptions) 将字节数组 bytes 转换成 BASE-64 格式字符串。 Declaration public static string ToBase64String(byte[] bytes, Base64FormattingOptions options = Base64FormattingOptions.None) Parameters Type Name Description Byte [] bytes 字节数组。 Base64FormattingOptions options BASE-64 格式化选项。 Base64FormattingOptions 类型的值。 Returns Type Description String BASE-64 格式字符串。 当 bytes 等于 null 或者长度等于 0 时，将返回 null 。 See Also Base64FormattingOptions Convert | Improve this Doc View Source ToCurrency(Decimal, Int32, CultureInfo) 将 value 转换成货币格式字符串。 Declaration public static string ToCurrency(decimal value, int precision = 2, CultureInfo culture = null) Parameters Type Name Description Decimal value Decimal 类型的值。 Int32 precision 货币精度。 CultureInfo culture 文化区域。 CultureInfo 类型的对象实例。 Returns Type Description String 货币字符串。 See Also CultureInfo | Improve this Doc View Source ToCurrency(Double, Int32, CultureInfo) 将 value 转换成货币格式字符串。 Declaration public static string ToCurrency(double value, int precision = 2, CultureInfo culture = null) Parameters Type Name Description Double value Double 类型的值。 Int32 precision 货币精度。 CultureInfo culture 文化区域。 CultureInfo 类型的对象实例。 Returns Type Description String 货币字符串。 See Also CultureInfo | Improve this Doc View Source ToCurrency(Int16, Int16, CultureInfo) 将 value 转换成货币格式字符串。 Declaration public static string ToCurrency(short value, short precision = 2, CultureInfo culture = null) Parameters Type Name Description Int16 value Int16 类型的值。 Int16 precision 货币精度。 CultureInfo culture 文化区域。 CultureInfo 类型的对象实例。 Returns Type Description String 货币字符串。 See Also CultureInfo | Improve this Doc View Source ToCurrency(Int32, Int32, CultureInfo) 将 value 转换成货币格式字符串。 Declaration public static string ToCurrency(int value, int precision = 2, CultureInfo culture = null) Parameters Type Name Description Int32 value Int32 类型的值。 Int32 precision 货币精度。 CultureInfo culture 文化区域。 CultureInfo 类型的对象实例。 Returns Type Description String 货币字符串。 See Also CultureInfo | Improve this Doc View Source ToCurrency(Int64, Int64, CultureInfo) 将 value 转换成货币格式字符串。 Declaration public static string ToCurrency(long value, long precision = 2L, CultureInfo culture = null) Parameters Type Name Description Int64 value Int64 类型的值。 Int64 precision 货币精度。 CultureInfo culture 文化区域。 CultureInfo 类型的对象实例。 Returns Type Description String 货币字符串。 See Also CultureInfo | Improve this Doc View Source ToCurrency(Single, Int32, CultureInfo) 将 value 转换成货币格式字符串。 Declaration public static string ToCurrency(float value, int precision = 2, CultureInfo culture = null) Parameters Type Name Description Single value Single 类型的值。 Int32 precision 货币精度。 CultureInfo culture 文化区域。 CultureInfo 类型的对象实例。 Returns Type Description String 货币字符串。 See Also CultureInfo | Improve this Doc View Source ToDateTime(String) 将字符串转换成等效的 DateTime 类型的值。 Declaration public static DateTime ToDateTime(string s) Parameters Type Name Description String s 字符串。 Returns Type Description DateTime 等效的 DateTime 类型的值。 Exceptions Type Condition FormatException 当调用 Parse(String) 方法时，可能引发此类型的异常。 OverflowException 当调用 Parse(String) 方法时，可能引发此类型的异常。 | Improve this Doc View Source ToDecimal(String) 将字符串转换成等效的 Decimal 类型的值。 Declaration public static decimal ToDecimal(string s) Parameters Type Name Description String s 字符串。 Returns Type Description Decimal 等效的 Decimal 类型的值。 Exceptions Type Condition FormatException 当调用 Parse(String) 方法时，可能引发此类型的异常。 OverflowException 当调用 Parse(String) 方法时，可能引发此类型的异常。 | Improve this Doc View Source ToDouble(String) 将字符串转换成等效的 Double 类型的值。 Declaration public static double ToDouble(string s) Parameters Type Name Description String s 字符串。 Returns Type Description Double 等效的 Double 类型的值。 Exceptions Type Condition FormatException 当调用 Parse(String) 方法时，可能引发此类型的异常。 OverflowException 当调用 Parse(String) 方法时，可能引发此类型的异常。 | Improve this Doc View Source ToFixed(Decimal, Int32) 将 value 转换成固定点数字字符串。 Declaration public static string ToFixed(decimal value, int precision = 2) Parameters Type Name Description Decimal value Decimal 类型的值。 Int32 precision 小数精度。 Returns Type Description String 固定小数精度的数字字符串。 | Improve this Doc View Source ToFixed(Double, Int32) 将 value 转换成固定点数字字符串。 Declaration public static string ToFixed(double value, int precision = 2) Parameters Type Name Description Double value Double 类型的值。 Int32 precision 小数精度。 Returns Type Description String 固定小数精度的数字字符串。 | Improve this Doc View Source ToFixed(Int16, Int16) 将 value 转换成固定点数字字符串。 Declaration public static string ToFixed(short value, short precision = 2) Parameters Type Name Description Int16 value Int16 类型的值。 Int16 precision 小数精度。 Returns Type Description String 固定小数精度的数字字符串。 | Improve this Doc View Source ToFixed(Int32, Int32) 将 value 转换成固定点数字字符串。 Declaration public static string ToFixed(int value, int precision = 2) Parameters Type Name Description Int32 value Int32 类型的值。 Int32 precision 小数精度。 Returns Type Description String 固定小数精度的数字字符串。 | Improve this Doc View Source ToFixed(Int64, Int64) 将 value 转换成固定点数字字符串。 Declaration public static string ToFixed(long value, long precision = 2L) Parameters Type Name Description Int64 value Int64 类型的值。 Int64 precision 小数精度。 Returns Type Description String 固定小数精度的数字字符串。 | Improve this Doc View Source ToFixed(Single, Int32) 将 value 转换成固定点数字字符串。 Declaration public static string ToFixed(float value, int precision = 2) Parameters Type Name Description Single value Single 类型的值。 Int32 precision 小数精度。 Returns Type Description String 固定小数精度的数字字符串。 | Improve this Doc View Source ToGuid(String) 将字符串转换成等效的 Guid 类型的值。 Declaration public static Guid ToGuid(string s) Parameters Type Name Description String s 字符串。 Returns Type Description Guid 等效的 Guid 类型的值。 Exceptions Type Condition FormatException 当调用 Parse(String) 方法时，可能引发此类型的异常。 OverflowException 当调用 Parse(String) 方法时，可能引发此类型的异常。 | Improve this Doc View Source ToHex(Int16) 将 value 转换成十六进制字符串。 Declaration public static string ToHex(short value) Parameters Type Name Description Int16 value Int16 类型的值。 Returns Type Description String 十六进制字符串。 | Improve this Doc View Source ToHex(Int32) 将 value 转换成十六进制字符串。 Declaration public static string ToHex(int value) Parameters Type Name Description Int32 value Int32 类型的值。 Returns Type Description String 十六进制字符串。 | Improve this Doc View Source ToHex(Int64) 将 value 转换成十六进制字符串。 Declaration public static string ToHex(long value) Parameters Type Name Description Int64 value Int64 类型的值。 Returns Type Description String 十六进制字符串。 | Improve this Doc View Source ToInt(String) 将字符串转换成等效的 Int32 类型的值。 Declaration public static int ToInt(string s) Parameters Type Name Description String s 字符串。 Returns Type Description Int32 等效的 Int32 类型的值。 Exceptions Type Condition FormatException 当调用 Parse(String) 方法时，可能引发此类型的异常。 OverflowException 当调用 Parse(String) 方法时，可能引发此类型的异常。 | Improve this Doc View Source ToInt16(String) 将字符串转换成等效的 Int16 类型的值。 Declaration public static short ToInt16(string s) Parameters Type Name Description String s 字符串。 Returns Type Description Int16 等效的 Int16 类型的值。 Exceptions Type Condition FormatException 当调用 Parse(String) 方法时，可能引发此类型的异常。 OverflowException 当调用 Parse(String) 方法时，可能引发此类型的异常。 | Improve this Doc View Source ToInt64(String) 将字符串转换成等效的 Int64 类型的值。 Declaration public static long ToInt64(string s) Parameters Type Name Description String s 字符串。 Returns Type Description Int64 等效的 Int64 类型的值。 Exceptions Type Condition FormatException 当调用 Parse(String) 方法时，可能引发此类型的异常。 OverflowException 当调用 Parse(String) 方法时，可能引发此类型的异常。 | Improve this Doc View Source ToSingle(String) 将字符串转换成等效的 Single 类型的值。 Declaration public static float ToSingle(string s) Parameters Type Name Description String s 字符串。 Returns Type Description Single 等效的 Single 类型的值。 Exceptions Type Condition FormatException 当调用 Parse(String) 方法时，可能引发此类型的异常。 OverflowException 当调用 Parse(String) 方法时，可能引发此类型的异常。 | Improve this Doc View Source TryToDateTime(String) 尝试将字符串转换成等效的可为空的 DateTime 类型的值。 Declaration public static DateTime? TryToDateTime(string s) Parameters Type Name Description String s 字符串。 Returns Type Description Nullable < DateTime > 当调用 TryParse(String, DateTime) 方法返回 false 时，将返回 null 。 | Improve this Doc View Source TryToDecimal(String) 尝试将字符串转换成等效的可为空的 Decimal 类型的值。 Declaration public static decimal? TryToDecimal(string s) Parameters Type Name Description String s 字符串。 Returns Type Description Nullable < Decimal > 当调用 TryParse(String, Decimal) 方法返回 false 时，将返回 null 。 | Improve this Doc View Source TryToDouble(String) 尝试将字符串转换成等效的可为空的 Double 类型的值。 Declaration public static double? TryToDouble(string s) Parameters Type Name Description String s 字符串。 Returns Type Description Nullable < Double > 当调用 TryParse(String, Double) 方法返回 false 时，将返回 null 。 | Improve this Doc View Source TryToGuid(String) 尝试将字符串转换成等效的可为空的 Guid 类型的值。 Declaration public static Guid? TryToGuid(string s) Parameters Type Name Description String s 字符串。 Returns Type Description Nullable < Guid > 当调用 TryParse(String, Guid) 方法返回 false 时，将返回 null 。 | Improve this Doc View Source TryToInt(String) 尝试将字符串转换成等效的可为空的 Int32 类型的值。 Declaration public static int? TryToInt(string s) Parameters Type Name Description String s 字符串。 Returns Type Description Nullable < Int32 > 当调用 TryParse(String, Int32) 方法返回 false 时，将返回 null 。 | Improve this Doc View Source TryToInt16(String) 尝试将字符串转换成等效的可为空的 Int16 类型的值。 Declaration public static short? TryToInt16(string s) Parameters Type Name Description String s 字符串。 Returns Type Description Nullable < Int16 > 当调用 TryParse(String, Int16) 方法返回 false 时，将返回 null 。 | Improve this Doc View Source TryToInt64(String) 尝试将字符串转换成等效的可为空的 Int64 类型的值。 Declaration public static long? TryToInt64(string s) Parameters Type Name Description String s 字符串。 Returns Type Description Nullable < Int64 > 当调用 TryParse(String, Int64) 方法返回 false 时，将返回 null 。 | Improve this Doc View Source TryToSingle(String) 尝试将字符串转换成等效的可为空的 Single 类型的值。 Declaration public static float? TryToSingle(string s) Parameters Type Name Description String s 字符串。 Returns Type Description Nullable < Single > 当调用 TryParse(String, Single) 方法返回 false 时，将返回 null 。 | Improve this Doc View Source WithThousandSeparators(Decimal, Int32) 将 value 转换成含千分符的数字字符串。 Declaration public static string WithThousandSeparators(decimal value, int precision = 2) Parameters Type Name Description Decimal value Decimal 类型的值。 Int32 precision 小数精度。 Returns Type Description String 包含千分符的数字字符串。 | Improve this Doc View Source WithThousandSeparators(Double, Int32) 将 value 转换成含千分符的数字字符串。 Declaration public static string WithThousandSeparators(double value, int precision = 2) Parameters Type Name Description Double value Double 类型的值。 Int32 precision 小数精度。 Returns Type Description String 包含千分符的数字字符串。 | Improve this Doc View Source WithThousandSeparators(Int16, Int16) 将 value 转换成含千分符的数字字符串。 Declaration public static string WithThousandSeparators(short value, short precision = 2) Parameters Type Name Description Int16 value Int16 类型的值。 Int16 precision 小数精度。 Returns Type Description String 包含千分符的数字字符串。 | Improve this Doc View Source WithThousandSeparators(Int32, Int32) 将 value 转换成含千分符的数字字符串。 Declaration public static string WithThousandSeparators(int value, int precision = 2) Parameters Type Name Description Int32 value Int32 类型的值。 Int32 precision 小数精度。 Returns Type Description String 包含千分符的数字字符串。 | Improve this Doc View Source WithThousandSeparators(Int64, Int64) 将 value 转换成含千分符的数字字符串。 Declaration public static string WithThousandSeparators(long value, long precision = 2L) Parameters Type Name Description Int64 value Int64 类型的值。 Int64 precision 小数精度。 Returns Type Description String 包含千分符的数字字符串。 | Improve this Doc View Source WithThousandSeparators(Single, Int32) 将 value 转换成含千分符的数字字符串。 Declaration public static string WithThousandSeparators(float value, int precision = 2) Parameters Type Name Description Single value Single 类型的值。 Int32 precision 小数精度。 Returns Type Description String 包含千分符的数字字符串。"
  },
  "api/Niacomsoft.Eips.ValueTypeComparer.html": {
    "href": "api/Niacomsoft.Eips.ValueTypeComparer.html",
    "title": "Class ValueTypeComparer | 企业私有化 SaaS 服务 - API 说明",
    "keywords": "Class ValueTypeComparer 提供了值类型比较相关的方法。 Inheritance Object ValueTypeComparer Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Niacomsoft.Eips Assembly : Niacomsoft.Eips.Common.dll Syntax public class ValueTypeComparer Methods | Improve this Doc View Source Compare(Decimal, Decimal, NumberComparisonSymbols) 比较 value1 和 value2 。 Declaration public static bool Compare(decimal value1, decimal value2 = 0M, NumberComparisonSymbols symbol = NumberComparisonSymbols.Equal) Parameters Type Name Description Decimal value1 Decimal 类型的值。 Decimal value2 Decimal 类型的值。 NumberComparisonSymbols symbol 数字对比符号。 NumberComparisonSymbols 类型的值。 Returns Type Description Boolean 当 value1 与 value2 满足对比符号 symbol 时，则返回 true ；否则返回 false 。 比如， symbol 等于 GreaterThan 时，则返回 value1 > value2 。 See Also NumberComparisonSymbols | Improve this Doc View Source Compare(Double, Double, NumberComparisonSymbols) 比较 value1 和 value2 。 Declaration public static bool Compare(double value1, double value2 = 0, NumberComparisonSymbols symbol = NumberComparisonSymbols.Equal) Parameters Type Name Description Double value1 Double 类型的值。 Double value2 Double 类型的值。 NumberComparisonSymbols symbol 数字对比符号。 NumberComparisonSymbols 类型的值。 Returns Type Description Boolean 当 value1 与 value2 满足对比符号 symbol 时，则返回 true ；否则返回 false 。 比如， symbol 等于 GreaterThan 时，则返回 value1 > value2 。 See Also NumberComparisonSymbols | Improve this Doc View Source Compare(Int16, Int16, NumberComparisonSymbols) 比较 value1 和 value2 。 Declaration public static bool Compare(short value1, short value2 = 0, NumberComparisonSymbols symbol = NumberComparisonSymbols.Equal) Parameters Type Name Description Int16 value1 Int16 类型的值。 Int16 value2 Int16 类型的值。 NumberComparisonSymbols symbol 数字对比符号。 NumberComparisonSymbols 类型的值。 Returns Type Description Boolean 当 value1 与 value2 满足对比符号 symbol 时，则返回 true ；否则返回 false 。 比如， symbol 等于 GreaterThan 时，则返回 value1 > value2 。 See Also NumberComparisonSymbols | Improve this Doc View Source Compare(Int32, Int32, NumberComparisonSymbols) 比较 value1 和 value2 。 Declaration public static bool Compare(int value1, int value2 = 0, NumberComparisonSymbols symbol = NumberComparisonSymbols.Equal) Parameters Type Name Description Int32 value1 Int32 类型的值。 Int32 value2 Int32 类型的值。 NumberComparisonSymbols symbol 数字对比符号。 NumberComparisonSymbols 类型的值。 Returns Type Description Boolean 当 value1 与 value2 满足对比符号 symbol 时，则返回 true ；否则返回 false 。 比如， symbol 等于 GreaterThan 时，则返回 value1 > value2 。 See Also NumberComparisonSymbols | Improve this Doc View Source Compare(Int64, Int64, NumberComparisonSymbols) 比较 value1 和 value2 。 Declaration public static bool Compare(long value1, long value2 = 0L, NumberComparisonSymbols symbol = NumberComparisonSymbols.Equal) Parameters Type Name Description Int64 value1 Int64 类型的值。 Int64 value2 Int64 类型的值。 NumberComparisonSymbols symbol 数字对比符号。 NumberComparisonSymbols 类型的值。 Returns Type Description Boolean 当 value1 与 value2 满足对比符号 symbol 时，则返回 true ；否则返回 false 。 比如， symbol 等于 GreaterThan 时，则返回 value1 > value2 。 See Also NumberComparisonSymbols | Improve this Doc View Source Compare(Single, Single, NumberComparisonSymbols) 比较 value1 和 value2 。 Declaration public static bool Compare(float value1, float value2 = 0F, NumberComparisonSymbols symbol = NumberComparisonSymbols.Equal) Parameters Type Name Description Single value1 Single 类型的值。 Single value2 Single 类型的值。 NumberComparisonSymbols symbol 数字对比符号。 NumberComparisonSymbols 类型的值。 Returns Type Description Boolean 当 value1 与 value2 满足对比符号 symbol 时，则返回 true ；否则返回 false 。 比如， symbol 等于 GreaterThan 时，则返回 value1 > value2 。 See Also NumberComparisonSymbols"
  }
}